{"version":3,"sources":["webpack:///src/app/_services/sensor.service.ts","webpack:///src/app/private-components/data-chart/data-chart.component.ts","webpack:///src/app/private-components/data-chart/data-chart.component.html","webpack:///src/app/_helpers/admin.guard.ts","webpack:///src/app/private-components/settings/settings.component.ts","webpack:///src/app/private-components/settings/settings.component.html","webpack:///src/app/_helpers/your.guard.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/user-frame/user-frame.component.ts","webpack:///src/app/user-frame/user-frame.component.html","webpack:///src/app/_helpers/desktop.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/private-components/application/application.component.ts","webpack:///src/app/private-components/application/application.component.html","webpack:///src/app/private-components/sensor/sensor.component.ts","webpack:///src/app/private-components/sensor/sensor.component.html","webpack:///src/app/private-components/info/info.component.ts","webpack:///src/app/private-components/info/info.component.html","webpack:///src/app/private-components/sensor-settings/sensor-settings.component.ts","webpack:///src/app/private-components/sensor-settings/sensor-settings.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/_helpers/admin.jwt.interceptor.ts","webpack:///src/app/admin-components/signup/signup.component.ts","webpack:///src/app/admin-components/signup/signup.component.html","webpack:///src/app/_services/user.service.ts","webpack:///src/app/private-components/equipment/equipment.component.ts","webpack:///src/app/private-components/equipment/equipment.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/admin-components/login/login.component.ts","webpack:///src/app/admin-components/login/login.component.html","webpack:///src/app/private-components/data-get-one/data-get-one.component.ts","webpack:///src/app/private-components/data-get-one/data-get-one.component.html","webpack:///src/app/desktop-application/desktop-application.component.ts","webpack:///src/app/desktop-application/desktop-application.component.html","webpack:///src/app/private-components/data-get-range/data-get-range.component.ts","webpack:///src/app/private-components/data-get-range/data-get-range.component.html","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/admin-components/admin-home/admin-home.component.ts","webpack:///src/app/admin-components/admin-home/admin-home.component.html","webpack:///src/app/admin-components/admin-control/admin-control.component.ts","webpack:///src/app/admin-components/admin-control/admin-control.component.html","webpack:///src/app/_services/admin.authentication.service.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/data.service.ts","webpack:///src/app/_helpers/filter.pipe.ts","webpack:///src/app/admin-components/admin-add-code/admin-add-code.component.ts","webpack:///src/app/admin-components/admin-add-code/admin-add-code.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SensorService","http","console","log","get","apiUrl","sensorId","settings","put","sensorInfo","providedIn","time","DataChartComponent","dataService","ready","loading","emptyData","setTimeout","getData","dataPointId","subscribe","dataPoints","dptKey","datakey","data","timekey","_idkey","_id","selector","templateUrl","styleUrls","AdminGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","e","SettingsComponent","formBuilder","userService","submitted","error","user","getUser","updateForm","group","name","required","company","remarks","getAll","pipe","users","setUser","invalid","updateSettingJson","propName","value","f","updateSettings","JSON","stringify","next","result","ok","controls","onSubmit","YourGuard","AboutComponent","UserFrameComponent","adminauthenticationService","title","x","currentAdminUser","logout","HomeComponent","preventDefault","deferredPrompt","prompt","userChoice","then","choiceResult","outcome","addToHomeScreen","onbeforeinstallprompt","environment","production","ApplicationComponent","setRouter","activeRouter","SensorComponent","range","start","end","myDatePicker","snapshot","paramMap","Date","now","toISOString","InfoComponent","date","toLocaleString","SensorSettingsComponent","sensorService","sensor","showX","showY","showZ","overlap","freqLow","freqHigh","location","AppComponent","JwtInterceptor","request","isLoggedIn","token","isApiUrl","startsWith","clone","setHeaders","handle","AdminSignupComponent","mailReg","registerCodeReg","passwordReg","signupForm","compose","minLength","maxLength","email","password","pattern","signup","UserService","EquipmentComponent","getSensorInfo","sensorskey","sensors","numberkey","sensorNumber","updateInfo","setSensorInfo","showChart","showSettings","showId","AppModule","provide","useClass","multi","register","enabled","declarations","imports","providers","bootstrap","AdminLoginComponent","loginForm","login","DataGetOneComponent","getRecentOne","dataInfo","cnt","dps","id","DesktopApplicationComponent","DataGetRangeComponent","dataNumber","changes","getRange","Authorization","AdminHomeComponent","AdminControlComponent","AuthenticationService","currentUserSubject","parse","localStorage","getItem","asObservable","post","setItem","code","message","removeItem","ErrorInterceptor","err","status","reload","statusText","registrationCode","DataService","sensorIdIn","params","set","responseType","FilterPipe","input","filter","val","includes","AdminAddCodeComponent","success","addCode","PageNotFoundComponent","SignupComponent","routes","path","redirectTo","pathMatch","component","children","canActivate","AppRoutingModule","forRoot","exports","LoginComponent","currentMain","split","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","Error","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\nimport {RespResult} from 'src/app/_models/resp.result';\nimport {SensorInfo} from 'src/app/_models/sensor.info';\n\n@Injectable({providedIn: 'root'})\nexport class SensorService {\n    sensorInfo: SensorInfo;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAll(): any {\n        console.log('running get all sensors');\n        return this.http.get<SensorInfo>(`${environment.apiUrl}/sensors`);\n    }\n\n    updateSettings(sensorId: string, settings: string): any {\n        console.log('Start update settings');\n        return this.http.put<RespResult>(`${environment.apiUrl}/sensors/${sensorId}`, settings);\n    }\n\n    getSensorInfo(): SensorInfo {\n        return this.sensorInfo;\n    }\n\n    setSensorInfo(sensorInfo: SensorInfo): void {\n        this.sensorInfo = sensorInfo;\n    }\n\n}\n","import {Component, OnInit, Input, AfterViewInit} from '@angular/core';\n\nimport {DataService} from '../../_services/data.service';\nimport {DataPoints} from 'src/app/_models/data.points';\n\n@Component({\n    selector: 'app-data-chart',\n    templateUrl: './data-chart.component.html',\n    styleUrls: ['./data-chart.component.css']\n})\nexport class DataChartComponent implements OnInit, AfterViewInit {\n    @Input() dataPointId: string;\n    dataPoints: DataPoints;\n    loading: boolean;\n    emptyData: boolean;\n    _id: string;\n    time: string;\n    data: [[number]];\n    ready: boolean;\n\n    constructor(private dataService: DataService) {\n    }\n\n    // tslint:disable-next-line:typedef\n    ngOnInit() {\n        this.ready = false;\n        this.loading = true;\n        this.emptyData = true;\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.ready = true;\n            this.dataService.getData(this.dataPointId).subscribe(dataPoints => {\n                console.log(dataPoints);\n                const dptKey = 'dataPoint';\n                this.dataPoints = dataPoints[dptKey];\n                const datakey = 'data';\n                this.data = this.dataPoints[datakey];\n                const timekey = 'time';\n                this.time = this.dataPoints[timekey];\n                const _idkey = '_id';\n                this._id = this.dataPoints[_idkey];\n                this.emptyData = false; // Show data because it's not empty\n                this.loading = false; // this must be after emptyData, or it will flash\n            });\n        }, 0);\n    }\n}\n","<!--<p>data-chart works!</p>-->\n\n<!--<div class=\"ui card\">-->\n<div *ngIf=\"ready && !loading\">\n    <div class=\"content\">\n        <div *ngIf=\"!emptyData\">\n            <div class=\"header\">time: {{time}}</div>\n            <div class=\"meta\">\n                <span>id: </span>\n                <a>{{_id}}</a>\n            </div>\n            <div *ngFor=\"let x of data\">\n                <p>data: {{x}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"loading && ready\">\n    <p></p>\n    <div class=\"content\">\n        <div class=\"ui fluid placeholder\">\n            <div class=\"image header\">\n                <div class=\"medium line\"></div>\n                <div class=\"full line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"medium line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"full line\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n<!--</div>-->\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/admin/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {User} from '../../_models/user';\nimport {UserService} from '../../_services/user.service';\nimport {RespResult} from '../../_models/resp.result';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n    user: User;\n    updateForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n    // date: string;\n\n    constructor(private formBuilder: FormBuilder,\n                private userService: UserService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.user = this.userService.getUser();\n        this.updateForm = this.formBuilder.group({\n            name: ['...', Validators.required],\n            company: ['...', Validators.required],\n            remarks: ['...', Validators.required],\n        });\n        if (!this.user) {\n            this.userService.getAll().pipe(first()).subscribe(users => {\n                this.user = users[0];\n                this.userService.setUser(this.user);\n                this.updateForm = this.formBuilder.group({\n                    name: [this.user.user.name, Validators.required],\n                    company: [this.user.user.company, Validators.required],\n                    remarks: [this.user.user.remarks, Validators.required],\n                });\n                this.loading = false;\n            });\n        } else {\n            // this.date = new Date(this.user.user['registerTime']).toLocaleString();\n            this.updateForm = this.formBuilder.group({\n                name: [this.user.user.name, Validators.required],\n                company: [this.user.user.company, Validators.required],\n                remarks: [this.user.user.remarks, Validators.required],\n            });\n            this.loading = false;\n        }\n    }\n\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.updateForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n            return;\n        }\n\n        const updateSettingJson = [\n            {\n                propName: 'name',\n                value: this.f.name.value,\n            },\n            {\n                propName: 'company',\n                value: this.f.company.value,\n            },\n            {\n                propName: 'remarks',\n                value: this.f.remarks.value,\n            }\n        ];\n\n        this.loading = true;\n        this.userService.updateSettings(JSON.stringify(updateSettingJson))\n            .pipe(first())\n            .subscribe({\n                next: (result: RespResult) => {\n                    // @ts-ignore\n                    console.log(`result.ok = ${result.result.ok}`);\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n        this.user.user.name = this.f.name.value;\n        this.user.user.company = this.f.company.value;\n        this.user.user.remarks = this.f.remarks.value;\n    }\n\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        {{user.user.name}}\n        <div class=\"sub header\">{{user.user.email}}</div>\n    </h2>\n</div>\n\n<div *ngIf=\"!user\" class=\"container\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        <div class=\"sub header\">Loading...</div>\n    </h2>\n</div>\n\n<form class=\"ui fluid form\" [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"field\">\n        <div class=\"ui labeled input\">\n            <div class=\"ui label\">Name:</div>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [placeholder]=\"\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui labeled input\">\n            <div class=\"ui label\">Company:</div>\n            <input type=\"text\" formControlName=\"company\" class=\"form-control\" [placeholder]=\"\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui label large\">Remarks:</div>\n        <textarea formControlName=\"remarks\" class=\"form-control\"></textarea>\n<!--            <input type=\"text\"   [placeholder]=\"\">-->\n\n    </div>\n    <div class=\"field\">\n        <div class=\"ui left icon input\">\n            <button [disabled]=\"loading\" class=\"ui submit button\">\n                <span *ngIf=\"loading\" class=\"ui loader\"></span>\n                Update\n            </button>\n        </div>\n    </div>\n    <div class=\"ui negative message\" *ngIf=\"error\">\n        <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n        {{error}}\n    </div>\n</form>\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YourGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/user/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui container\">\n    <h1 class=\"ui header\">About</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from '../_models/user';\nimport {Admin} from '../_models/admin';\n\n@Component({\n  selector: 'app-user-frame',\n  templateUrl: './user-frame.component.html',\n  styleUrls: ['./user-frame.component.css']\n})\nexport class UserFrameComponent{\n\n  title = 'Feili Control';\n  currentUser: User;\n  currentAdminUser: Admin;\n\n  constructor(\n      private router: Router,\n      private authenticationService: AuthenticationService,\n      private adminauthenticationService: AdminAuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n  }\n\n  logout(): any {\n    this.authenticationService.logout();\n    this.router.navigate(['/user/login']);\n  }\n\n  adminLogout(): any {\n    this.adminauthenticationService.logout();\n    this.router.navigate(['/admin/login']);\n  }\n\n}\n","<div class=\"ui inverted fixed top menu\">\n    <div class=\"ui container\">\n        <div class=\"wppc\">\n            <div class=\"item\">\n                <i class=\"chess queen icon\"></i>\n            </div>\n        </div>\n        <div class=\"wppc\">\n            <div class=\"header item\">\n                Feili Control APP\n            </div>\n        </div>\n        <a class=\"item\" routerLink=\"/user/home\" routerLinkActive=\"active\">Home</a>\n        <a class=\"item\" routerLink=\"/user/application\" routerLinkActive=\"active\">Application</a>\n        <a class=\"item\" routerLink=\"/user/about\" routerLinkActive=\"active\">About</a>\n\n        <!--                <div class=\"right menu\">-->\n        <div class=\"phoneContent\">\n            <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                <div class=\"Grey ui button\">\n                    Sign out\n                </div>\n            </a>\n            <a class=\"ui item active\" routerLink=\"/user/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">\n                <div class=\"teal ui button\">\n                    Sign in\n                </div>\n            </a>\n        </div>\n        <!--                </div>-->\n\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                    <div class=\"Grey ui button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item active\" routerLink=\"/user/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">\n                    <div class=\"teal ui button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>\n<!--</div>-->\n\n\n<div class=\"bingcheng\">\n    <router-outlet></router-outlet>\n</div>\n\n\n<div class=\"ui inverted vertical footer segment\">\n    <div class=\"ui center aligned container\">\n        <div class=\"ui stackable inverted divided equal height stackable grid\">\n            <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">About</h4>\n                <div class=\"ui inverted link list\">\n                    <a href=\"#\" class=\"item\">Sitemap</a>\n                    <a href=\"#\" class=\"item\">Contact Us</a>\n                    <a href=\"#\" class=\"item\">Religious Ceremonies</a>\n                    <a href=\"#\" class=\"item\">Gazebo Plans</a>\n                </div>\n            </div>\n            <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">Services</h4>\n                <div class=\"ui inverted link list\">\n                    <a href=\"#\" class=\"item\">Banana Pre-Order</a>\n                    <a href=\"#\" class=\"item\">DNA FAQ</a>\n                    <a href=\"#\" class=\"item\">How To Access</a>\n                    <a href=\"#\" class=\"item\">Favorite X-Men</a>\n                </div>\n            </div>\n            <div class=\"seven wide column\">\n                <h4 class=\"ui inverted header\">Footer Header</h4>\n                <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </div>\n        </div>\n        <div class=\"ui section divider\"></div>\n        <img src=\"./assets/images/wave.png\" class=\"ui centered mini image\">\n        <div class=\"ui horizontal inverted small divided link list\">\n            <a class=\"item\" href=\"#\">Site Map</a>\n            <a class=\"item\" href=\"#\">Contact Us</a>\n            <a class=\"item\" href=\"#\">Terms and Conditions</a>\n            <a class=\"item\" href=\"#\">Privacy Policy</a>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YourGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/desktop/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import {Component, HostListener, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    deferredPrompt: any;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    @HostListener('window:beforeinstallprompt', ['$event'])\n    onbeforeinstallprompt(e: { preventDefault: () => void; }): any {\n        console.log(e);\n        // Prevent Chrome 67 and earlier from automatically showing the prompt\n        e.preventDefault();\n        // Stash the event so it can be triggered later.\n        this.deferredPrompt = e;\n        // this.showButton = true;\n    }\n\n    addToHomeScreen(): void {\n        // Hide the app provided install promotion\n        // hideMyInstallPromotion();\n        this.deferredPrompt.prompt();\n        // Wait for the user to respond to the prompt\n        this.deferredPrompt.userChoice\n            .then((choiceResult: { outcome: string; }) => {\n                if (choiceResult.outcome === 'accepted') {\n                    console.log('User accepted the A2HS prompt');\n                } else {\n                    console.log('User dismissed the A2HS prompt');\n                }\n                this.deferredPrompt = null;\n            });\n    }\n\n\n}\n","<div class=\"ui container\">\n    <h1 class=\"ui header center aligned\">Introduction</h1>\n    <button class=\"add-button\" (click)=\"addToHomeScreen()\" >Add to home screen</button>\n    <h2>Some description about Feili & Production</h2>\n    <div class=\"ui content segment\">\n\n        <div class=\"ui placeholder\">\n            <div class=\"image header\">\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n            </div>\n        </div>\n    </div>\n    <h2>Some introduction of our production</h2>\n    <div class=\"ui three column stackable grid\">\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"ui three cards\">\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://api.feili.openmc.cn',\n  // apiUrl: 'http://api.feili.omniai.org',\n  // apiUrl: 'http://175.24.189.35:4913',\n  // apiUrl: 'http://localhost:8000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-application',\n    templateUrl: './application.component.html',\n    styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n    activeRouter: number;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.setRouter(1);\n    }\n\n    setRouter(activeRouter: number): void {\n        this.activeRouter = activeRouter;\n    }\n\n}\n","<!--<p>application works!</p>-->\n\n<div class=\"ui two column doubling stackable grid container\">\n    <div class=\"four wide column\">\n        <div class=\"ui secondary vertical fluid menu\">\n            <a class=\"item\" routerLink=\"info\"  [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\" >\n                User info\n                <i class=\"gray user circle large icon\"></i>\n            </a>\n            <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n                Settings\n                <i class=\"gray whmcs large icon\"></i>\n            </a>\n            <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n                Equipment\n                <i class=\"gray stack exchange large icon\"></i>\n            </a>\n            <!--            <a class=\"item\">-->\n            <!--                Not defined-->\n            <!--                <i class=\"whmcs large icon\"></i>-->\n            <!--            </a>-->\n            <!--            <a class=\"item\">-->\n            <!--                Not defined-->\n            <!--                <i class=\"whmcs large icon\"></i>-->\n            <!--            </a>-->\n        </div>\n    </div>\n    <div class=\"twelve wide stretched column\">\n        <!--        <div class=\"ui segment\">-->\n        <!--            <div class=\"ui medium header\">This is the application page, below is the subpage:</div>-->\n        <router-outlet></router-outlet>\n        <!--        </div>-->\n\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\n\n\n@Component({\n    selector: 'app-sensor',\n    templateUrl: './sensor.component.html',\n    styleUrls: ['./sensor.component.css']\n})\nexport class SensorComponent implements OnInit {\n    sensorId: string;\n    range = new FormGroup({\n        start: new FormControl(),\n        end: new FormControl()\n    });\n    myDatePicker = new FormControl();\n    loading: boolean;\n    // range: FormGroup;\n    start: string;\n    end: string;\n\n    constructor(private route: ActivatedRoute,\n                private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit(): void {\n        this.loading = false;\n        this.sensorId = this.route.snapshot.paramMap.get('sensorId');\n        console.log(`This sensorId is ${this.sensorId}`);\n        this.range['start'] = new Date(Date.now() - 24 * 60 * 60 * 1000);\n        this.range['end'] = new Date();\n    }\n\n    onSubmit(): void {\n        this.start = this.range['start'].toISOString();\n        this.end = this.range['end'].toISOString();\n        console.log(`Start: ${this.start} end: ${this.end}`);\n    }\n\n    update(): void {\n    }\n}\n","<div class=\"ui backArrow container\">\n    <button class=\"mini ui teal labeled icon button\" [routerLink]=\"['../../equipment']\">\n        <i class=\"left arrow icon\"></i> Back\n    </button>\n</div>\n\n<p></p>\n\n<form class=\"ui form\" [formGroup]=\"range\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"ui two column doubling stackable grid container\">\n        <div class=\"column\">\n            <mat-form-field class=\"dateInputForm\">\n                <div class=\"ui grid\">\n                    <div class=\"twelve wide column\">\n                        <label>\n                            <input matInput [ngxMatDatetimePicker]=\"pickerFrom\" placeholder=\"From date & time\"\n                                   [(ngModel)]=\"range['start']\" [ngModelOptions]=\"{standalone: true}\">\n\n                        </label>\n                    </div>\n                    <div class=\"four wide column\">\n                        <mat-datepicker-toggle class=\"pickIcon\" matSuffix [for]=\"pickerFrom\"></mat-datepicker-toggle>\n                    </div>\n                </div>\n                <ngx-mat-datetime-picker #pickerFrom [enableMeridian]=\"true\"></ngx-mat-datetime-picker>\n                <div class=\"ui red message\" *ngIf=\"range.controls.start.hasError('notValid')\">Invalid start date</div>\n            </mat-form-field>\n        </div>\n        <div class=\"column\">\n            <mat-form-field class=\"dateInputForm\">\n                <div class=\"ui grid\">\n                    <div class=\"twelve wide column\">\n                        <label>\n                            <input matInput [ngxMatDatetimePicker]=\"pickerTo\" placeholder=\"To date & time\"\n                                   [(ngModel)]=\"range['end']\" [min]=\"range['start']\"\n                                   [ngModelOptions]=\"{standalone: true}\">\n                        </label>\n                    </div>\n                    <div class=\"four wide column\">\n                        <mat-datepicker-toggle class=\"pickIcon\" matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\n                    </div>\n                    <ngx-mat-datetime-picker #pickerTo [enableMeridian]=\"true\"></ngx-mat-datetime-picker>\n                </div>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"ui getButton container\">\n        <button [disabled]=\"loading\" class=\"ui fluid small teal submit button\">\n            <span *ngIf=\"loading\" class=\"ui loader\"></span>\n            Get Data\n        </button>\n    </div>\n\n</form>\n\n<!--<p>Selected range: {{range.value | json}} {{range['start'].value | json}} {{range['end'].value | json}}</p>-->\n\n<div class=\"ui container\">\n    <!--    <div >Start: {{start}}, end: {{end}}</div>-->\n    <app-data-get-range [sensorId]=\"sensorId\" [start]=\"start\" [end]=\"end\"></app-data-get-range>\n</div>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {User} from 'src/app/_models/user';\nimport {UserService} from 'src/app/_services/user.service';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n    selector: 'app-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n    loading = false;\n    user: User;\n    date: string;\n\n    constructor(private userService: UserService,\n                private router: Router,\n                private authenticationService: AuthenticationService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.user = this.userService.getUser();\n        if (this.user){\n            this.loading = false;\n            this.date = new Date(this.user.user['registerTime']).toLocaleString();\n            return;\n        }\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.user = users[0];\n            this.date = new Date(users[0].user['registerTime']).toLocaleString();\n            this.userService.setUser(this.user);\n        });\n    }\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/desktop/login']);\n    }\n\n}\n","<!--<div class=\"card-body\">-->\n<div *ngIf=\"loading\" class=\"container\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        <div class=\"sub header\">Loading...</div>\n    </h2>\n    <div class=\"ui container\">\n        <div class=\"ui tall stacked segments\">\n            <div class=\"ui segment\">\n                <i class=\"building inline icon link\">&nbsp;Company</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"calendar alternate icon\">&nbsp;Register&nbsp;Time</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"registered icon\">&nbsp;Registration&nbsp;Code</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"comment alternate icon\">&nbsp;Remarks</i>\n                <div class=\"container\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment phoneContent\">\n                <a class=\"ui item\" (click)=\"logout()\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"user\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        {{user.user.name}}\n        <div class=\"sub header\">{{user.user.email}}</div>\n    </h2>\n    <div class=\"ui container\">\n        <div class=\"ui tall stacked segments\">\n            <div class=\"ui segment\">\n                <i class=\"building inline icon link\">&nbsp;Company</i>\n                <div class=\"content\">\n                    {{user.user.company}}\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"calendar alternate icon\">&nbsp;Register&nbsp;Time</i>\n                <div class=\"content\">\n                    {{date}}\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"registered icon\">&nbsp;Registration&nbsp;Code</i>\n                <div class=\"content\">\n                    <a>{{user.user.registrationCode}}</a>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"comment alternate icon\">&nbsp;Remarks</i>\n                <div class=\"ui form\">\n                    <div class=\"container\" disabled=\"true\">\n                        <textarea>{{user.user.remarks}}</textarea>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ui segment phoneContent\">\n                <a class=\"ui item\" (click)=\"logout()\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {Settings} from '../../_models/settings';\nimport {Sensor} from '../../_models/sensor';\nimport {RespResult} from 'src/app/_models/resp.result';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {SensorService} from '../../_services/sensor.service';\n\n// import {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n    selector: 'app-sensor-settings',\n    templateUrl: './sensor-settings.component.html',\n    styleUrls: ['./sensor-settings.component.css']\n})\nexport class SensorSettingsComponent implements OnInit {\n    @Input() sensor: Sensor;\n    settings: Settings;\n    updateForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n    // checked: {\n    //     showX: boolean;\n    // };\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private sensorService: SensorService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.settings = this.sensor.settings;\n\n        this.updateForm = this.formBuilder.group({\n            showX: [this.settings.showX, Validators.required],\n            showY: [this.settings.showY, Validators.required],\n            showZ: [this.settings.showZ, Validators.required],\n            overlap: [this.settings.overlap, Validators.required],\n            freqLow: [this.settings.freqLow, Validators.required],\n            freqHigh: [this.settings.freqHigh, Validators.required],\n            name: [this.sensor.name, Validators.required],\n            class: [this.sensor.class, Validators.required],\n            location: [this.sensor.location, Validators.required]\n        });\n    }\n\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.updateForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n            return;\n        }\n\n        const updateSettingJson = [\n            {\n                propName: 'name',\n                value: this.f.name.value,\n            },\n            {\n                propName: 'class',\n                value: this.f.class.value,\n            },\n            {\n                propName: 'location',\n                value: this.f.location.value,\n            },\n            {\n                propName: 'settings',\n                value: {\n                    showX: this.f.showX.value,\n                    showY: this.f.showY.value,\n                    showZ: this.f.showZ.value,\n                    overlap: this.f.overlap.value,\n                    freqLow: this.f.freqLow.value,\n                    freqHigh: this.f.freqHigh.value\n                }\n            }\n        ];\n\n        this.loading = true;\n        this.sensorService.updateSettings(this.sensor._id, JSON.stringify(updateSettingJson))\n            .pipe(first())\n            .subscribe({\n                next: (result: RespResult) => {\n                    // @ts-ignore\n                    console.log(`result.ok = ${result.result.ok}`);\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n        this.settings.showX = this.f.showX.value;\n        this.settings.showY = this.f.showY.value;\n        this.settings.showZ = this.f.showZ.value;\n        this.settings.overlap = this.f.overlap.value;\n        this.settings.freqLow = this.f.freqLow.value;\n        this.settings.freqHigh = this.f.freqHigh.value;\n        this.sensor.name = this.f.name.value;\n        this.sensor.location = this.f.location.value;\n        this.sensor.class = this.f.class.value;\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n    // check(item: string): void {\n    //     if (item === 'showX') {\n    //         this.settings.showX = !this.settings.showX;\n    //         console.log('clicked showX: ' + this.settings.showX);\n    //     } else if (item === 'showY') {\n    //         this.settings.showY = !this.settings.showY;\n    //         console.log('clicked showY: ' + this.settings.showY);\n    //     } else if (item === 'showZ') {\n    //         this.settings.showZ = !this.settings.showZ;\n    //         console.log('clicked showZ: ' + this.settings.showZ);\n    //     } else if (item === 'overlap') {\n    //         this.settings.overlap = !this.settings.overlap;\n    //         console.log('clicked overlap: ' + this.settings.overlap);\n    //     }\n    // }\n    // check(item: string): void {\n    // }\n\n}\n","<!--suppress ALL -->\n<form class=\"ui form\" [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"inline field\">\n        <div class=\"ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"showX\" class=\"form-control\"\n                   [checked]=\"settings.showX\">\n            <label>showX state: {{settings.showX}}</label>\n        </div>\n    </div>\n    <div class=\"inline field\">\n        <div class=\"teal ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"showY\" class=\"form-control\"\n                   [checked]=\"settings.showY\">\n            <label>showY state: {{settings.showY}}</label>\n        </div>\n    </div>\n    <div class=\"inline field\">\n        <div class=\"ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"showZ\" class=\"form-control\"\n                   [checked]=\"settings.showZ\">\n            <label>showZ state: {{settings.showZ}}</label>\n        </div>\n    </div>\n    <div class=\"inline field\">\n        <div class=\"ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"overlap\" class=\"form-control\"\n                   [checked]=\"settings.overlap\">\n            <label>overlap state: {{settings.overlap}}</label>\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Frequency: </label>\n            <input type=\"text\" formControlName=\"freqLow\" class=\"form-control\" placeholder=\"Lower bound (Hz)\">\n        </div>\n        <div class=\"four wide field\">\n            <label> - </label>\n            <input type=\"text\" formControlName=\"freqHigh\" class=\"form-control\" placeholder=\"Upper bound (Hz)\">\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Name: </label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [placeholder]=\"sensor['name']\">\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Class: </label>\n            <input type=\"text\" formControlName=\"class\" class=\"form-control\" [placeholder]=\"sensor['class']\">\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Location: </label>\n            <input type=\"text\" formControlName=\"location\" class=\"form-control\" [placeholder]=\"sensor['location']\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui left icon input\">\n            <button *ngIf=\"!loading\" class=\"ui mini fluid teal submit button\">\n                Update\n            </button>\n            <button *ngIf=\"loading\" [disabled]=\"loading\" class=\"ui mini fluid teal loading button\">Updating</button>\n        </div>\n    </div>\n    <div class=\"ui negative message\" *ngIf=\"error\">\n        <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n        {{error}}\n    </div>\n</form>\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from './_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from './_models/user';\nimport {Admin} from './_models/admin';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'routing-app';\n  currentUser: User;\n  currentAdminUser: Admin;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private adminauthenticationService: AdminAuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n  }\n\n  logout(): any {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  adminLogout(): any {\n    this.adminauthenticationService.logout();\n    this.router.navigate(['/admin/login']);\n  }\n}\n","\n<!--<div class=\"ui inverted fixed top menu\">-->\n<!--    <div class=\"ui container\">-->\n<!--        <div class=\"wppc\">-->\n<!--            <div class=\"item\">-->\n<!--                <i class=\"chess queen icon\"></i>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"wppc\">-->\n<!--            <div class=\"header item\">-->\n<!--                Feili Control APP-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <a class=\"item\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a>-->\n<!--        <a class=\"item\" routerLink=\"/application\" routerLinkActive=\"active\">Application</a>-->\n<!--        <a class=\"item\" routerLink=\"/about\" routerLinkActive=\"active\">About</a>-->\n\n<!--&lt;!&ndash;                <div class=\"right menu\">&ndash;&gt;-->\n<!--        <div class=\"phoneContent\">-->\n<!--            <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">-->\n<!--                <div class=\"Grey ui button\">-->\n<!--                    Sign out-->\n<!--                </div>-->\n<!--            </a>-->\n<!--            <a class=\"ui item active\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">-->\n<!--                <div class=\"teal ui button\">-->\n<!--                    Sign in-->\n<!--                </div>-->\n<!--            </a>-->\n<!--        </div>-->\n<!--&lt;!&ndash;                </div>&ndash;&gt;-->\n\n<!--        <div class=\"right menu\">-->\n<!--            <div class=\"deskContent\">-->\n<!--                <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser && ! currentAdminUser\">-->\n<!--                    <div class=\"Grey ui button\">-->\n<!--                        <i class=\"sign-out icon\"></i>Sign out-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--                <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">-->\n<!--                    <div class=\"Grey ui button\">-->\n<!--                        <i class=\"sign-out icon\"></i>Admin sign out-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--                <a class=\"ui item active\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser && ! currentAdminUser\">-->\n<!--                    <div class=\"teal ui button\">-->\n<!--                        <i class=\"sign-in icon\"></i>Sign in-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--            </div>-->\n<!--        </div>-->\n\n<!--    </div>-->\n<!--</div>-->\n<!--&lt;!&ndash;</div>&ndash;&gt;-->\n\n\n<!--<div class=\"bingcheng\">-->\n<!--    <router-outlet></router-outlet>-->\n<!--</div>-->\n\n\n<!--<div class=\"ui inverted vertical footer segment\">-->\n<!--    <div class=\"ui center aligned container\">-->\n<!--        <div class=\"ui stackable inverted divided equal height stackable grid\">-->\n<!--            <div class=\"three wide column\">-->\n<!--                <h4 class=\"ui inverted header\">About</h4>-->\n<!--                <div class=\"ui inverted link list\">-->\n<!--                    <a href=\"#\" class=\"item\">Sitemap</a>-->\n<!--                    <a href=\"#\" class=\"item\">Contact Us</a>-->\n<!--                    <a href=\"#\" class=\"item\">Religious Ceremonies</a>-->\n<!--                    <a href=\"#\" class=\"item\">Gazebo Plans</a>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div class=\"three wide column\">-->\n<!--                <h4 class=\"ui inverted header\">Services</h4>-->\n<!--                <div class=\"ui inverted link list\">-->\n<!--                    <a href=\"#\" class=\"item\">Banana Pre-Order</a>-->\n<!--                    <a href=\"#\" class=\"item\">DNA FAQ</a>-->\n<!--                    <a href=\"#\" class=\"item\">How To Access</a>-->\n<!--                    <a href=\"#\" class=\"item\">Favorite X-Men</a>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div class=\"seven wide column\">-->\n<!--                <h4 class=\"ui inverted header\">Footer Header</h4>-->\n<!--                <p>Extra space for a call to action inside the footer that could help re-engage users.</p>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"ui section divider\"></div>-->\n<!--        <img src=\"./assets/images/wave.png\" class=\"ui centered mini image\">-->\n<!--        <div class=\"ui horizontal inverted small divided link list\">-->\n<!--            <a class=\"item\" href=\"#\">Site Map</a>-->\n<!--            <a class=\"item\" href=\"#\">Contact Us</a>-->\n<!--            <a class=\"item\" href=\"#\">Terms and Conditions</a>-->\n<!--            <a class=\"item\" href=\"#\">Privacy Policy</a>-->\n<!--        </div>-->\n<!--    </div>-->\n<!--</div>-->\n\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { AuthenticationService } from 'src/app/_services/admin.authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add auth header with jwt if user is logged in and request is to the api url\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    console.log(`Here we use JWT, currentUser.token = ${currentUser}`);\n    if (isLoggedIn && isApiUrl) {\n      console.log(`isLoggedIn && isApiUrl`);\n      console.log(`Here we use JWT, currentUser.token = ${currentUser.token}`);\n      request = request.clone({\n        setHeaders: {\n          'Admin-Authorization': `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n    selector: 'app-admin-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css']\n})\nexport class AdminSignupComponent implements OnInit {\n    signupForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n        // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n        const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}/;\n        const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n        // this.signupForm = this.formBuilder.group({\n        //     name: ['', Validators.required],\n        //     email: ['', Validators.required, Validators.pattern(mailReg)],\n        //     password: ['', Validators.required],\n        //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n        // });\n        this.signupForm = this.formBuilder.group({\n            name: new FormControl('', Validators.compose([\n                Validators.required, Validators.minLength(3), Validators.maxLength(16)])),\n            email: new FormControl('', Validators.compose([\n                Validators.required, Validators.email])),\n            password: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(passwordReg),\n                Validators.minLength(8),\n                Validators.maxLength(16)]))\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.signupForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.signupForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.signup(this.f.name.value, this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/admin/login';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n\n}\n","<!--<p>signup works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user plus icon\"></i>\n      <div class=\"content\">\n        Admin sign up\n      </div>\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"address book icon\"></i>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"User name\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            <div *ngIf=\"f.name.errors.minlength\">Name should be at least 2 characters</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"envelope icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern || f.password.errors.minlength || f.password.errors.maxlength\">\n              Password should be 8-16 characters with combination of letters/numbers/symbols\n            </div>\n          </div>\n        </div>\n\n<!--        <div class=\"field\">-->\n<!--          <div class=\"ui left icon input\">-->\n<!--            <i class=\"key icon\"></i>-->\n<!--            <input type=\"text\" formControlName=\"code\" class=\"form-control\"-->\n<!--                   placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"-->\n<!--                   [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>-->\n<!--          </div>-->\n<!--          <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">-->\n<!--            <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>-->\n<!--            <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>-->\n<!--          </div>-->\n<!--        </div>-->\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Signup\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a strong password.</li>\n            <li>Your password must be at least 6 characters.</li>\n\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n    <div class=\"ui message\">\n      Already have an account?   <a routerLink=\"/admin/login\">Sign In</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\nimport {User} from 'src/app/_models/user';\nimport {RespResult} from '../_models/resp.result';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n    user: User;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAll(): any {\n        console.log('running get all users');\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    getUser(): any {\n        if (this.user) {\n            return this.user;\n        }\n        return null;\n    }\n\n    setUser(user: User): void {\n        this.user = user;\n    }\n\n    updateSettings(settings: string): any {\n        console.log('Start update settings');\n        return this.http.put<RespResult>(`${environment.apiUrl}/users/update`, settings);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {SensorInfo} from 'src/app/_models/sensor.info';\nimport {Sensor} from 'src/app/_models/sensor';\nimport {SensorService} from 'src/app/_services/sensor.service';\n// import { FilterPipe } from '../../_helpers/filter.pipe';\n\n@Component({\n    selector: 'app-equipment',\n    templateUrl: './equipment.component.html',\n    styleUrls: ['./equipment.component.css']\n})\nexport class EquipmentComponent implements OnInit {\n    loading = true;\n    sensorInfo: SensorInfo;\n    sensors: Sensor[];\n    sensorNumber: number;\n    searchClass: string;\n    // sensorId: string;\n    // chart: boolean;\n\n    constructor(private sensorService: SensorService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.sensorInfo = this.sensorService.getSensorInfo();\n        if (this.sensorInfo) {\n            const sensorskey = 'sensors';\n            this.sensors = this.sensorInfo[sensorskey];\n            const numberkey = 'count';\n            this.sensorNumber = this.sensorInfo[numberkey];\n            this.loading = false;\n        }\n        else {\n            this.updateInfo();\n        }\n    }\n\n    updateInfo(): void {\n        this.loading = true;\n        this.sensorService.getAll().pipe(first()).subscribe(sensorInfo => {\n            console.log(sensorInfo);\n            this.sensorInfo = sensorInfo;\n            this.sensorService.setSensorInfo(sensorInfo);\n            const sensorskey = 'sensors';\n            this.sensors = sensorInfo[sensorskey];\n            const numberkey = 'count';\n            this.sensorNumber = sensorInfo[numberkey];\n            this.loading = false;\n        });\n    }\n\n    showChart(sensor): void {\n        // @ts-ignore\n        sensor.showChart = !sensor.showChart;\n    }\n\n    showSettings(sensor): void {\n        sensor.showSettings = !sensor.showSettings;\n    }\n\n    showId(sensor): void {\n        sensor.showId = sensor.showId !== true;\n    }\n}\n","<!--<p>equipment works!</p>-->\n<div class=\"ui two column doubling stackable grid container\">\n    <div class=\"column\">\n        <div class=\"ui left aligned mini labeled button\" tabindex=\"0\">\n            <div *ngIf=\"!loading\" class=\"mini ui teal button\" (click)=\"updateInfo()\">\n                <i class=\"redo icon\"></i> update\n            </div>\n            <button *ngIf=\"loading\" class=\"mini ui teal loading button\">Loading</button>\n            <a class=\"ui basic teal left pointing label\">\n                # Equipment: {{sensorNumber}}\n            </a>\n        </div>\n    </div>\n    <div class=\"column\">\n        <div class=\"ui mini fluid icon input\">\n            <input type=\"search\" [(ngModel)] = searchClass placeholder=\"Names / Classes / Locations ...\">\n            <i class=\"search icon\"></i>\n        </div>\n    </div>\n</div>\n\n<p></p>\n\n<div *ngIf=\"loading\">\n    <div class=\"ui raised link attached card\">\n        <div class=\"ui fluid placeholder\">\n            <div class=\"image header\">\n                <div class=\"medium line\"></div>\n                <div class=\"full line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"full line\"></div>\n                <div class=\"medium line\"></div>\n                <div class=\"medium line\"></div>\n                <div class=\"medium line\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!loading\">\n    <div *ngFor=\"let sensor of sensors | FilterPipe: searchClass\">\n        <div class=\"ui raised link attached card\">\n            <div class=\"content\">\n                <div class=\"header\">\n                    <b (dblclick)=\"showId(sensor)\">\n                        {{sensor[\"name\"]}}\n                    </b>\n                    <button class=\"mini ui gray button\" *ngIf=\"!sensor['valid']\">Not Validated</button>\n                    <button class=\"mini ui teal right labeled icon button\" *ngIf=\"sensor['valid']\"\n                            [routerLink]=\" ['../sensor', sensor._id ]\">\n                        <i class=\"right arrow icon\"></i>\n                        Details\n                    </button>\n                </div>\n                <div class=\"meta\">\n                    <p *ngIf=\"sensor['showId']\"><b>Cheap Id: </b><font face=\"monospace\">{{sensor[\"_id\"]}}</font></p>\n                    <p *ngIf=\"sensor['showId']\"><b>Mac Address: </b> <font\n                            face=\"monospace\">{{sensor[\"mac\"].replaceAll(\"-\", \":\")}}</font></p>\n                    <p><b>Model: </b><font face=\"monospace\">{{sensor[\"model\"]}}</font></p>\n                </div>\n                <div class=\"description\">\n                    <p class=\"category\" *ngIf=\"sensor['valid']\"><b>Class: </b>{{sensor[\"class\"]}}</p>\n                    <p class=\"category\" *ngIf=\"sensor['valid']\"><b>Location: </b>{{sensor[\"location\"]}}</p>\n                </div>\n            </div>\n            <div class=\"content\" *ngIf=\"sensor['showChart']||sensor['showSettings']\">\n                <div class=\"content\">\n                    <app-data-display [sensor]=\"sensor\" *ngIf=\"sensor['showChart']\"></app-data-display>\n                </div>\n                <div class=\"content\">\n                    <app-sensor-settings [sensor]=\"sensor\" *ngIf=\"sensor['showSettings']\"></app-sensor-settings>\n                </div>\n            </div>\n            <div class=\"extra content\" *ngIf=\"sensor['valid']\">\n                <div class=\"right floated author\">\n                    <i class=\"chart line large icon\" (click)=\"showChart(sensor)\"></i>\n                    <i class=\"cog large icon\" (click)=\"showSettings(sensor)\"></i>\n                </div>\n            </div>\n        </div>\n        <p></p>\n    </div>\n</div>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n    NgxMatTimepickerModule\n} from '@angular-material-components/datetime-picker';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {LoginComponent} from './login/login.component';\nimport {ErrorInterceptor} from './_helpers/error.interceptor';\nimport {JwtInterceptor} from './_helpers/jwt.interceptor';\nimport {JwtInterceptor as AdminJwtInterceptor} from './_helpers/admin.jwt.interceptor';\nimport {SignupComponent} from './signup/signup.component';\nimport {ApplicationComponent} from './private-components/application/application.component';\nimport {AboutComponent} from './about/about.component';\nimport {HomeComponent} from './home/home.component';\nimport {EquipmentComponent} from './private-components/equipment/equipment.component';\nimport {SettingsComponent} from './private-components/settings/settings.component';\nimport {InfoComponent} from './private-components/info/info.component';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {DataGetOneComponent} from './private-components/data-get-one/data-get-one.component';\nimport {SensorSettingsComponent} from './private-components/sensor-settings/sensor-settings.component';\nimport {SensorComponent} from './private-components/sensor/sensor.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {DataGetRangeComponent} from './private-components/data-get-range/data-get-range.component';\nimport {DataChartComponent} from './private-components/data-chart/data-chart.component';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\nimport {AdminLoginComponent} from './admin-components/login/login.component';\nimport {AdminSignupComponent} from './admin-components/signup/signup.component';\nimport {AdminControlComponent} from './admin-components/admin-control/admin-control.component';\nimport {AdminHomeComponent} from './admin-components/admin-home/admin-home.component';\nimport {UserFrameComponent} from './user-frame/user-frame.component';\nimport {AdminAddCodeComponent} from './admin-components/admin-add-code/admin-add-code.component';\nimport {DesktopApplicationComponent} from './desktop-application/desktop-application.component';\nimport { FilterPipe } from './_helpers/filter.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent,\n        LoginComponent,\n        SignupComponent,\n        ApplicationComponent,\n        AboutComponent,\n        HomeComponent,\n        EquipmentComponent,\n        SettingsComponent,\n        InfoComponent,\n        DataGetOneComponent,\n        SensorSettingsComponent,\n        SensorComponent,\n        DataGetRangeComponent,\n        DataChartComponent,\n        AdminLoginComponent,\n        AdminSignupComponent,\n        AdminControlComponent,\n        AdminHomeComponent,\n        UserFrameComponent,\n        AdminAddCodeComponent,\n        DesktopApplicationComponent,\n        FilterPipe,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        BrowserAnimationsModule,\n        // MatButtonModule,\n        NgxMatDatetimePickerModule,\n        NgxMatNativeDateModule,\n        NgxMatTimepickerModule,\n        FormsModule,\n        MatInputModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production})\n    ],\n    providers: [\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: AdminJwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n        {provide: LocationStrategy, useClass: HashLocationStrategy},\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n    selector: 'app-admin-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/admin/control']);\n        }\n    }\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            email: ['admin@openmc.cn', Validators.compose([\n                Validators.required, Validators.email])],\n            password: ['password4admin', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.loginForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/admin/control';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<!--<p>login works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user icon\"></i>\n        Admin sign in\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"user icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Sign In\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a right password.</li>\n            <li>You can sign up if you are a new user.</li>\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n\n    <div class=\"ui message\">\n      New to us?   <a routerLink=\"/admin/signup\">Sign Up</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Component, OnInit, Input} from '@angular/core';\n// import {first} from 'rxjs/operators';\n// import {SensorInfo} from '../../_models/sensor.info';\nimport {Sensor} from '../../_models/sensor';\nimport {DataService} from '../../_services/data.service';\nimport {DataPoints} from 'src/app/_models/data.points';\n// import {environment} from '../../../environments/environment';\n\n@Component({\n    selector: 'app-data-display',\n    templateUrl: './data-get-one.component.html',\n    styleUrls: ['./data-get-one.component.css']\n})\nexport class DataGetOneComponent implements OnInit {\n    @Input() sensor: Sensor;\n    sensorId: string;\n    _id: string;\n    time: string;\n    data: [[number]];\n    // sensor: Sensor;\n    dataPoints: DataPoints;\n    loading: boolean;\n    dataPointId: string;\n    emptyData: boolean;\n\n    constructor(private dataService: DataService) {\n    }\n\n    ngOnInit(): void {\n        this.sensorId = this.sensor._id;\n        this.emptyData = true;\n        this.loading = true;\n        console.log(`Start query for sensorId: ${this.sensorId}`);\n        this.dataService.getRecentOne(this.sensorId).subscribe(dataInfo => {\n            // this.dataInfo = dataInfo;\n            console.log(dataInfo);\n            // const datapointsKey = 'Datapoints';\n            // dataInfo = dataInfo[datapointsKey];\n            const cnt = 'count';\n            console.log(`dataInfo[cnt]: ${dataInfo[cnt]}`);\n            if (!dataInfo[cnt]) {\n                this.loading = false;\n                return false;\n            }\n\n            const dps = 'Datapoints';\n            const id = '_id';\n            const dataPointId = dataInfo[dps][0][id];\n            console.log(`Start get data with dataPointId: ${dataPointId}`);\n            this.dataPointId = dataPointId;\n            // this.dataService.getData(dataPointId).subscribe(dataPoints => {\n            //     console.log(dataPoints);\n            //     const dptKey = 'dataPoint';\n            //     this.dataPoints = dataPoints[dptKey];\n            //     const datakey = 'data';\n            //     this.data = this.dataPoints[datakey];\n            //     const timekey = 'time';\n            //     this.time = this.dataPoints[timekey];\n            //     const _idkey = 'time';\n            //     this._id = this.dataPoints[_idkey];\n            // });\n            this.emptyData = false; // Show data because it's not empty\n            this.loading = false; // this must be after emptyData, or it will flash\n        });\n    }\n}\n\n\n","<div class=\"ui fluid card\">\n    <div class=\"content\">\n        <app-data-chart *ngIf=\"!emptyData\" [dataPointId]=\"dataPointId\"></app-data-chart>\n\n        <div *ngIf=\"emptyData&&!loading\">\n            <div class=\"ui comments\">\n                <div class=\"comment\">\n                    <a class=\"avatar\">\n                        <i class=\"teal exclamation circle large icon\"></i>\n                    </a>\n                    <div class=\"content\">\n                        <a class=\"author\">Database is empty</a>\n                        <div class=\"metadata\">\n                            <div class=\"date\">0 data found</div>\n                        </div>\n                        <div class=\"text\">\n                            Please use the sensor for the first time and gather data.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"loading\">\n            <div class=\"ui fluid placeholder\">\n                <div class=\"image header\">\n                    <div class=\"medium line\"></div>\n                    <div class=\"full line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<p></p>\n","import {Component, OnInit} from '@angular/core';\n\nimport {AuthenticationService} from '../_services/authentication.service';\nimport {User} from '../_models/user';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-desktop-application',\n    templateUrl: './desktop-application.component.html',\n    styleUrls: ['./desktop-application.component.css']\n})\nexport class DesktopApplicationComponent implements OnInit {\n    activeRouter: number;\n    title = 'Feili Control';\n    currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    ngOnInit(): void {\n    }\n\n    setRouter(activeRouter: number): void {\n        this.activeRouter = activeRouter;\n    }\n\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/desktop/login']);\n    }\n}\n","<!--<p>application works!</p>-->\n\n<!--<div class=\"ui two column doubling stackable grid container\">-->\n<!--    <div class=\"four wide column\">-->\n<div class=\"deskContent\">\n    <div class=\"ui vertical inverted sidebar menu left visible\">\n        <div class='item'>\n            <a><b> </b></a>\n        </div>\n        <div class='item'>\n            <a class=\"ui logo icon image\">\n                <img src=\"assets/images/wave.png\">\n            </a>\n            <a>\n                <b>Feili Control</b>\n            </a>\n        </div>\n\n        <a class=\"item\" routerLink=\"info\" [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\">\n            User info\n            <i class=\"gray user circle large icon\"></i>\n        </a>\n        <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n            Settings\n            <i class=\"gray whmcs large icon\"></i>\n        </a>\n        <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n            Equipment\n            <i class=\"gray stack exchange large icon\"></i>\n        </a>\n        <!--            <a class=\"item\">-->\n        <!--                Not defined-->\n        <!--                <i class=\"whmcs large icon\"></i>-->\n        <!--            </a>-->\n        <!--            <a class=\"item\">-->\n        <!--                Not defined-->\n        <!--                <i class=\"whmcs large icon\"></i>-->\n        <!--            </a>-->\n        <div class='item'>\n            <a><b> </b></a>\n        </div>\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item\" routerLink=\"/desktop/login\" *ngIf=\"!currentUser\">\n                    <div class=\"teal ui fluid button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n<!--    </div>-->\n<!--    <div class=\"twelve wide stretched column\">-->\n<!--        <div class=\"ui segment\">-->\n<!--            <div class=\"ui medium header\">This is the application page, below is the subpage:</div>-->\n\n\n<div class=\" dimmed\">\n    <!--    <p></p>-->\n    <div class=\"ui container\">\n        <div class=\"main ui container\">\n            <!--        <p></p>-->\n            <div style=\"color:white\"><b>Designed by openmc.cn</b></div>\n            <router-outlet></router-outlet>\n            <div style=\"color:white\"><b>Bingcheng Hu, 2021.9.1</b></div>\n            <!--        <p></p>-->\n            <div class=\"phoneContent\">\n                <div style=\"color:white\"><b>Powered by Feili Electron</b></div>\n                <div style=\"color:white\"><b>http://www.shfeili.com/</b></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--    </div>-->\n<!--</div>-->\n<div class=\"phoneContent\">\n    <div class=\"ui mini labeled icon inverted three item bottom fixed menu\">\n        <a class=\"item\" routerLink=\"info\" [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\">\n            <i class=\"gray user circle icon\"></i>\n            User\n        </a>\n        <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n            <i class=\"gray whmcs icon\"></i>\n            Settings\n        </a>\n        <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n            <i class=\"gray stack exchange icon\"></i>\n            Equipment\n        </a>\n    </div>\n</div>\n","import {Component, OnInit, Input, OnChanges, SimpleChanges} from '@angular/core';\n\n// import {Sensor} from '../../_models/sensor';\nimport {DataService} from '../../_services/data.service';\n// import {DataPoints} from 'src/app/_models/data.points';\nimport {DataPoint} from 'src/app/_models/data.point';\n\n@Component({\n    selector: 'app-data-get-range',\n    templateUrl: './data-get-range.component.html',\n    styleUrls: ['./data-get-range.component.css']\n})\nexport class DataGetRangeComponent implements OnInit, OnChanges {\n    @Input() sensorId: string;\n    @Input() start: string;\n    @Input() end: string;\n    loading: boolean;\n    dataPoints: DataPoint[];\n    dataNumber: number;\n\n    constructor(private dataService: DataService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = false;\n        this.dataNumber = 1;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (typeof this.start === 'undefined' || typeof this.end === 'undefined') {\n            return;\n        }\n        this.dataNumber = 0;\n        this.loading = true;\n        this.dataService.getRange(this.sensorId, this.start, this.end).subscribe(dataInfo => {\n            console.log(dataInfo);\n            const cnt = 'count';\n            this.dataNumber = dataInfo[cnt];\n            console.log(`dataInfo[cnt]: ${this.dataNumber}`);\n            if (!dataInfo[cnt]) {\n                this.loading = false;\n                return false;\n            }\n            this.loading = false;\n            const dps = 'Datapoints';\n            this.dataPoints = dataInfo[dps];\n        });\n    }\n\n}\n","<!--<p>data-get-range works!</p>-->\n<!--<div>this.sensorId {{sensorId}}, this.start {{start}}, this.end {{end}}</div>-->\n\n<div *ngIf=\"dataNumber!==0\">\n    <div *ngFor=\"let dataPoint of dataPoints, let num = index\">\n        <!--        id {{num}}: {{dataPoint['_id']}}-->\n        <p></p>\n        <div class=\"ui fluid card\">\n            <div class=\"content\">\n                <app-data-chart [dataPointId]=\"dataPoint['_id']\"></app-data-chart>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"dataNumber===0&&!loading\">\n    <p></p>\n    <div class=\"ui fluid card\">\n        <div class=\"content\">\n            <div class=\"ui comments\">\n                <div class=\"comment\">\n                    <a class=\"avatar\">\n                        <i class=\"teal exclamation circle large icon\"></i>\n                    </a>\n                    <div class=\"content\">\n                        <a class=\"author\">No data in this time range</a>\n                        <div class=\"metadata\">\n                            <div class=\"date\">0 data found</div>\n                        </div>\n                        <div class=\"text\">\n                            Please try other time range.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div *ngIf=\"loading\">\n    <p></p>\n    <div class=\"ui fluid card\">\n        <div class=\"content\">\n            <div class=\"ui fluid placeholder\">\n                <div class=\"image header\">\n                    <div class=\"medium line\"></div>\n                    <div class=\"full line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add auth header with jwt if user is logged in and request is to the api url\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    console.log(`Here we use JWT, currentUser.token = ${currentUser}`);\n    if (isLoggedIn && isApiUrl) {\n      console.log(`isLoggedIn && isApiUrl`);\n      console.log(`Here we use JWT, currentUser.token = ${currentUser.token}`);\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from '../../_models/user';\nimport {Admin} from '../../_models/admin';\n\n@Component({\n    selector: 'app-admin-home',\n    templateUrl: './admin-home.component.html',\n    styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent{\n    title = 'routing-app';\n    currentUser: User;\n    currentAdminUser: Admin;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private adminauthenticationService: AdminAuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n        this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n    }\n\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/user/login']);\n    }\n\n    adminLogout(): any {\n        this.adminauthenticationService.logout();\n        this.router.navigate(['/admin/login']);\n    }\n\n}\n","<div class=\"ui fixed top menu\">\n    <div class=\"ui container\">\n        <div class=\"wppc\">\n            <div class=\"item\">\n                <i class=\"chess queen icon\"></i>\n            </div>\n        </div>\n        <div class=\"wppc\">\n            <div class=\"header item\">\n                Admin Panel\n            </div>\n        </div>\n        <a class=\"item\" routerLink=\"/user/home\" routerLinkActive=\"active\">Home</a>\n        <a class=\"item\" routerLink=\"/user/application\" routerLinkActive=\"active\">Application</a>\n        <a class=\"item\" routerLink=\"/user/about\" routerLinkActive=\"active\">About</a>\n\n        <!--                <div class=\"right menu\">-->\n        <div class=\"phoneContent\">\n            <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">\n                <div class=\"Grey ui button\">\n                    Sign out\n                </div>\n            </a>\n            <a class=\"ui item active\" routerLink=\"/admin/login\" routerLinkActive=\"active\" *ngIf=\"!currentAdminUser\">\n                <div class=\"teal ui button\">\n                    Sign in\n                </div>\n            </a>\n        </div>\n        <!--                </div>-->\n\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">\n                    <div class=\"Grey ui button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item active\" routerLink=\"/admin/login\" routerLinkActive=\"active\" *ngIf=\"!currentAdminUser\">\n                    <div class=\"teal ui button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>\n<!--</div>-->\n\n\n<div class=\"bingcheng\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-control',\n  templateUrl: './admin-control.component.html',\n  styleUrls: ['./admin-control.component.css']\n})\nexport class AdminControlComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-control works!</p>\n\n<a class=\"item\" routerLink=\"/admin/control/add-registration-code\" routerLinkActive=\"active\">Add code</a>\n\n<router-outlet></router-outlet>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\nimport {Admin} from 'src/app/_models/admin';\nimport {Message} from 'src/app/_models/message';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<Admin>;\n  public currentUser: Observable<Admin>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<Admin>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): Admin {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/admins/login`, {email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  signup(name: string, email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/admins/signup`, {name, email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        // localStorage.setItem('currentUser', JSON.stringify(user));\n        // this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  addCode(code: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/registration-code/add`, {code})\n        .pipe(map(message => {\n          return message;\n        }));\n  }\n\n  logout(): any {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpHandler, HttpEvent, HttpInterceptor} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        console.log('401 Error');\n        this.authenticationService.logout();\n        location.reload(true);\n      } else if (err.status === 0) {\n        // Network error: server side not reachable\n        err.status = 500.11;\n        err.error.message = 'The server is under maintenance and the service is temporarily unavailable';\n      }\n      console.log(`err.error.message: ${err.error.message}, err.statusText: ${err.statusText}, err: `);\n      console.log(err);\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\nimport {User} from 'src/app/_models/user';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/users/login`, {email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  signup(name: string, email: string, password: string, registrationCode: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/users/signup`, {name, email, password, registrationCode})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        // localStorage.setItem('currentUser', JSON.stringify(user));\n        // this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  logout(): any {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\n// import {Data} from 'src/app/_models/data';\nimport {DataPoints} from 'src/app/_models/data.points';\nimport {DataInfo} from 'src/app/_models/data.info';\nimport {first} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class DataService {\n    // dataInfo: DataInfo;\n    dataPointId: string;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getRecentOne(sensorIdIn: string): any {\n        console.log('running get data/recent');\n        // const body = {\n        //     sensorId: sensorIdIn,\n        //     dataNumber: 1,\n        // };\n\n        const params = new HttpParams()\n            .set('sensorId', sensorIdIn)\n            .set('dataNumber', '1');\n\n        return this.http.get<DataInfo>(`${environment.apiUrl}/data/recent`,\n            {params});\n        // return this.http.get<DataPoints>(`${environment.apiUrl}/data/${this.dataPointId}`,\n        //     {responseType: 'json'});\n    }\n\n    getRange(sensorIdIn: string, start: string, end: string): any {\n        console.log('running get data/recent');\n        const params = new HttpParams()\n            .set('sensorId', sensorIdIn)\n            .set('start', start)\n            .set('end', end);\n\n        return this.http.get<DataInfo>(`${environment.apiUrl}/data/timerange`,\n            {params});\n        // return this.http.get<DataPoints>(`${environment.apiUrl}/data/${this.dataPointId}`,\n        //     {responseType: 'json'});\n    }\n\n    getData(dataPointId: string): any {\n        return this.http.get<DataPoints>(`${environment.apiUrl}/data/${dataPointId}`,\n            {responseType: 'json'});\n    }\n\n    // getData(): any {\n    //     return this.http.get<DataInfo>(`${environment.apiUrl}/sensors`).pipe(first()).subscribe(dataInfo => {\n    //         console.log(sensorInfo);\n    //         this.sensorInfo = sensorInfo;\n    //         this.loading = false;\n    //         const sensorskey = 'sensors';\n    //         this.sensors = sensorInfo[sensorskey];\n    //         const numberkey = 'count';\n    //         this.sensorNumber = sensorInfo[numberkey];\n    //     });\n    // }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'FilterPipe'\n})\nexport class FilterPipe implements PipeTransform {\n\n    transform(value: any, input: any): any {\n        if (input) {\n            return value.filter(val => (val.class.includes(input) || val.location.includes(input) || val.name.includes(input)));\n        } else {\n            return value;\n        }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n  selector: 'app-admin-add-code',\n  templateUrl: './admin-add-code.component.html',\n  styleUrls: ['./admin-add-code.component.css']\n})\nexport class AdminAddCodeComponent implements OnInit {\n  signupForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error = '';\n  success = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private authenticationService: AuthenticationService\n  ) {\n    // if (this.authenticationService.currentUserValue) {\n    //   this.router.navigate(['/']);\n    // }\n  }\n\n  ngOnInit(): void {\n    // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n    // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n    const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}$/;\n    const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n    // this.signupForm = this.formBuilder.group({\n    //     name: ['', Validators.required],\n    //     email: ['', Validators.required, Validators.pattern(mailReg)],\n    //     password: ['', Validators.required],\n    //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n    // });\n    this.signupForm = this.formBuilder.group({\n      code: new FormControl('', Validators.compose([\n        Validators.required, Validators.pattern(registerCodeReg)]))\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  // tslint:disable-next-line:typedef\n  get f() {\n    return this.signupForm.controls;\n  }\n\n  // tslint:disable-next-line:typedef\n  onSubmit() {\n    this.success = false;\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.addCode(this.f.code.value)\n        .pipe(first())\n        .subscribe({\n          next: () => {\n            this.error = '';\n            this.success = true;\n            this.loading = false;\n          },\n          error: error => {\n            this.error = error;\n            this.loading = false;\n          }\n        });\n  }\n\n  removeIcon(): void {\n    this.error = '';\n  }\n}\n","<p>admin-add-code works!</p>\n\n<div class=\"ui middle aligned center aligned grid\">\n    <div class=\"column\">\n        <h2 class=\"ui teal image header\">\n            <i class=\"user plus icon\"></i>\n            <div class=\"content\">\n                Add a new registration code\n            </div>\n        </h2>\n\n        <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"ui stacked segment\">\n\n                <div class=\"field\">\n                    <div class=\"ui left icon input\">\n                        <i class=\"key icon\"></i>\n                        <input type=\"text\" formControlName=\"code\" class=\"form-control\"\n                               placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n                               [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>\n                    </div>\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>\n                    </div>\n                </div>\n\n                <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n                <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n                    <span *ngIf=\"loading\" class=\"ui loader\"></span>\n                    Submit\n                </button>\n\n                <div class=\"ui negative message\" *ngIf=\"error\">\n                    <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n                    <div class=\"header\">\n                        {{error}}\n                    </div>\n                    <ul class=\"list\">\n                        <li>Please enter a valid code</li>\n                        <li>The shape should be like:\n                            <p>XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</li>\n                    </ul>\n                </div>\n\n                <div class=\"ui green message\" *ngIf=\"success\">\n                    <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n                    <div class=\"header\">\n                        Add registration code success!\n                    </div>\n                    <ul class=\"list\">\n                        <li>Current registration code is:\n                            <p>{{f.code.value}}</li>\n                    </ul>\n                </div>\n\n            </div>\n\n        </form>\n\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n    signupForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n        // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n        const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}$/;\n        const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n        // this.signupForm = this.formBuilder.group({\n        //     name: ['', Validators.required],\n        //     email: ['', Validators.required, Validators.pattern(mailReg)],\n        //     password: ['', Validators.required],\n        //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n        // });\n        this.signupForm = this.formBuilder.group({\n            name: new FormControl('', Validators.compose([\n                Validators.required, Validators.minLength(3), Validators.maxLength(16)])),\n            email: new FormControl('', Validators.compose([\n                Validators.required, Validators.email])),\n            password: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(passwordReg),\n                Validators.minLength(8),\n                Validators.maxLength(16)])),\n            code: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(registerCodeReg)]))\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.signupForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.signupForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.signup(this.f.name.value, this.f.email.value, this.f.password.value, this.f.code.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/login';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n\n}\n","<!--<p>signup works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user plus icon\"></i>\n      <div class=\"content\">\n        Sign up a new account\n      </div>\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"address book icon\"></i>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"User name\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            <div *ngIf=\"f.name.errors.minlength\">Name should be at least 2 characters</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"envelope icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern || f.password.errors.minlength || f.password.errors.maxlength\">\n              Password should be 8-16 characters with combination of letters/numbers/symbols\n            </div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"key icon\"></i>\n            <input type=\"text\" formControlName=\"code\" class=\"form-control\"\n                   placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>\n            <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Signup\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a strong password.</li>\n            <li>Your password must be at least 6 characters.</li>\n\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n    <div class=\"ui message\">\n      Already have an account?   <a routerLink=\"../login\">Sign In</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {LoginComponent} from './login/login.component';\nimport {SignupComponent} from './signup/signup.component';\nimport {ApplicationComponent} from './private-components/application/application.component';\nimport {AboutComponent} from './about/about.component';\nimport {HomeComponent} from './home/home.component';\nimport {EquipmentComponent} from './private-components/equipment/equipment.component';\nimport {SettingsComponent} from './private-components/settings/settings.component';\nimport {InfoComponent} from './private-components/info/info.component';\nimport {SensorComponent} from './private-components/sensor/sensor.component';\nimport {AdminLoginComponent} from './admin-components/login/login.component';\nimport {AdminSignupComponent} from './admin-components/signup/signup.component';\nimport {AdminControlComponent} from './admin-components/admin-control/admin-control.component';\nimport {AdminHomeComponent} from './admin-components/admin-home/admin-home.component';\nimport {UserFrameComponent} from './user-frame/user-frame.component';\nimport {AdminAddCodeComponent} from './admin-components/admin-add-code/admin-add-code.component';\nimport {DesktopApplicationComponent} from './desktop-application/desktop-application.component';\nimport {YourGuard} from './_helpers/your.guard';\nimport {YourGuard as DesktopGuard} from './_helpers/desktop.guard';\nimport {AdminGuard} from './_helpers/admin.guard';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'user', pathMatch: 'full'},\n    {\n        path: 'user', component: UserFrameComponent,\n        children: [\n            {path: '', component: HomeComponent},\n            {path: 'home', component: HomeComponent},\n            {\n                path: 'application', component: ApplicationComponent, canActivate: [YourGuard],\n                children: [\n                    {path: '', component: InfoComponent},\n                    {path: 'info', component: InfoComponent},\n                    {path: 'settings', component: SettingsComponent},\n                    {path: 'equipment', component: EquipmentComponent},\n                    {path: 'sensor/:sensorId', component: SensorComponent},\n                ]\n            },\n            {path: 'about', component: AboutComponent},\n            {path: 'login', component: LoginComponent},\n            {path: 'signup', component: SignupComponent},\n        ]\n    },\n    // {path: '', component: HomeComponent},\n    // {path: 'home', component: HomeComponent},\n    // {\n    //     path: 'application', component: ApplicationComponent, canActivate: [YourGuard],\n    //     children: [\n    //         {path: '', component: InfoComponent},\n    //         {path: 'info', component: InfoComponent},\n    //         {path: 'settings', component: SettingsComponent},\n    //         {path: 'equipment', component: EquipmentComponent},\n    //         {path: 'sensor/:sensorId', component: SensorComponent},\n    //     ]\n    // },\n    // {path: 'about', component: AboutComponent},\n    // {path: 'login', component: LoginComponent},\n    // {path: 'signup', component: SignupComponent},\n    {\n        path: 'admin', component: AdminHomeComponent,\n        children: [\n            {path: '', component: AdminControlComponent},\n            {path: 'login', component: AdminLoginComponent},\n            {path: 'signup', component: AdminSignupComponent},\n            {\n                path: 'control', component: AdminControlComponent, canActivate: [AdminGuard],\n                children: [\n                    {path: 'add-registration-code', component: AdminAddCodeComponent},\n                ]\n            }\n        ]\n    },\n    {\n        path: 'desktop', component: DesktopApplicationComponent,\n        children: [\n            {path: '', component: InfoComponent, canActivate: [DesktopGuard]},\n            {path: 'login', component: LoginComponent},\n            {path: 'signup', component: SignupComponent},\n            {path: 'info', component: InfoComponent, canActivate: [DesktopGuard]},\n            {path: 'settings', component: SettingsComponent, canActivate: [DesktopGuard]},\n            {path: 'equipment', component: EquipmentComponent, canActivate: [DesktopGuard]},\n            {path: 'sensor/:sensorId', component: SensorComponent, canActivate: [DesktopGuard]},\n        ]\n    },\n    {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            email: ['email@gmail.com', Validators.compose([\n                Validators.required, Validators.email])],\n            password: ['pass', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.loginForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const currentMain = this.router.url.split('/')[1];\n                    console.log('this.router.url');\n                    console.log(this.router.url);\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || currentMain;\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<!--<p>login works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user icon\"></i>\n        Sign in to your account\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"user icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Sign In\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a right password.</li>\n            <li>You can sign up if you are a new user.</li>\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n\n    <div class=\"ui message\">\n      New to us?   <a routerLink=\"../signup\">Sign Up</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}