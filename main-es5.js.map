{"version":3,"sources":["webpack:///src/app/_services/sensor.service.ts","webpack:///src/app/private-components/data-chart/data-chart.component.ts","webpack:///src/app/private-components/data-chart/data-chart.component.html","webpack:///src/app/_helpers/admin.guard.ts","webpack:///src/app/private-components/settings/settings.component.ts","webpack:///src/app/private-components/settings/settings.component.html","webpack:///src/app/_helpers/your.guard.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/user-frame/user-frame.component.ts","webpack:///src/app/user-frame/user-frame.component.html","webpack:///src/app/_helpers/desktop.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/private-components/application/application.component.ts","webpack:///src/app/private-components/application/application.component.html","webpack:///src/app/private-components/sensor/sensor.component.ts","webpack:///src/app/private-components/sensor/sensor.component.html","webpack:///src/app/private-components/info/info.component.ts","webpack:///src/app/private-components/info/info.component.html","webpack:///src/app/private-components/sensor-settings/sensor-settings.component.ts","webpack:///src/app/private-components/sensor-settings/sensor-settings.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/_helpers/admin.jwt.interceptor.ts","webpack:///src/app/admin-components/signup/signup.component.ts","webpack:///src/app/admin-components/signup/signup.component.html","webpack:///src/app/_services/user.service.ts","webpack:///src/app/private-components/equipment/equipment.component.ts","webpack:///src/app/private-components/equipment/equipment.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/admin-components/login/login.component.ts","webpack:///src/app/admin-components/login/login.component.html","webpack:///src/app/private-components/data-get-one/data-get-one.component.ts","webpack:///src/app/private-components/data-get-one/data-get-one.component.html","webpack:///src/app/desktop-application/desktop-application.component.ts","webpack:///src/app/desktop-application/desktop-application.component.html","webpack:///src/app/private-components/data-get-range/data-get-range.component.ts","webpack:///src/app/private-components/data-get-range/data-get-range.component.html","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/admin-components/admin-home/admin-home.component.ts","webpack:///src/app/admin-components/admin-home/admin-home.component.html","webpack:///src/app/admin-components/admin-control/admin-control.component.ts","webpack:///src/app/admin-components/admin-control/admin-control.component.html","webpack:///src/app/_services/admin.authentication.service.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/data.service.ts","webpack:///src/app/_helpers/filter.pipe.ts","webpack:///src/app/admin-components/admin-add-code/admin-add-code.component.ts","webpack:///src/app/admin-components/admin-add-code/admin-add-code.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SensorService","http","console","log","get","apiUrl","sensorId","settings","put","sensorInfo","providedIn","DataChartComponent","dataService","lineChartLabels","e","ready","loading","emptyData","ngAfterViewInit","setTimeout","getData","dataPointId","subscribe","dataPoints","lineChartType","dataPoint","sensor","data","time","Date","toLocaleString","_id","dataNum","dt","freq","lineChartData","AllChartData","label","yMaxX","yMaxY","yMaxZ","showX","Math","max","slice","freqLow","freqHigh","push","showY","showZ","yMaxes","minLength","length","i","overlap","lineChartOptions","generateOptions","showLines","elements","point","radius","line","tension","scales","xAxes","display","scaleLabel","labelString","ticks","min","yAxes","generateYAxes","tooltips","mode","intersect","ceil","selector","templateUrl","styleUrls","AdminGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","SettingsComponent","formBuilder","userService","submitted","error","showLoading","user","getUser","updateForm","group","name","required","company","remarks","getAll","pipe","users","setUser","invalid","updateSettingJson","propName","value","f","updateSettings","JSON","stringify","next","result","ok","controls","onSubmit","YourGuard","AboutComponent","UserFrameComponent","adminauthenticationService","title","x","currentAdminUser","logout","HomeComponent","preventDefault","deferredPrompt","prompt","userChoice","then","choiceResult","outcome","addToHomeScreen","onbeforeinstallprompt","environment","production","ApplicationComponent","setRouter","activeRouter","SensorComponent","range","start","end","myDatePicker","snapshot","paramMap","now","toISOString","InfoComponent","date","SensorSettingsComponent","sensorService","location","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","AppComponent","JwtInterceptor","request","isLoggedIn","token","isApiUrl","startsWith","clone","setHeaders","handle","AdminSignupComponent","mailReg","registerCodeReg","passwordReg","signupForm","compose","maxLength","email","password","pattern","signup","UserService","EquipmentComponent","getSensorInfo","sensorskey","sensors","numberkey","sensorNumber","updateInfo","setSensorInfo","showChart","showSettings","showId","AppModule","provide","useClass","multi","register","enabled","declarations","imports","providers","bootstrap","AdminLoginComponent","loginForm","login","DataGetOneComponent","ngOnInit","getRecentOne","dataInfo","cnt","dps","DesktopApplicationComponent","DataGetRangeComponent","dataNumber","changes","getRange","Authorization","AdminHomeComponent","AdminControlComponent","AuthenticationService","currentUserSubject","parse","localStorage","getItem","asObservable","post","setItem","message","removeItem","ErrorInterceptor","err","status","reload","statusText","registrationCode","DataService","sensorIdIn","params","set","responseType","FilterPipe","input","filter","val","includes","AdminAddCodeComponent","success","addCode","createCode","removeIcon","create_pwd","pwdLength","newPass","char","j","floor","random","charAt","generate","PageNotFoundComponent","SignupComponent","currentMain","split","routes","path","redirectTo","pathMatch","component","children","canActivate","AppRoutingModule","forRoot","LoginComponent","window","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaA,a;AAGT,+BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AACnB;;;;mCAEK;AACFC,mBAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,mBAAO,KAAKF,IAAL,CAAUG,GAAV,WAA6B,yEAAYC,MAAzC,cAAP;AACH;;;yCAEcC,Q,EAAkBC,Q,EAAgB;AAC7CL,mBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,mBAAO,KAAKF,IAAL,CAAUO,GAAV,WAA6B,yEAAYH,MAAzC,sBAA2DC,QAA3D,GAAuEC,QAAvE,CAAP;AACH;;;0CAEY;AACT,mBAAO,KAAKE,UAAZ;AACH;;;wCAEaA,U,EAAsB;AAChC,iBAAKA,UAAL,GAAkBA,UAAlB;AACH;;;;;;;yBAtBQT,a,EAAa,uH;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBADD;;;;;wEACZA,a,EAAa;gBADzB,wDACyB;iBADd;AAACU,sBAAU,EAAE;AAAb,W;AACc,U;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMQ;;AACI;;AAAoB;;AAAc;;AAClC;;AACI;;AAAM;;AAAI;;AACV;;AAAG;;AAAO;;AACd;;AAIJ;;;;;;AARwB;;AAAA;;AAGb;;AAAA;;;;;;;;AAMX;;AAKQ;AAAA;;AAAA;;AAAA;AAAA,aAAmC,YAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AACoC;;;;;;AALpC,qGAA0B,QAA1B,EAA0B,sBAA1B,EAA0B,SAA1B,EAA0B,uBAA1B,EAA0B,WAA1B,EAA0B,oBAA1B;;;;;;;;;;;;AAOJ;;AAKQ;AAAA;;AAAA;;AAAA;AAAA,aAAmC,YAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AACoC;;;;;;AALpC,8KAA8B,QAA9B,EAA8B,sBAA9B,EAA8B,SAA9B,EAA8B,0BAA9B,EAA8B,WAA9B,EAA8B,oBAA9B;;;;;;;;AAMR;;AAKQ;AAAA;;AAAA;;AAAA;AAAA,aAAmC,YAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AACoC;;;;;;AALpC,8KAA8B,QAA9B,EAA8B,sBAA9B,EAA8B,SAA9B,EAA8B,0BAA9B,EAA8B,WAA9B,EAA8B,oBAA9B;;;;;;;;AAMR;;AAKQ;AAAA;;AAAA;;AAAA;AAAA,aAAmC,YAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AACoC;;;;;;AALpC,+KAA8B,QAA9B,EAA8B,uBAA9B,EAA8B,SAA9B,EAA8B,2BAA9B,EAA8B,WAA9B,EAA8B,qBAA9B;;;;;;AAhBZ;;AACI;;AAOA;;AAOA;;AAOJ;;;;;;AArBa;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;;;;;AAnCrB;;AACI;;AAEI;;AAUA;;AAOA;;AAuBJ;;AACJ;;;;;;AAzCc;;AAAA;;AAUG;;AAAA;;AAOH;;AAAA;;;;;;AA0Bd;;AACI;;AACA;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;UDtDaC,kB;AAkBT,oCAAoBC,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AANpB,eAAAC,eAAA,GAA8B,EAA9B;AAOC;;;;uCAEYC,C,EAAM;AACfZ,mBAAO,CAACC,GAAR,CAAYW,CAAZ;AACH;;;uCAEYA,C,EAAM;AACfZ,mBAAO,CAACC,GAAR,CAAYW,CAAZ;AACH,W,CAED;;;;qCACW;AACP,iBAAKC,KAAL,GAAa,KAAb;AACA,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACH;;;wCAEU;AACP,iBAAKF,KAAL,GAAa,KAAb;AACA,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACA,iBAAKC,eAAL;AACH;;;4CAEc;AAAA;;AACXC,sBAAU,CAAC,YAAM;AACb,mBAAI,CAACJ,KAAL,GAAa,IAAb;;AACA,mBAAI,CAACH,WAAL,CAAiBQ,OAAjB,CAAyB,KAAI,CAACC,WAA9B,EAA2CC,SAA3C,CAAqD,UAAAC,UAAU,EAAI;AAC/DrB,uBAAO,CAACC,GAAR,CAAYoB,UAAZ;AACA,qBAAI,CAACC,aAAL,GAAqB,MAArB;AACA,qBAAI,CAACC,SAAL,GAAiBF,UAAU,CAAC,WAAD,CAA3B;AACA,qBAAI,CAAChB,QAAL,GAAgB,KAAI,CAACkB,SAAL,CAAeC,MAAf,CAAsBnB,QAAtC;AACA,qBAAI,CAACoB,IAAL,GAAY,KAAI,CAACF,SAAL,CAAe,MAAf,CAAZ;AACA,qBAAI,CAACE,IAAL,CAAU,CAAV,EAAa,CAAb,IAAkB,CAAlB;AACA,qBAAI,CAACA,IAAL,CAAU,CAAV,EAAa,CAAb,IAAkB,CAAlB;AACA,qBAAI,CAACA,IAAL,CAAU,CAAV,EAAa,CAAb,IAAkB,CAAlB;AACA,qBAAI,CAACC,IAAL,GAAY,KAAI,CAACH,SAAL,CAAe,MAAf,CAAZ;AACA,qBAAI,CAACG,IAAL,GAAY,IAAIC,IAAJ,CAAS,KAAI,CAACD,IAAd,EAAoBE,cAApB,EAAZ;AACA,qBAAI,CAACC,GAAL,GAAW,KAAI,CAACN,SAAL,CAAe,KAAf,CAAX;AAEA,oBAAMO,OAAO,GAAG,KAAI,CAACP,SAAL,CAAe,SAAf,CAAhB;AACA,qBAAI,CAACQ,EAAL,GAAU,KAAI,CAACR,SAAL,CAAe,IAAf,KAAwB,GAAlC;AACA,oBAAMS,IAAI,GAAG,IAAI,KAAI,CAACD,EAAT,GAAcD,OAA3B;AACA,qBAAI,CAACG,aAAL,GAAqB,EAArB;AACA,qBAAI,CAACC,YAAL,GAAoB,CAChB;AAACT,sBAAI,EAAE,KAAI,CAACA,IAAL,CAAU,CAAV,CAAP;AAAqBU,uBAAK,EAAE;AAA5B,iBADgB,EAEhB;AAACV,sBAAI,EAAE,KAAI,CAACA,IAAL,CAAU,CAAV,CAAP;AAAqBU,uBAAK,EAAE;AAA5B,iBAFgB,EAGhB;AAACV,sBAAI,EAAE,KAAI,CAACA,IAAL,CAAU,CAAV,CAAP;AAAqBU,uBAAK,EAAE;AAA5B,iBAHgB,CAApB;AAKA,oBAAIC,KAAK,GAAG,CAAZ;AACA,oBAAIC,KAAK,GAAG,CAAZ;AACA,oBAAIC,KAAK,GAAG,CAAZ;;AACA,oBAAI,KAAI,CAACjC,QAAL,CAAckC,KAAlB,EAAyB;AACrBH,uBAAK,GAAGI,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAI,CAACf,IAAL,CAAU,CAAV,EAAaiB,KAAb,CAAmB,KAAI,CAACrC,QAAL,CAAcsC,OAAd,GAAwBX,IAA3C,EAAiD,KAAI,CAAC3B,QAAL,CAAcuC,QAAd,GAAyBZ,IAA1E,CAAR,EAAZ;;AACA,uBAAI,CAACC,aAAL,CAAmBY,IAAnB,CAAwB;AAACpB,wBAAI,EAAE,KAAI,CAACA,IAAL,CAAU,CAAV,CAAP;AAAqBU,yBAAK,EAAE;AAA5B,mBAAxB;AACH;;AACD,oBAAI,KAAI,CAAC9B,QAAL,CAAcyC,KAAlB,EAAyB;AACrBT,uBAAK,GAAGG,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAI,CAACf,IAAL,CAAU,CAAV,EAAaiB,KAAb,CAAmB,KAAI,CAACrC,QAAL,CAAcsC,OAAd,GAAwBX,IAA3C,EAAiD,KAAI,CAAC3B,QAAL,CAAcuC,QAAd,GAAyBZ,IAA1E,CAAR,EAAZ;;AACA,uBAAI,CAACC,aAAL,CAAmBY,IAAnB,CAAwB;AAACpB,wBAAI,EAAE,KAAI,CAACA,IAAL,CAAU,CAAV,CAAP;AAAqBU,yBAAK,EAAE;AAA5B,mBAAxB;AACH;;AACD,oBAAI,KAAI,CAAC9B,QAAL,CAAc0C,KAAlB,EAAyB;AACrBT,uBAAK,GAAGE,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAI,CAACf,IAAL,CAAU,CAAV,EAAaiB,KAAb,CAAmB,KAAI,CAACrC,QAAL,CAAcsC,OAAd,GAAwBX,IAA3C,EAAiD,KAAI,CAAC3B,QAAL,CAAcuC,QAAd,GAAyBZ,IAA1E,CAAR,EAAZ;;AACA,uBAAI,CAACC,aAAL,CAAmBY,IAAnB,CAAwB;AAACpB,wBAAI,EAAE,KAAI,CAACA,IAAL,CAAU,CAAV,CAAP;AAAqBU,yBAAK,EAAE;AAA5B,mBAAxB;AACH;;AACD,qBAAI,CAACa,MAAL,GAAc,CAACZ,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAd;AACA,oBAAIW,SAAS,GAAG,KAAI,CAACxB,IAAL,CAAU,CAAV,EAAayB,MAA7B;;AACA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAAC1B,IAAL,CAAUyB,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACvC,sBAAI,KAAI,CAAC1B,IAAL,CAAU0B,CAAV,EAAaD,MAAb,GAAsBD,SAA1B,EAAqC;AACjCA,6BAAS,GAAG,KAAI,CAACxB,IAAL,CAAU0B,CAAV,EAAaD,MAAzB;AACH;AACJ;;AACD,qBAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGF,SAApB,EAA+BE,EAAC,EAAhC,EAAoC;AAChC,uBAAI,CAACxC,eAAL,CAAqBkC,IAArB,CAA0BM,EAAC,GAAGnB,IAA9B;AACH;;AACD,oBAAI,KAAI,CAAC3B,QAAL,CAAc+C,OAAlB,EAA2B;AACvB,uBAAI,CAACC,gBAAL,GAAwB,KAAI,CAACC,eAAL,CAAqBd,IAAI,CAACC,GAAL,CAASL,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,IAAgC,GAArD,CAAxB;AACH,iBAFD,MAEO;AACH,uBAAI,CAACe,gBAAL,GAAwB,CACpB,KAAI,CAACC,eAAL,CAAqBlB,KAArB,CADoB,EAEpB,KAAI,CAACkB,eAAL,CAAqBjB,KAArB,CAFoB,EAGpB,KAAI,CAACiB,eAAL,CAAqBhB,KAArB,CAHoB,CAAxB;AAKH,iBAvD8D,CAwD/D;;;AACA,qBAAI,CAACvB,SAAL,GAAiB,KAAjB,CAzD+D,CAyDvC;;AACxB,qBAAI,CAACD,OAAL,GAAe,KAAf,CA1D+D,CA0DzC;AACzB,eA3DD;AA4DH,aA9DS,EA8DP,CA9DO,CAAV;AA+DH;;;0CAEe2B,G,EAAW;AACvB,mBAAO;AACHc,uBAAS,EAAE,IADR;AAEHC,sBAAQ,EAAE;AACNC,qBAAK,EAAE;AACHC,wBAAM,EAAE;AADL,iBADD;AAINC,oBAAI,EAAE;AACFC,yBAAO,EAAE;AADP;AAJA,eAFP;AAUHC,oBAAM,EAAE;AACJC,qBAAK,EAAE,CAAC;AACJC,yBAAO,EAAE,IADL;AAEJC,4BAAU,EAAE;AACRD,2BAAO,EAAE,IADD;AAERE,+BAAW,EAAE;AAFL,mBAFR;AAMJC,uBAAK,EAAE;AACHC,uBAAG,EAAE,KAAK9D,QAAL,CAAcsC,OADhB;AAEHF,uBAAG,EAAE,KAAKpC,QAAL,CAAcuC;AAFhB;AANH,iBAAD,CADH;AAYJwB,qBAAK,EAAE,KAAKC,aAAL,CAAmB5B,GAAnB;AAZH,eAVL;AAwBH6B,sBAAQ,EAAE;AACNC,oBAAI,EAAE,OADA;AAENC,yBAAS,EAAE;AAFL;AAxBP,aAAP;AA6BH;;;wCAEa/B,G,EAAW;AACrB,mBAAO,CAAC;AACJsB,qBAAO,EAAE,IADL;AAEJC,wBAAU,EAAE;AACRD,uBAAO,EAAE,IADD;AAERE,2BAAW,EAAE;AAFL,eAFR;AAMJC,mBAAK,EAAE;AACHC,mBAAG,EAAE,CADF;AAEH1B,mBAAG,EAAED,IAAI,CAACiC,IAAL,CAAUhC,GAAV;AAFF;AANH,aAAD,CAAP;AAWH;;;;;;;yBAzJQhC,kB,EAAkB,mI;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6Y;AAAA;AAAA;ACR/B;;AA8CA;;;;AA9CM;;AA8CA;;AAAA;;;;;;;;;wEDtCOA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACPiE,oBAAQ,EAAE,gBADH;AAEPC,uBAAW,EAAE,6BAFN;AAGPC,qBAAS,EAAE,CAAC,4BAAD;AAHJ,W;AAKoB,U;;;;;AAClBzD,qBAAW,EAAE,CAAF;kBAAnB;AAAmB,WAAE;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa0D,U;AACX,4BACUC,MADV,EAEUC,qBAFV,EAEsD;AAAA;;AAD5C,eAAAD,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AAET;;;;sCAGCC,K,EACAC,K,EAA0B;AAC1B;AACA,gBAAMC,WAAW,GAAG,KAAKH,qBAAL,CAA2BI,gBAA/C;;AACA,gBAAID,WAAJ,EAAiB;AACf;AACA,qBAAO,IAAP;AACD,aANyB,CAQ1B;;;AACA,iBAAKJ,MAAL,CAAYM,QAAZ,CAAqB,CAAC,cAAD,CAArB,EAAuC;AAACC,yBAAW,EAAE;AAACC,yBAAS,EAAEL,KAAK,CAACM;AAAlB;AAAd,aAAvC,WACW,UAAA3E,CAAC,EAAI;AACVZ,qBAAO,CAACC,GAAR,CAAYW,CAAZ;AACD,aAHL;AAIA,mBAAO,KAAP;AACD;;;;;;;yBAvBUiE,U,EAAU,8G,EAAA,2J;AAAA,O;;;eAAVA,U;AAAU,iBAAVA,UAAU,K;AAAA,oBAFT;;;;;wEAEDA,U,EAAU;gBAHtB,wDAGsB;iBAHX;AACVrE,sBAAU,EAAE;AADF,W;AAGW,U;;;;;;;;;;;;;;;;;;;;;;;;ACTvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACI;;AACA;;AACA;;AAAwB;;AAAmB;;AAC/C;;AACJ;;;;;;AAHQ;;AAAA;;AACwB;;AAAA;;;;;;AAIhC;;AACI;;AACI;;AACA;;AAAwB;;AAAU;;AACtC;;AACJ;;;;;;AAwBgB;;;;;;;;AAKZ;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACJ;;;;;;AADI;;AAAA;;;;UD/BKgF,iB;AAOT;AAEA,mCAAoBC,WAApB,EACoBC,WADpB,EAC8C;AAAA;;AAD1B,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAPpB,eAAA5E,OAAA,GAAU,KAAV;AACA,eAAA6E,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAQ,EAAR;AACA,eAAAC,WAAA,GAAc,SAAd;AAKC;;;;qCAEO;AAAA;;AACJ,iBAAK/E,OAAL,GAAe,IAAf;AACA,iBAAKgF,IAAL,GAAY,KAAKJ,WAAL,CAAiBK,OAAjB,EAAZ;AACA,iBAAKC,UAAL,GAAkB,KAAKP,WAAL,CAAiBQ,KAAjB,CAAuB;AACrCC,kBAAI,EAAE,CAAC,KAAD,EAAQ,0DAAWC,QAAnB,CAD+B;AAErCC,qBAAO,EAAE,CAAC,KAAD,EAAQ,0DAAWD,QAAnB,CAF4B;AAGrCE,qBAAO,EAAE,CAAC,KAAD,EAAQ,0DAAWF,QAAnB;AAH4B,aAAvB,CAAlB;;AAKA,gBAAI,CAAC,KAAKL,IAAV,EAAgB;AACZ,mBAAKJ,WAAL,CAAiBY,MAAjB,GAA0BC,IAA1B,CAA+B,8DAA/B,EAAwCnF,SAAxC,CAAkD,UAAAoF,KAAK,EAAI;AACvD,sBAAI,CAACV,IAAL,GAAYU,KAAK,CAAC,CAAD,CAAjB;;AACA,sBAAI,CAACd,WAAL,CAAiBe,OAAjB,CAAyB,MAAI,CAACX,IAA9B;;AACA,sBAAI,CAACE,UAAL,GAAkB,MAAI,CAACP,WAAL,CAAiBQ,KAAjB,CAAuB;AACrCC,sBAAI,EAAE,CAAC,MAAI,CAACJ,IAAL,CAAUA,IAAV,CAAeI,IAAhB,EAAsB,0DAAWC,QAAjC,CAD+B;AAErCC,yBAAO,EAAE,CAAC,MAAI,CAACN,IAAL,CAAUA,IAAV,CAAeM,OAAhB,EAAyB,0DAAWD,QAApC,CAF4B;AAGrCE,yBAAO,EAAE,CAAC,MAAI,CAACP,IAAL,CAAUA,IAAV,CAAeO,OAAhB,EAAyB,0DAAWF,QAApC;AAH4B,iBAAvB,CAAlB;AAKA,sBAAI,CAACrF,OAAL,GAAe,KAAf;AACA,sBAAI,CAAC+E,WAAL,GAAmB,EAAnB;AACH,eAVD;AAWH,aAZD,MAYO;AACH;AACA,mBAAKG,UAAL,GAAkB,KAAKP,WAAL,CAAiBQ,KAAjB,CAAuB;AACrCC,oBAAI,EAAE,CAAC,KAAKJ,IAAL,CAAUA,IAAV,CAAeI,IAAhB,EAAsB,0DAAWC,QAAjC,CAD+B;AAErCC,uBAAO,EAAE,CAAC,KAAKN,IAAL,CAAUA,IAAV,CAAeM,OAAhB,EAAyB,0DAAWD,QAApC,CAF4B;AAGrCE,uBAAO,EAAE,CAAC,KAAKP,IAAL,CAAUA,IAAV,CAAeO,OAAhB,EAAyB,0DAAWF,QAApC;AAH4B,eAAvB,CAAlB;AAKA,mBAAKrF,OAAL,GAAe,KAAf;AACA,mBAAK+E,WAAL,GAAmB,EAAnB;AACH;AACJ,W,CAED;;;;AAKA;qCACW;AAAA;;AACP,iBAAKF,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,gBAAI,KAAKK,UAAL,CAAgBU,OAApB,EAA6B;AACzB;AACH;;AAED,gBAAMC,iBAAiB,GAAG,CACtB;AACIC,sBAAQ,EAAE,MADd;AAEIC,mBAAK,EAAE,KAAKC,CAAL,CAAOZ,IAAP,CAAYW;AAFvB,aADsB,EAKtB;AACID,sBAAQ,EAAE,SADd;AAEIC,mBAAK,EAAE,KAAKC,CAAL,CAAOV,OAAP,CAAeS;AAF1B,aALsB,EAStB;AACID,sBAAQ,EAAE,SADd;AAEIC,mBAAK,EAAE,KAAKC,CAAL,CAAOT,OAAP,CAAeQ;AAF1B,aATsB,CAA1B;AAeA,iBAAK/F,OAAL,GAAe,IAAf;AACA,iBAAK4E,WAAL,CAAiBqB,cAAjB,CAAgCC,IAAI,CAACC,SAAL,CAAeN,iBAAf,CAAhC,EACKJ,IADL,CACU,8DADV,EAEKnF,SAFL,CAEe;AACP8F,kBAAI,EAAE,cAACC,MAAD,EAAwB;AAC1B;AACAnH,uBAAO,CAACC,GAAR,uBAA2BkH,MAAM,CAACA,MAAP,CAAcC,EAAzC;AACA,sBAAI,CAACtG,OAAL,GAAe,KAAf;AACH,eALM;AAMP8E,mBAAK,EAAE,eAAAA,MAAK,EAAI;AACZ,sBAAI,CAACA,KAAL,GAAaA,MAAb;AACA,sBAAI,CAAC9E,OAAL,GAAe,KAAf;AACH;AATM,aAFf;AAaA,iBAAKgF,IAAL,CAAUA,IAAV,CAAeI,IAAf,GAAsB,KAAKY,CAAL,CAAOZ,IAAP,CAAYW,KAAlC;AACA,iBAAKf,IAAL,CAAUA,IAAV,CAAeM,OAAf,GAAyB,KAAKU,CAAL,CAAOV,OAAP,CAAeS,KAAxC;AACA,iBAAKf,IAAL,CAAUA,IAAV,CAAeO,OAAf,GAAyB,KAAKS,CAAL,CAAOT,OAAP,CAAeQ,KAAxC;AACH;;;uCAGS;AACN,iBAAKjB,KAAL,GAAa,EAAb;AACH;;;8BAlDO;AACJ,mBAAO,KAAKI,UAAL,CAAgBqB,QAAvB;AACH;;;;;;;yBAhDQ7B,iB,EAAiB,2H,EAAA,mI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,yzB;AAAA;AAAA;ACb9B;;AAQA;;AAOA;;AAAqD;AAAA,qBAAY,IAAA8B,QAAA,EAAZ;AAAsB,aAAtB;;AACjD;;AACI;;AACI;;AAAsB;;AAAK;;AAC3B;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;;AAAQ;;AAC9B;;AACJ;;AACJ;;AACA;;AACI;;AAA4B;;AAAQ;;AACpC;;AAGJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AAIJ;;;;AA9CM;;AAQA;;AAAA;;AAOsB;;AAAA,kGAAwB,SAAxB,EAAwB,eAAxB;;AAqBR;;AAAA;;AACG;;AAAA;;AAKe;;AAAA;;;;;;;;;wED7BzB9B,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACPd,oBAAQ,EAAE,cADH;AAEPC,uBAAW,EAAE,2BAFN;AAGPC,qBAAS,EAAE,CAAC,0BAAD;AAHJ,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa2C,S;AACX,2BACUzC,MADV,EAEUC,qBAFV,EAEsD;AAAA;;AAD5C,eAAAD,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AAET;;;;sCAGCC,K,EACAC,K,EAA0B;AAC1B;AACA,gBAAMC,WAAW,GAAG,KAAKH,qBAAL,CAA2BI,gBAA/C;;AACA,gBAAID,WAAJ,EAAiB;AACf;AACA,qBAAO,IAAP;AACD,aANyB,CAQ1B;;;AACA,iBAAKJ,MAAL,CAAYM,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAACC,yBAAW,EAAE;AAACC,yBAAS,EAAEL,KAAK,CAACM;AAAlB;AAAd,aAAtC,WACW,UAAA3E,CAAC,EAAI;AACVZ,qBAAO,CAACC,GAAR,CAAYW,CAAZ;AACD,aAHL;AAIA,mBAAO,KAAP;AACD;;;;;;;yBAvBU2G,S,EAAS,8G,EAAA,qJ;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACV/G,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;;;;;ACTtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOagH,c;AAEX,kCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,c;AAAc,O;;;cAAdA,c;AAAc,kC;AAAA,gB;AAAA,e;AAAA,6D;AAAA;AAAA;ACP3B;;AACI;;AAAsB;;AAAK;;AAC/B;;;;;;;;wEDKaA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT9C,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkBY;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AACI;;AACJ;;AACJ;;;;;;AACA;;AACI;;AACI;;AACJ;;AACJ;;;;;;;;AAMI;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AACI;;AAA6B;;AACjC;;AACJ;;;;;;AACA;;AACI;;AACI;;AAA4B;;AAChC;;AACJ;;;;UD7BH6C,kB;AAMX,oCACY3C,MADZ,EAEYC,qBAFZ,EAGY2C,0BAHZ,EAGkE;AAAA;;AAAA;;AAFtD,eAAA5C,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAA2C,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,KAAA,GAAQ,eAAR;AASE,eAAK5C,qBAAL,CAA2BG,WAA3B,CAAuC9D,SAAvC,CAAiD,UAAAwG,CAAC;AAAA,mBAAI,MAAI,CAAC1C,WAAL,GAAmB0C,CAAvB;AAAA,WAAlD;AACA,eAAKF,0BAAL,CAAgCxC,WAAhC,CAA4C9D,SAA5C,CAAsD,UAAAwG,CAAC;AAAA,mBAAI,MAAI,CAACC,gBAAL,GAAwBD,CAA5B;AAAA,WAAvD;AACD;;;;mCAEK;AACJ,iBAAK7C,qBAAL,CAA2B+C,MAA3B;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;;;wCAEU;AACT,iBAAKsC,0BAAL,CAAgCI,MAAhC;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;;;;;;;yBAvBUqC,kB,EAAkB,uH,EAAA,uJ,EAAA,oK;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,22C;AAAA;AAAA;ACb/B;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAAkE;;AAAI;;AACtE;;AAAyE;;AAAW;;AACpF;;AAAmE;;AAAK;;AAGxE;;AACI;;AAKA;;AAKJ;;AAGA;;AACI;;AACI;;AAKA;;AAKJ;;AACJ;;AAEJ;;AACJ;;AAIA;;AACI;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAA+B;;AAAK;;AACpC;;AACI;;AAAyB;;AAAO;;AAChC;;AAAyB;;AAAU;;AACnC;;AAAyB;;AAAoB;;AAC7C;;AAAyB;;AAAY;;AACzC;;AACJ;;AACA;;AACI;;AAA+B;;AAAQ;;AACvC;;AACI;;AAAyB;;AAAgB;;AACzC;;AAAyB;;AAAO;;AAChC;;AAAyB;;AAAa;;AACtC;;AAAyB;;AAAc;;AAC3C;;AACJ;;AACA;;AACI;;AAA+B;;AAAa;;AAC5C;;AAAG;;AAAmF;;AAC1F;;AACJ;;AACA;;AACA;;AACA;;AACI;;AAAyB;;AAAQ;;AACjC;;AAAyB;;AAAU;;AACnC;;AAAyB;;AAAoB;;AAC7C;;AAAyB;;AAAc;;AAC3C;;AACJ;;AACJ;;;;AAzE0D;;AAAA;;AAKgC;;AAAA;;AAU5B;;AAAA;;AAKgC;;AAAA;;;;;;;;;wEDzBjFA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT/C,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa2C,S;AACX,2BACUzC,MADV,EAEUC,qBAFV,EAEsD;AAAA;;AAD5C,eAAAD,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AAET;;;;sCAGCC,K,EACAC,K,EAA0B;AAC1B;AACA,gBAAMC,WAAW,GAAG,KAAKH,qBAAL,CAA2BI,gBAA/C;;AACA,gBAAID,WAAJ,EAAiB;AACf;AACA,qBAAO,IAAP;AACD,aANyB,CAQ1B;;;AACA,iBAAKJ,MAAL,CAAYM,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAyC;AAACC,yBAAW,EAAE;AAACC,yBAAS,EAAEL,KAAK,CAACM;AAAlB;AAAd,aAAzC,WACW,UAAA3E,CAAC,EAAI;AACVZ,qBAAO,CAACC,GAAR,CAAYW,CAAZ;AACD,aAHL;AAIA,mBAAO,KAAP;AACD;;;;;;;yBAvBU2G,S,EAAS,8G,EAAA,qJ;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACV/G,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;;;;;ACTtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOauH,a;AAGT,iCAAc;AAAA;AACb;;;;qCAEO,CACP;;;gDAGqBnH,C,EAAkC;AACpDZ,mBAAO,CAACC,GAAR,CAAYW,CAAZ,EADoD,CAEpD;;AACAA,aAAC,CAACoH,cAAF,GAHoD,CAIpD;;AACA,iBAAKC,cAAL,GAAsBrH,CAAtB,CALoD,CAMpD;AACH;;;4CAEc;AAAA;;AACX;AACA;AACA,iBAAKqH,cAAL,CAAoBC,MAApB,GAHW,CAIX;;AACA,iBAAKD,cAAL,CAAoBE,UAApB,CACKC,IADL,CACU,UAACC,YAAD,EAAwC;AAC1C,kBAAIA,YAAY,CAACC,OAAb,KAAyB,UAA7B,EAAyC;AACrCtI,uBAAO,CAACC,GAAR,CAAY,+BAAZ;AACH,eAFD,MAEO;AACHD,uBAAO,CAACC,GAAR,CAAY,gCAAZ;AACH;;AACD,oBAAI,CAACgI,cAAL,GAAsB,IAAtB;AACH,aARL;AASH;;;;;;;yBAjCQF,a;AAAa,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;;qBAAb,iC;AAA6B,a,EAAA,K,EAAA,6D;;;;;;;;ACP1C;;AACI;;AAAqC;;AAAY;;AACjD;;AAA2B;AAAA,qBAAS,IAAAQ,eAAA,EAAT;AAA0B,aAA1B;;AAA6B;;AAAkB;;AAC1E;;AAAI;;AAAyC;;AAC7C;;AAEI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AAAI;;AAAmC;;AACvC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;wEDlFaR,a,EAAa;gBALzB,uDAKyB;iBALf;AACPrD,oBAAQ,EAAE,UADH;AAEPC,uBAAW,EAAE,uBAFN;AAGPC,qBAAS,EAAE,CAAC,sBAAD;AAHJ,W;AAKe,U;;;AAUtB4D,+BAAqB;kBADpB,0DACoB;mBADP,4B,EAA8B,CAAC,QAAD,C;AACvB;;;;;;;;;;;;;;;;;;;AEjBzB;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzBvI,cAAM,EAAE;AAFiB,OAApB;AAQP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACnBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;UAOawI,oB;AAGT,wCAAc;AAAA;AACb;;;;qCAEO;AACJ,iBAAKC,SAAL,CAAe,CAAf;AACH;;;oCAESC,Y,EAAoB;AAC1B,iBAAKA,YAAL,GAAoBA,YAApB;AACH;;;;;;;yBAZQF,oB;AAAoB,O;;;cAApBA,oB;AAAoB,wC;AAAA,iB;AAAA,e;AAAA,6hB;AAAA;AAAA;ACLjC;;AACI;;AACI;;AACI;;AAA4E;AAAA,qBAAS,IAAAC,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AACxE;;AACA;;AACJ;;AACA;;AAA+E;AAAA,qBAAS,IAAAA,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AAC3E;;AACA;;AACJ;;AACA;;AAAgF;AAAA,qBAAS,IAAAA,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AAC5E;;AACA;;AACJ;;AASJ;;AACJ;;AACA;;AAGI;;AAGJ;;AACJ;;;;AA7B+C;;AAAA;;AAIG;;AAAA;;AAIC;;AAAA;;;;;;;;;wEDNtCD,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACPjE,oBAAQ,EAAE,iBADH;AAEPC,uBAAW,EAAE,8BAFN;AAGPC,qBAAS,EAAE,CAAC,6BAAD;AAHJ,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyBgB;;AAA8E;;AAAkB;;;;;;AAuBpG;;;;;;;;;;;;;;UDtCCkE,e;AAYT,iCAAoB9D,KAApB,EACoBS,WADpB,EAC8C;AAAA;;AAD1B,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAS,WAAA,GAAAA,WAAA;AAXpB,eAAAsD,KAAA,GAAQ,IAAI,wDAAJ,CAAc;AAClBC,iBAAK,EAAE,IAAI,0DAAJ,EADW;AAElBC,eAAG,EAAE,IAAI,0DAAJ;AAFa,WAAd,CAAR;AAIA,eAAAC,YAAA,GAAe,IAAI,0DAAJ,EAAf;AAQC;;;;qCAEO;AACJ,iBAAKpI,OAAL,GAAe,KAAf;AACA,iBAAKV,QAAL,GAAgB,KAAK4E,KAAL,CAAWmE,QAAX,CAAoBC,QAApB,CAA6BlJ,GAA7B,CAAiC,UAAjC,CAAhB;AACAF,mBAAO,CAACC,GAAR,4BAAgC,KAAKG,QAArC;AACA,iBAAK2I,KAAL,CAAW,OAAX,IAAsB,IAAIpH,IAAJ,CAASA,IAAI,CAAC0H,GAAL,KAAa,KAAK,EAAL,GAAU,EAAV,GAAe,IAArC,CAAtB;AACA,iBAAKN,KAAL,CAAW,KAAX,IAAoB,IAAIpH,IAAJ,EAApB;AACH;;;qCAEO;AACJ,iBAAKqH,KAAL,GAAa,KAAKD,KAAL,CAAW,OAAX,EAAoBO,WAApB,EAAb;AACA,iBAAKL,GAAL,GAAW,KAAKF,KAAL,CAAW,KAAX,EAAkBO,WAAlB,EAAX;AACAtJ,mBAAO,CAACC,GAAR,kBAAsB,KAAK+I,KAA3B,mBAAyC,KAAKC,GAA9C;AACH;;;mCAEK,CACL;;;;;;;yBA/BQH,e,EAAe,+H,EAAA,2H;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,0hC;AAAA;AAAA;ACV5B;;AACI;;AACI;;AAAgC;;AACpC;;AACJ;;AAEA;;AAEA;;AAA0C;AAAA,qBAAY,IAAAxB,QAAA,EAAZ;AAAsB,aAAtB;;AACtC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACO;AAAA,+BAAmB,OAAnB,IAA0B,MAA1B;AAA0B,aAA1B;;AADP;;AAGJ;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACO;AAAA,+BAAmB,KAAnB,IAAwB,MAAxB;AAAwB,aAAxB;;AADP;;AAGJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AAEJ;;AAIA;;AAEI;;AACJ;;;;;;;;AA3DqD;;AAAA;;AAO/B;;AAAA;;AAOsB;;AAAA,kGAAmC,SAAnC,EAAmC,kBAAnC,EAAmC,gBAAnC,EAAmC,sEAAnC;;AAM8B;;AAAA;;AAGrB;;AAAA;;AACR;;AAAA;;AAQD;;AAAA,kGAAiC,SAAjC,EAAiC,gBAAjC,EAAiC,KAAjC,EAAiC,kBAAjC,EAAiC,gBAAjC,EAAiC,sEAAjC;;AAM8B;;AAAA;;AAEnB;;AAAA;;AAMvC;;AAAA;;AACG;;AAAA;;AAWK;;AAAA,+FAAqB,OAArB,EAAqB,SAArB,EAAqB,KAArB,EAAqB,OAArB;;;;;;;;;wEDjDXwB,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACPpE,oBAAQ,EAAE,YADH;AAEPC,uBAAW,EAAE,yBAFN;AAGPC,qBAAS,EAAE,CAAC,wBAAD;AAHJ,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCA;;AACI;;AACI;;AACA;;AAAwB;;AAAU;;AACtC;;AACA;;AACI;;AACI;;AACI;;AAAqC;;AAAa;;AAClD;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAmC;;AAAwB;;AAC3D;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAA2B;;AAA4B;;AACvD;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAkC;;AAAa;;AAC/C;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AACf;;AACI;;AAA6B;;AACjC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AACA;;AACI;;AACI;;AACA;;AACA;;AAAwB;;AAAmB;;AAC/C;;AACA;;AACI;;AACI;;AACI;;AAAqC;;AAAa;;AAClD;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAmC;;AAAwB;;AAC3D;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAA2B;;AAA4B;;AACvD;;AACI;;AAAG;;AAA8B;;AACrC;;AACJ;;AACA;;AACI;;AAAkC;;AAAa;;AAC/C;;AACI;;AACI;;AAAU;;AAAqB;;AACnC;;AACJ;;AACJ;;AACA;;AACI;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AACf;;AACI;;AAA6B;;AACjC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAxCQ;;AAAA;;AACwB;;AAAA;;AAOZ;;AAAA;;AAMA;;AAAA;;AAMG;;AAAA;;AAOW;;AAAA;;;;UD1DrB2E,a;AAKT,+BAAoB7D,WAApB,EACoBZ,MADpB,EAEoBC,qBAFpB,EAEkE;AAAA;;AAF9C,eAAAW,WAAA,GAAAA,WAAA;AACA,eAAAZ,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AANpB,eAAAjE,OAAA,GAAU,KAAV;AAOC;;;;qCAEO;AAAA;;AACJ,iBAAKA,OAAL,GAAe,IAAf;AACA,iBAAKgF,IAAL,GAAY,KAAKJ,WAAL,CAAiBK,OAAjB,EAAZ;;AACA,gBAAI,KAAKD,IAAT,EAAc;AACV,mBAAKhF,OAAL,GAAe,KAAf;AACA,mBAAK0I,IAAL,GAAY,IAAI7H,IAAJ,CAAS,KAAKmE,IAAL,CAAUA,IAAV,CAAe,cAAf,CAAT,EAAyClE,cAAzC,EAAZ;AACA;AACH;;AACD,iBAAK8D,WAAL,CAAiBY,MAAjB,GAA0BC,IAA1B,CAA+B,8DAA/B,EAAwCnF,SAAxC,CAAkD,UAAAoF,KAAK,EAAI;AACvD,oBAAI,CAAC1F,OAAL,GAAe,KAAf;AACA,oBAAI,CAACgF,IAAL,GAAYU,KAAK,CAAC,CAAD,CAAjB;AACA,oBAAI,CAACgD,IAAL,GAAY,IAAI7H,IAAJ,CAAS6E,KAAK,CAAC,CAAD,CAAL,CAASV,IAAT,CAAc,cAAd,CAAT,EAAwClE,cAAxC,EAAZ;;AACA,oBAAI,CAAC8D,WAAL,CAAiBe,OAAjB,CAAyB,MAAI,CAACX,IAA9B;AACH,aALD;AAMH;;;mCACK;AACF,iBAAKf,qBAAL,CAA2B+C,MAA3B;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACH;;;;;;;yBA5BQmE,a,EAAa,0I,EAAA,uH,EAAA,uJ;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA,wpB;AAAA;AAAA;ACb1B;;AAyCA;;;;AAzCM;;AAyCA;;AAAA;;;;;;;;;wED5BOA,a,EAAa;gBALzB,uDAKyB;iBALf;AACP7E,oBAAQ,EAAE,UADH;AAEPC,uBAAW,EAAE,uBAFN;AAGPC,qBAAS,EAAE,CAAC,sBAAD;AAHJ,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0GY;;AACI;;AACJ;;;;;;AACA;;AAAuF;;AAAQ;;;;;;AAAvE;;;;;;;;AAGhC;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACJ;;;;;;AADI;;AAAA;;QDvGR;;;UAOa6E,uB;AAOT;AACA;AACA;AAEA,yCACYhE,WADZ,EAEYT,KAFZ,EAGYF,MAHZ,EAIY4E,aAJZ,EAIwC;AAAA;;AAH5B,eAAAjE,WAAA,GAAAA,WAAA;AACA,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAA4E,aAAA,GAAAA,aAAA;AAXZ,eAAA5I,OAAA,GAAU,KAAV;AACA,eAAA6E,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAQ,EAAR;AAWC;;;;qCAEO;AACJ,iBAAKvF,QAAL,GAAgB,KAAKmB,MAAL,CAAYnB,QAA5B;AAEA,iBAAK2F,UAAL,GAAkB,KAAKP,WAAL,CAAiBQ,KAAjB,CAAuB;AACrC1D,mBAAK,EAAE,CAAC,KAAKlC,QAAL,CAAckC,KAAf,EAAsB,0DAAW4D,QAAjC,CAD8B;AAErCrD,mBAAK,EAAE,CAAC,KAAKzC,QAAL,CAAcyC,KAAf,EAAsB,0DAAWqD,QAAjC,CAF8B;AAGrCpD,mBAAK,EAAE,CAAC,KAAK1C,QAAL,CAAc0C,KAAf,EAAsB,0DAAWoD,QAAjC,CAH8B;AAIrC/C,qBAAO,EAAE,CAAC,KAAK/C,QAAL,CAAc+C,OAAf,EAAwB,0DAAW+C,QAAnC,CAJ4B;AAKrCxD,qBAAO,EAAE,CAAC,KAAKtC,QAAL,CAAcsC,OAAf,EAAwB,0DAAWwD,QAAnC,CAL4B;AAMrCvD,sBAAQ,EAAE,CAAC,KAAKvC,QAAL,CAAcuC,QAAf,EAAyB,0DAAWuD,QAApC,CAN2B;AAOrCD,kBAAI,EAAE,CAAC,KAAK1E,MAAL,CAAY0E,IAAb,EAAmB,0DAAWC,QAA9B,CAP+B;AAQrC,uBAAO,CAAC,KAAK3E,MAAL,SAAD,EAAoB,0DAAW2E,QAA/B,CAR8B;AASrCwD,sBAAQ,EAAE,CAAC,KAAKnI,MAAL,CAAYmI,QAAb,EAAuB,0DAAWxD,QAAlC,CAT2B;AAUrCpE,gBAAE,EAAE,CAAC,KAAK1B,QAAL,CAAc0B,EAAf,EAAmB,0DAAWoE,QAA9B,CAViC;AAWrCrE,qBAAO,EAAE,CAAC,KAAKzB,QAAL,CAAcyB,OAAf,EAAwB,0DAAWqE,QAAnC;AAX4B,aAAvB,CAAlB;AAaH,W,CAED;;;;AAKA;qCACW;AAAA;;AACP,iBAAKR,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,gBAAI,KAAKK,UAAL,CAAgBU,OAApB,EAA6B;AACzB;AACH;;AAED,gBAAMC,iBAAiB,GAAG,CACtB;AACIC,sBAAQ,EAAE,MADd;AAEIC,mBAAK,EAAE,KAAKC,CAAL,CAAOZ,IAAP,CAAYW;AAFvB,aADsB,EAKtB;AACID,sBAAQ,EAAE,OADd;AAEIC,mBAAK,EAAE,KAAKC,CAAL,UAAaD;AAFxB,aALsB,EAStB;AACID,sBAAQ,EAAE,UADd;AAEIC,mBAAK,EAAE,KAAKC,CAAL,CAAO6C,QAAP,CAAgB9C;AAF3B,aATsB,EAatB;AACID,sBAAQ,EAAE,UADd;AAEIC,mBAAK,EAAE;AACHtE,qBAAK,EAAE,KAAKuE,CAAL,CAAOvE,KAAP,CAAasE,KADjB;AAEH/D,qBAAK,EAAE,KAAKgE,CAAL,CAAOhE,KAAP,CAAa+D,KAFjB;AAGH9D,qBAAK,EAAE,KAAK+D,CAAL,CAAO/D,KAAP,CAAa8D,KAHjB;AAIHzD,uBAAO,EAAE,KAAK0D,CAAL,CAAO1D,OAAP,CAAeyD,KAJrB;AAKHlE,uBAAO,EAAE,KAAKmE,CAAL,CAAOnE,OAAP,CAAekE,KALrB;AAMHjE,wBAAQ,EAAE,KAAKkE,CAAL,CAAOlE,QAAP,CAAgBiE,KANvB;AAOH9E,kBAAE,EAAE,KAAK+E,CAAL,CAAO/E,EAAP,CAAU8E,KAPX;AAQH/E,uBAAO,EAAE,KAAKgF,CAAL,CAAOhF,OAAP,CAAe+E;AARrB;AAFX,aAbsB,CAA1B;AA4BA,iBAAK/F,OAAL,GAAe,IAAf;AACA,iBAAK4I,aAAL,CAAmB3C,cAAnB,CAAkC,KAAKvF,MAAL,CAAYK,GAA9C,EAAmDmF,IAAI,CAACC,SAAL,CAAeN,iBAAf,CAAnD,EACKJ,IADL,CACU,8DADV,EAEKnF,SAFL,CAEe;AACP8F,kBAAI,EAAE,cAACC,MAAD,EAAwB;AAC1B;AACAnH,uBAAO,CAACC,GAAR,uBAA2BkH,MAAM,CAACA,MAAP,CAAcC,EAAzC;AACA,sBAAI,CAACtG,OAAL,GAAe,KAAf;AACH,eALM;AAMP8E,mBAAK,EAAE,eAAAA,OAAK,EAAI;AACZ,sBAAI,CAACA,KAAL,GAAaA,OAAb;AACA,sBAAI,CAAC9E,OAAL,GAAe,KAAf;AACH;AATM,aAFf;AAaA,iBAAKT,QAAL,CAAckC,KAAd,GAAsB,KAAKuE,CAAL,CAAOvE,KAAP,CAAasE,KAAnC;AACA,iBAAKxG,QAAL,CAAcyC,KAAd,GAAsB,KAAKgE,CAAL,CAAOhE,KAAP,CAAa+D,KAAnC;AACA,iBAAKxG,QAAL,CAAc0C,KAAd,GAAsB,KAAK+D,CAAL,CAAO/D,KAAP,CAAa8D,KAAnC;AACA,iBAAKxG,QAAL,CAAc+C,OAAd,GAAwB,KAAK0D,CAAL,CAAO1D,OAAP,CAAeyD,KAAvC;AACA,iBAAKxG,QAAL,CAAcsC,OAAd,GAAwB,KAAKmE,CAAL,CAAOnE,OAAP,CAAekE,KAAvC;AACA,iBAAKxG,QAAL,CAAcuC,QAAd,GAAyB,KAAKkE,CAAL,CAAOlE,QAAP,CAAgBiE,KAAzC;AACA,iBAAKrF,MAAL,CAAY0E,IAAZ,GAAmB,KAAKY,CAAL,CAAOZ,IAAP,CAAYW,KAA/B;AACA,iBAAKrF,MAAL,CAAYmI,QAAZ,GAAuB,KAAK7C,CAAL,CAAO6C,QAAP,CAAgB9C,KAAvC;AACA,iBAAKrF,MAAL,YAAoB,KAAKsF,CAAL,UAAaD,KAAjC;AACA,iBAAKxG,QAAL,CAAc0B,EAAd,GAAmB,KAAK+E,CAAL,CAAO/E,EAAP,CAAU8E,KAA7B;AACA,iBAAKxG,QAAL,CAAcyB,OAAd,GAAwB,KAAKgF,CAAL,CAAOhF,OAAP,CAAe+E,KAAvC;AACH;;;uCAES;AACN,iBAAKjB,KAAL,GAAa,EAAb;AACH;;;8BAtEO;AACJ,mBAAO,KAAKI,UAAL,CAAgBqB,QAAvB;AACH;;;;;;;yBAxCQoC,uB,EAAuB,2H,EAAA,+H,EAAA,uH,EAAA,uI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,ikD;AAAA;AAAA;ACjBpC;;AAA+C;AAAA,qBAAY,IAAAnC,QAAA,EAAZ;AAAsB,aAAtB;;AAC3C;;AACI;;AACI;;AAAK;;AAAC;;AACN;;AACI;;AAEA;;AACJ;;AACJ;;AACA;;AACI;;AAAK;;AAAC;;AACN;;AACI;;AAEA;;AACJ;;AACJ;;AACA;;AACI;;AAAK;;AAAC;;AACN;;AACI;;AAEA;;AACJ;;AACJ;;AACA;;AACI;;AAAK;;AAAO;;AACZ;;AACI;;AAEA;;AACJ;;AACJ;;AACJ;;AA6BA;;AACI;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AACJ;;AACA;;AACI;;AAAO;;AAAY;;AACnB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAe;;AACtB;;AACJ;;AACA;;AACI;;AAAO;;AAAgB;;AACvB;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AACJ;;AACA;;AACI;;AAAO;;AAAO;;AACd;;AACJ;;AACA;;AACI;;AAAO;;AAAU;;AACjB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAGA;;AACJ;;AACJ;;AACA;;AAIJ;;;;AAnHsB;;AAMC;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAsC0D;;AAAA;;AAIK;;AAAA;;AAoBX;;AAAA;;AAIC;;AAAA;;AAIG;;AAAA;;AAK1D;;AAAA;;AAGA;;AAAA;;AAGiB;;AAAA;;;;;;;;;wED9FzBmC,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACP/E,oBAAQ,EAAE,qBADH;AAEPC,uBAAW,EAAE,kCAFN;AAGPC,qBAAS,EAAE,CAAC,iCAAD;AAHJ,W;AAKyB,U;;;;;;;;;;;AACvBpD,gBAAM,EAAE,CAAF;kBAAd;AAAc,WAAE;;;;;;;;;;;;;;;;;AEnBrB,UAAIoI,GAAG,GAAG;AACT,gBAAQ,MADC;AAET,mBAAW,MAFF;AAGT,gBAAQ,MAHC;AAIT,mBAAW,MAJF;AAKT,sBAAc,MALL;AAMT,mBAAW,MANF;AAOT,sBAAc,MAPL;AAQT,mBAAW,MARF;AAST,sBAAc,MATL;AAUT,mBAAW,MAVF;AAWT,sBAAc,MAXL;AAYT,mBAAW,MAZF;AAaT,sBAAc,MAbL;AAcT,mBAAW,MAdF;AAeT,sBAAc,MAfL;AAgBT,mBAAW,MAhBF;AAiBT,gBAAQ,MAjBC;AAkBT,mBAAW,MAlBF;AAmBT,gBAAQ,MAnBC;AAoBT,mBAAW,MApBF;AAqBT,gBAAQ,MArBC;AAsBT,mBAAW,MAtBF;AAuBT,gBAAQ,MAvBC;AAwBT,mBAAW,MAxBF;AAyBT,gBAAQ,MAzBC;AA0BT,mBAAW,MA1BF;AA2BT,sBAAc,MA3BL;AA4BT,mBAAW,MA5BF;AA6BT,gBAAQ,MA7BC;AA8BT,mBAAW,MA9BF;AA+BT,gBAAQ,MA/BC;AAgCT,mBAAW,MAhCF;AAiCT,gBAAQ,MAjCC;AAkCT,mBAAW,MAlCF;AAmCT,gBAAQ,MAnCC;AAoCT,mBAAW,MApCF;AAqCT,gBAAQ,MArCC;AAsCT,mBAAW,MAtCF;AAuCT,gBAAQ,MAvCC;AAwCT,mBAAW,MAxCF;AAyCT,gBAAQ,MAzCC;AA0CT,mBAAW,MA1CF;AA2CT,gBAAQ,MA3CC;AA4CT,mBAAW,MA5CF;AA6CT,gBAAQ,MA7CC;AA8CT,mBAAW,MA9CF;AA+CT,sBAAc,MA/CL;AAgDT,mBAAW,MAhDF;AAiDT,sBAAc,MAjDL;AAkDT,mBAAW,MAlDF;AAmDT,gBAAQ,MAnDC;AAoDT,mBAAW,MApDF;AAqDT,gBAAQ,MArDC;AAsDT,mBAAW,MAtDF;AAuDT,mBAAW,MAvDF;AAwDT,sBAAc,MAxDL;AAyDT,mBAAW,MAzDF;AA0DT,sBAAc,MA1DL;AA2DT,mBAAW,MA3DF;AA4DT,sBAAc,MA5DL;AA6DT,mBAAW,MA7DF;AA8DT,sBAAc,MA9DL;AA+DT,mBAAW,MA/DF;AAgET,sBAAc,MAhEL;AAiET,mBAAW,MAjEF;AAkET,sBAAc,MAlEL;AAmET,mBAAW,MAnEF;AAoET,sBAAc,MApEL;AAqET,mBAAW,MArEF;AAsET,sBAAc,MAtEL;AAuET,gBAAQ,MAvEC;AAwET,mBAAW,MAxEF;AAyET,gBAAQ,MAzEC;AA0ET,mBAAW,MA1EF;AA2ET,sBAAc,MA3EL;AA4ET,mBAAW,MA5EF;AA6ET,sBAAc,MA7EL;AA8ET,mBAAW,MA9EF;AA+ET,sBAAc,MA/EL;AAgFT,mBAAW,MAhFF;AAiFT,gBAAQ,MAjFC;AAkFT,mBAAW,MAlFF;AAmFT,gBAAQ,MAnFC;AAoFT,mBAAW,MApFF;AAqFT,gBAAQ,MArFC;AAsFT,mBAAW,MAtFF;AAuFT,gBAAQ,MAvFC;AAwFT,mBAAW,MAxFF;AAyFT,iBAAS,MAzFA;AA0FT,oBAAY,MA1FH;AA2FT,gBAAQ,MA3FC;AA4FT,mBAAW,MA5FF;AA6FT,gBAAQ,MA7FC;AA8FT,mBAAW,MA9FF;AA+FT,sBAAc,MA/FL;AAgGT,mBAAW,MAhGF;AAiGT,sBAAc,MAjGL;AAkGT,mBAAW,MAlGF;AAmGT,gBAAQ,MAnGC;AAoGT,mBAAW,MApGF;AAqGT,gBAAQ,MArGC;AAsGT,mBAAW,MAtGF;AAuGT,gBAAQ,MAvGC;AAwGT,mBAAW,MAxGF;AAyGT,gBAAQ,MAzGC;AA0GT,mBAAW,MA1GF;AA2GT,sBAAc,MA3GL;AA4GT,yBAAiB,MA5GR;AA6GT,sBAAc,MA7GL;AA8GT,yBAAiB,MA9GR;AA+GT,gBAAQ,MA/GC;AAgHT,mBAAW,MAhHF;AAiHT,gBAAQ,MAjHC;AAkHT,mBAAW,MAlHF;AAmHT,gBAAQ,MAnHC;AAoHT,mBAAW,MApHF;AAqHT,gBAAQ,MArHC;AAsHT,mBAAW,MAtHF;AAuHT,gBAAQ,MAvHC;AAwHT,mBAAW,MAxHF;AAyHT,mBAAW,MAzHF;AA0HT,sBAAc,MA1HL;AA2HT,gBAAQ,MA3HC;AA4HT,mBAAW,MA5HF;AA6HT,gBAAQ,MA7HC;AA8HT,mBAAW,MA9HF;AA+HT,gBAAQ,MA/HC;AAgIT,mBAAW,MAhIF;AAiIT,sBAAc,MAjIL;AAkIT,mBAAW,MAlIF;AAmIT,gBAAQ,MAnIC;AAoIT,mBAAW,MApIF;AAqIT,gBAAQ,MArIC;AAsIT,mBAAW,MAtIF;AAuIT,gBAAQ,MAvIC;AAwIT,mBAAW,MAxIF;AAyIT,gBAAQ,MAzIC;AA0IT,mBAAW,MA1IF;AA2IT,gBAAQ,MA3IC;AA4IT,mBAAW,MA5IF;AA6IT,gBAAQ,MA7IC;AA8IT,mBAAW,MA9IF;AA+IT,gBAAQ,MA/IC;AAgJT,mBAAW,MAhJF;AAiJT,gBAAQ,MAjJC;AAkJT,mBAAW,MAlJF;AAmJT,gBAAQ,MAnJC;AAoJT,mBAAW,MApJF;AAqJT,gBAAQ,MArJC;AAsJT,mBAAW,MAtJF;AAuJT,gBAAQ,MAvJC;AAwJT,mBAAW,MAxJF;AAyJT,gBAAQ,MAzJC;AA0JT,mBAAW,MA1JF;AA2JT,gBAAQ,MA3JC;AA4JT,mBAAW,MA5JF;AA6JT,gBAAQ,MA7JC;AA8JT,mBAAW,MA9JF;AA+JT,gBAAQ,MA/JC;AAgKT,mBAAW,MAhKF;AAiKT,gBAAQ,MAjKC;AAkKT,mBAAW,MAlKF;AAmKT,gBAAQ,MAnKC;AAoKT,mBAAW,MApKF;AAqKT,gBAAQ,MArKC;AAsKT,mBAAW,MAtKF;AAuKT,gBAAQ,MAvKC;AAwKT,mBAAW,MAxKF;AAyKT,gBAAQ,MAzKC;AA0KT,mBAAW,MA1KF;AA2KT,sBAAc,MA3KL;AA4KT,mBAAW,MA5KF;AA6KT,gBAAQ,MA7KC;AA8KT,mBAAW,MA9KF;AA+KT,gBAAQ,MA/KC;AAgLT,mBAAW,MAhLF;AAiLT,gBAAQ,MAjLC;AAkLT,mBAAW,MAlLF;AAmLT,gBAAQ,MAnLC;AAoLT,mBAAW,MApLF;AAqLT,gBAAQ,MArLC;AAsLT,mBAAW,MAtLF;AAuLT,sBAAc,MAvLL;AAwLT,mBAAW,MAxLF;AAyLT,gBAAQ,MAzLC;AA0LT,mBAAW,MA1LF;AA2LT,oBAAY,MA3LH;AA4LT,uBAAe,MA5LN;AA6LT,mBAAW,MA7LF;AA8LT,sBAAc,MA9LL;AA+LT,gBAAQ,MA/LC;AAgMT,mBAAW,MAhMF;AAiMT,gBAAQ,MAjMC;AAkMT,mBAAW,MAlMF;AAmMT,sBAAc,MAnML;AAoMT,mBAAW,MApMF;AAqMT,gBAAQ,MArMC;AAsMT,mBAAW,MAtMF;AAuMT,gBAAQ,MAvMC;AAwMT,mBAAW,MAxMF;AAyMT,gBAAQ,MAzMC;AA0MT,mBAAW,MA1MF;AA2MT,gBAAQ,MA3MC;AA4MT,mBAAW,MA5MF;AA6MT,gBAAQ,MA7MC;AA8MT,mBAAW,MA9MF;AA+MT,gBAAQ,MA/MC;AAgNT,mBAAW,MAhNF;AAiNT,gBAAQ,MAjNC;AAkNT,mBAAW,MAlNF;AAmNT,gBAAQ,MAnNC;AAoNT,mBAAW,MApNF;AAqNT,gBAAQ,MArNC;AAsNT,qBAAa,MAtNJ;AAuNT,wBAAgB,MAvNP;AAwNT,mBAAW,MAxNF;AAyNT,gBAAQ,MAzNC;AA0NT,mBAAW,MA1NF;AA2NT,gBAAQ,MA3NC;AA4NT,mBAAW,MA5NF;AA6NT,gBAAQ,MA7NC;AA8NT,mBAAW,MA9NF;AA+NT,gBAAQ,MA/NC;AAgOT,mBAAW,MAhOF;AAiOT,gBAAQ,MAjOC;AAkOT,mBAAW,MAlOF;AAmOT,iBAAS,MAnOA;AAoOT,oBAAY,MApOH;AAqOT,gBAAQ,MArOC;AAsOT,mBAAW,MAtOF;AAuOT,gBAAQ,MAvOC;AAwOT,mBAAW,MAxOF;AAyOT,gBAAQ,MAzOC;AA0OT,mBAAW,MA1OF;AA2OT,mBAAW,MA3OF;AA4OT,sBAAc,MA5OL;AA6OT,iBAAS,MA7OA;AA8OT,oBAAY,MA9OH;AA+OT,gBAAQ,MA/OC;AAgPT,mBAAW,MAhPF;AAiPT,iBAAS,MAjPA;AAkPT,oBAAY,MAlPH;AAmPT,iBAAS,MAnPA;AAoPT,sBAAc,MApPL;AAqPT,yBAAiB,MArPR;AAsPT,oBAAY,MAtPH;AAuPT,mBAAW,MAvPF;AAwPT,sBAAc,MAxPL;AAyPT,gBAAQ,MAzPC;AA0PT,mBAAW,MA1PF;AA2PT,gBAAQ,MA3PC;AA4PT,mBAAW,MA5PF;AA6PT,gBAAQ,MA7PC;AA8PT,qBAAa,MA9PJ;AA+PT,wBAAgB,MA/PP;AAgQT,mBAAW,MAhQF;AAiQT,gBAAQ,MAjQC;AAkQT,mBAAW,MAlQF;AAmQT,sBAAc,MAnQL;AAoQT,yBAAiB,MApQR;AAqQT,gBAAQ,MArQC;AAsQT,mBAAW,MAtQF;AAuQT,mBAAW,MAvQF;AAwQT,sBAAc,MAxQL;AAyQT,mBAAW,MAzQF;AA0QT,sBAAc,MA1QL;AA2QT,mBAAW,MA3QF;AA4QT,sBAAc,MA5QL;AA6QT,mBAAW,MA7QF;AA8QT,sBAAc;AA9QL,OAAV;;AAkRA,eAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC5B,YAAIC,EAAE,GAAGC,qBAAqB,CAACF,GAAD,CAA9B;AACA,eAAOG,mBAAmB,CAACF,EAAD,CAA1B;AACA;;AACD,eAASC,qBAAT,CAA+BF,GAA/B,EAAoC;AACnC,YAAG,CAACG,mBAAmB,CAACC,CAApB,CAAsBN,GAAtB,EAA2BE,GAA3B,CAAJ,EAAqC;AACpC,cAAIlJ,CAAC,GAAG,IAAIuJ,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAlJ,WAAC,CAACwJ,IAAF,GAAS,kBAAT;AACA,gBAAMxJ,CAAN;AACA;;AACD,eAAOgJ,GAAG,CAACE,GAAD,CAAV;AACA;;AACDD,oBAAc,CAACQ,IAAf,GAAsB,SAASC,kBAAT,GAA8B;AACnD,eAAOC,MAAM,CAACF,IAAP,CAAYT,GAAZ,CAAP;AACA,OAFD;;AAGAC,oBAAc,CAACW,OAAf,GAAyBR,qBAAzB;AACAS,YAAM,CAACC,OAAP,GAAiBb,cAAjB;AACAA,oBAAc,CAACE,EAAf,GAAoB,MAApB;;;;;;;;;;;;;;;;ACnSA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaY,Y;AAKX,8BACU7F,MADV,EAEUC,qBAFV,EAGU2C,0BAHV,EAGgE;AAAA;;AAAA;;AAFtD,eAAA5C,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAA2C,0BAAA,GAAAA,0BAAA;AAPV,eAAAC,KAAA,GAAQ,aAAR;AASE,eAAK5C,qBAAL,CAA2BG,WAA3B,CAAuC9D,SAAvC,CAAiD,UAAAwG,CAAC;AAAA,mBAAI,MAAI,CAAC1C,WAAL,GAAmB0C,CAAvB;AAAA,WAAlD;AACA,eAAKF,0BAAL,CAAgCxC,WAAhC,CAA4C9D,SAA5C,CAAsD,UAAAwG,CAAC;AAAA,mBAAI,MAAI,CAACC,gBAAL,GAAwBD,CAA5B;AAAA,WAAvD;AACD;;;;mCAEK;AACJ,iBAAK7C,qBAAL,CAA2B+C,MAA3B;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;wCAEU;AACT,iBAAKsC,0BAAL,CAAgCI,MAAhC;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;;;;;;;yBAtBUuF,Y,EAAY,uH,EAAA,uJ,EAAA,oK;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACuFzB;;;;;;;;;wEDvFaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTjG,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEbzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQagG,c;AACX,gCAAoB7F,qBAApB,EAAkE;AAAA;;AAA9C,eAAAA,qBAAA,GAAAA,qBAAA;AAAiD;;;;oCAE3D8F,O,EAA2B3D,I,EAAiB;AACpD;AACA,gBAAMhC,WAAW,GAAG,KAAKH,qBAAL,CAA2BI,gBAA/C;AACA,gBAAM2F,UAAU,GAAG5F,WAAW,IAAIA,WAAW,CAAC6F,KAA9C;AACA,gBAAMC,QAAQ,GAAGH,OAAO,CAACtF,GAAR,CAAY0F,UAAZ,CAAuB,yEAAY9K,MAAnC,CAAjB;AACAH,mBAAO,CAACC,GAAR,gDAAoDiF,WAApD;;AACA,gBAAI4F,UAAU,IAAIE,QAAlB,EAA4B;AAC1BhL,qBAAO,CAACC,GAAR;AACAD,qBAAO,CAACC,GAAR,gDAAoDiF,WAAW,CAAC6F,KAAhE;AACAF,qBAAO,GAAGA,OAAO,CAACK,KAAR,CAAc;AACtBC,0BAAU,EAAE;AACV,0DAAiCjG,WAAW,CAAC6F,KAA7C,CADU;AAEV,kCAAgB;AAFN;AADU,eAAd,CAAV;AAMD;;AAED,mBAAO7D,IAAI,CAACkE,MAAL,CAAYP,OAAZ,CAAP;AACD;;;;;;;yBArBUD,c,EAAc,2J;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc;;;;;wEAAdA,c,EAAc;gBAD1B;AAC0B,U;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBY;;AAAoC;;AAAgB;;;;;;AACpD;;AAAqC;;AAAoC;;;;;;AAF3E;;AACE;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAWN;;AAAqC;;AAAiB;;;;;;AACtD;;AAAkC;;AAAyC;;;;;;AAF7E;;AACE;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAWN;;AAAwC;;AAAoB;;;;;;AAC5D;;AACE;;AACF;;;;;;AAJF;;AACE;;AACA;;AAGF;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;;;;;AAsBR;;;;;;;;AAIF;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAkD;;AACtD;;AAAI;;AAA4C;;AAElD;;AACF;;;;;;AAPI;;AAAA;;;;;;;;;;UD9DCS,oB;AAMT,sCACY5F,WADZ,EAEYT,KAFZ,EAGYF,MAHZ,EAIYC,qBAJZ,EAIwD;AAAA;;AAH5C,eAAAU,WAAA,GAAAA,WAAA;AACA,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AARZ,eAAAjE,OAAA,GAAU,KAAV;AACA,eAAA6E,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAQ,EAAR;;AAQI,cAAI,KAAKb,qBAAL,CAA2BI,gBAA/B,EAAiD;AAC7C,iBAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACH;AACJ;;;;qCAEO;AACJ;AACA;AACA,gBAAMkG,OAAO,GAAG,uIAAhB;AACA,gBAAMC,eAAe,GAAG,oCAAxB;AACA,gBAAMC,WAAW,GAAG,+GAApB,CALI,CAMJ;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAKC,UAAL,GAAkB,KAAKhG,WAAL,CAAiBQ,KAAjB,CAAuB;AACrCC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWwF,OAAX,CAAmB,CACzC,0DAAWvF,QAD8B,EACpB,0DAAWlD,SAAX,CAAqB,CAArB,CADoB,EACK,0DAAW0I,SAAX,CAAqB,EAArB,CADL,CAAnB,CAApB,CAD+B;AAGrCC,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,OAAX,CAAmB,CAC1C,0DAAWvF,QAD+B,EACrB,0DAAWyF,KADU,CAAnB,CAApB,CAH8B;AAKrCC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWH,OAAX,CAAmB,CAC7C,0DAAWvF,QADkC,EACxB,0DAAW2F,OAAX,CAAmBN,WAAnB,CADwB,EAE7C,0DAAWvI,SAAX,CAAqB,CAArB,CAF6C,EAG7C,0DAAW0I,SAAX,CAAqB,EAArB,CAH6C,CAAnB,CAApB;AAL2B,aAAvB,CAAlB;AAUH,W,CAED;AACA;;;;AAKA;qCACW;AAAA;;AACP,iBAAKhG,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,gBAAI,KAAK8F,UAAL,CAAgB/E,OAApB,EAA6B;AACzB;AACH;;AAED,iBAAK5F,OAAL,GAAe,IAAf;AACA,iBAAKiE,qBAAL,CAA2BgH,MAA3B,CAAkC,KAAKjF,CAAL,CAAOZ,IAAP,CAAYW,KAA9C,EAAqD,KAAKC,CAAL,CAAO8E,KAAP,CAAa/E,KAAlE,EAAyE,KAAKC,CAAL,CAAO+E,QAAP,CAAgBhF,KAAzF,EACKN,IADL,CACU,8DADV,EAEKnF,SAFL,CAEe;AACP8F,kBAAI,EAAE,gBAAM;AACR;AACA,oBAAM5B,SAAS,GAAG,MAAI,CAACN,KAAL,CAAWmE,QAAX,CAAoB9D,WAApB,CAAgCC,SAAhC,IAA6C,cAA/D;;AACA,sBAAI,CAACR,MAAL,CAAYM,QAAZ,CAAqB,CAACE,SAAD,CAArB;AACH,eALM;AAMPM,mBAAK,EAAE,eAAAA,OAAK,EAAI;AACZ,sBAAI,CAACA,KAAL,GAAaA,OAAb;AACA,sBAAI,CAAC9E,OAAL,GAAe,KAAf;AACH;AATM,aAFf;AAaH;;;uCAES;AACN,iBAAK8E,KAAL,GAAa,EAAb;AACH;;;8BA/BO;AACJ,mBAAO,KAAK6F,UAAL,CAAgBpE,QAAvB;AACH;;;;;;;yBA7CQgE,oB,EAAoB,2H,EAAA,+H,EAAA,uH,EAAA,oK;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,iB;AAAA,gB;AAAA,umC;AAAA;AAAA;ACXjC;;AACE;;AACE;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAAqD;AAAA,qBAAY,IAAA/D,QAAA,EAAZ;AAAsB,aAAtB;;AACnD;;AAEE;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAIF;;AAEA;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAIF;;AAEA;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAMF;;AAiBA;;AACE;;AACA;;AACF;;AAEA;;AAYF;;AAEF;;AACA;;AACE;;AAA2B;;AAA6B;;AAAO;;AACjE;;AAEF;;AACF;;;;AAjFgC;;AAAA;;AAOb;;AAAA;;AAEH;;AAAA;;AAUG;;AAAA;;AAEH;;AAAA;;AAUG;;AAAA;;AAEH;;AAAA;;AAuBA;;AAAA;;AACC;;AAAA;;AAIyB;;AAAA;;;;;;;;;wED3D7B+D,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACP3G,oBAAQ,EAAE,kBADH;AAEPC,uBAAW,EAAE,yBAFN;AAGPC,qBAAS,EAAE,CAAC,wBAAD;AAHJ,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaoH,W;AAGT,6BAAoBjM,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AACnB;;;;mCAEK;AACFC,mBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,mBAAO,KAAKF,IAAL,CAAUG,GAAV,WAAyB,yEAAYC,MAArC,YAAP;AACH;;;oCAEM;AACH,gBAAI,KAAK2F,IAAT,EAAe;AACX,qBAAO,KAAKA,IAAZ;AACH;;AACD,mBAAO,IAAP;AACH;;;kCAEOA,I,EAAU;AACd,iBAAKA,IAAL,GAAYA,IAAZ;AACH;;;yCAEczF,Q,EAAgB;AAC3BL,mBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,mBAAO,KAAKF,IAAL,CAAUO,GAAV,WAA6B,yEAAYH,MAAzC,oBAAgEE,QAAhE,CAAP;AACH;;;;;;;yBAzBQ2L,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBADC;;;;;wEACZA,W,EAAW;gBADvB,wDACuB;iBADZ;AAACxL,sBAAU,EAAE;AAAb,W;AACY,U;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIY;;AAAkD;AAAA;;AAAA;;AAAA;AAAA;;AAC9C;;AAA0B;;AAC9B;;;;;;AACA;;AAA4D;;AAAO;;;;;;AAgB/E;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAUoB;;AAA6D;;AAAa;;;;;;;;;;AAC1E;;AAEI;;AACA;;AACJ;;;;;;AAHQ;;;;;;AAMR;;AAA4B;;AAAG;;AAAU;;AAAI;;AAAuB;;AAAiB;;AAAO;;;;;;AAAxB;;AAAA;;;;;;AACpE;;AAA4B;;AAAG;;AAAa;;AAAK;;AACxB;;AAAsC;;AAAO;;;;;;AAA7C;;AAAA;;;;;;AAIzB;;AAA4C;;AAAG;;AAAO;;AAAI;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAC1D;;AAA4C;;AAAG;;AAAU;;AAAI;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAK7D;;;;;;AAAkB;;;;;;AAGlB;;;;;;AAAqB;;;;;;AAL7B;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;;;;;AAL6C;;AAAA;;AAGG;;AAAA;;;;;;;;AAGhD;;AACI;;AACI;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAC7D;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAC7D;;AACJ;;;;;;;;AAtCR;;AACI;;AACI;;AACI;;AACI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AACJ;;AACA;;AACA;;AAKJ;;AACA;;AACI;;AACA;;AAEA;;AAAG;;AAAG;;AAAO;;AAAI;;AAAuB;;AAAmB;;AAAO;;AACtE;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AAQA;;AAMJ;;AACA;;AACJ;;;;;;AApCoB;;AAAA;;AAEiC;;AAAA;;AACmB;;AAAA;;AAOpD;;AAAA;;AACA;;AAAA;;AAEoC;;AAAA;;AAGnB;;AAAA;;AACA;;AAAA;;AAGP;;AAAA;;AAQM;;AAAA;;;;;;AAlCxC;;AACI;;;;AA0CJ;;;;;;AA1C4B;;AAAA;;QDnC5B;;;UAOayL,kB;AAMT;AACA;AAEA,oCAAoBvC,aAApB,EAAkD;AAAA;;AAA9B,eAAAA,aAAA,GAAAA,aAAA;AARpB,eAAA5I,OAAA,GAAU,IAAV;AASC;;;;qCAEO;AACJ,iBAAKA,OAAL,GAAe,IAAf;AACA,iBAAKP,UAAL,GAAkB,KAAKmJ,aAAL,CAAmBwC,aAAnB,EAAlB;;AACA,gBAAI,KAAK3L,UAAT,EAAqB;AACjB,kBAAM4L,UAAU,GAAG,SAAnB;AACA,mBAAKC,OAAL,GAAe,KAAK7L,UAAL,CAAgB4L,UAAhB,CAAf;AACA,kBAAME,SAAS,GAAG,OAAlB;AACA,mBAAKC,YAAL,GAAoB,KAAK/L,UAAL,CAAgB8L,SAAhB,CAApB;AACA,mBAAKvL,OAAL,GAAe,KAAf;AACH,aAND,MAOK;AACD,mBAAKyL,UAAL;AACH;AACJ;;;uCAES;AAAA;;AACN,iBAAKzL,OAAL,GAAe,IAAf;AACA,iBAAK4I,aAAL,CAAmBpD,MAAnB,GAA4BC,IAA5B,CAAiC,8DAAjC,EAA0CnF,SAA1C,CAAoD,UAAAb,UAAU,EAAI;AAC9DP,qBAAO,CAACC,GAAR,CAAYM,UAAZ;AACA,qBAAI,CAACA,UAAL,GAAkBA,UAAlB;;AACA,qBAAI,CAACmJ,aAAL,CAAmB8C,aAAnB,CAAiCjM,UAAjC;;AACA,kBAAM4L,UAAU,GAAG,SAAnB;AACA,qBAAI,CAACC,OAAL,GAAe7L,UAAU,CAAC4L,UAAD,CAAzB;AACA,kBAAME,SAAS,GAAG,OAAlB;AACA,qBAAI,CAACC,YAAL,GAAoB/L,UAAU,CAAC8L,SAAD,CAA9B;AACA,qBAAI,CAACvL,OAAL,GAAe,KAAf;AACH,aATD;AAUH;;;oCAESU,M,EAAM;AACZ;AACAA,kBAAM,CAACiL,SAAP,GAAmB,CAACjL,MAAM,CAACiL,SAA3B;AACH;;;uCAEYjL,M,EAAM;AACfA,kBAAM,CAACkL,YAAP,GAAsB,CAAClL,MAAM,CAACkL,YAA9B;AACH;;;iCAEMlL,M,EAAM;AACTA,kBAAM,CAACmL,MAAP,GAAgBnL,MAAM,CAACmL,MAAP,KAAkB,IAAlC;AACH;;;;;;;yBApDQV,kB,EAAkB,8I;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,e;AAAA,mgD;AAAA;AAAA;ACZ/B;;AACI;;AACI;;AACI;;AAGA;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAqB;AAAA;AAAA;;AAArB;;AACA;;AACJ;;AACJ;;AACJ;;AAEA;;AAEA;;AAiBA;;;;AApCkB;;AAAA;;AAGG;;AAAA;;AAEL;;AAAA;;AAMiB;;AAAA;;AAQ3B;;AAAA;;AAiBA;;AAAA;;;;;;;;;;wED3BOA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACPvH,oBAAQ,EAAE,eADH;AAEPC,uBAAW,EAAE,4BAFN;AAGPC,qBAAS,EAAE,CAAC,2BAAD;AAHJ,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;AEbiGagI,S;;;;;cAAAA,S;AAAS,oBAFN,2DAEM;;;;2BAATA,S;AAAS,S;AAAA,mBARP,CACP;AAACC,iBAAO,EAAE,sEAAV;AAA6BC,kBAAQ,EAAE,wEAAvC;AAAuDC,eAAK,EAAE;AAA9D,SADO,EAEP;AAACF,iBAAO,EAAE,sEAAV;AAA6BC,kBAAQ,EAAE,8EAAvC;AAA4DC,eAAK,EAAE;AAAnE,SAFO,EAGP;AAACF,iBAAO,EAAE,sEAAV;AAA6BC,kBAAQ,EAAE,4EAAvC;AAAyDC,eAAK,EAAE;AAAhE,SAHO,EAIP;AAACF,iBAAO,EAAE,iEAAV;AAA4BC,kBAAQ,EAAE;AAAtC,SAJO,C;AAKV,kBAtBQ,CACL,wDADK,EAEL,uEAFK,EAGL,oEAHK,EAIL,kEAJK,EAKL,qEALK,EAML,gFANK,EAOL,0EAPK,EAQL,6FARK,EASL;AACA,+GAVK,EAWL,mGAXK,EAYL,mGAZK,EAaL,0DAbK,EAcL,sEAdK,EAeL,6EAAoBE,QAApB,CAA6B,gBAA7B,EAA+C;AAACC,iBAAO,EAAE,uEAAYvE;AAAtB,SAA/C,CAfK,CAsBR;;;;4HAGQkE,S,EAAS;AAAA,yBAjDd,2DAiDc,EAhDd,+FAgDc,EA/Cd,sEA+Cc,EA9Cd,yEA8Cc,EA7Cd,2GA6Cc,EA5Cd,sEA4Cc,EA3Cd,mEA2Cc,EA1Cd,qGA0Cc,EAzCd,kGAyCc,EAxCd,sFAwCc,EAvCd,4GAuCc,EAtCd,sHAsCc,EArCd,4FAqCc,EApCd,kHAoCc,EAnCd,uGAmCc,EAlCd,4FAkCc,EAjCd,+FAiCc,EAhCd,8GAgCc,EA/Bd,qGA+Bc,EA9Bd,oFA8Bc,EA7Bd,gHA6Bc,EA5Bd,+GA4Bc,EA3Bd,gEA2Bc;AA3BJ,oBAGV,wDAHU,EAIV,uEAJU,EAKV,oEALU,EAMV,kEANU,EAOV,qEAPU,EAQV,gFARU,EASV,0EATU,EAUV,6FAVU,EAWV;AACA,iHAZU,EAaV,mGAbU,EAcV,mGAdU,EAeV,0DAfU,EAgBV,sEAhBU,EAgBI,4EAhBJ;AA2BI,S;AAXA,O;;;;;wEAWTA,S,EAAS;gBAnDrB,sDAmDqB;iBAnDZ;AACNM,wBAAY,EAAE,CACV,2DADU,EAEV,+FAFU,EAGV,sEAHU,EAIV,yEAJU,EAKV,2GALU,EAMV,sEANU,EAOV,mEAPU,EAQV,qGARU,EASV,kGATU,EAUV,sFAVU,EAWV,4GAXU,EAYV,sHAZU,EAaV,4FAbU,EAcV,kHAdU,EAeV,uGAfU,EAgBV,4FAhBU,EAiBV,+FAjBU,EAkBV,8GAlBU,EAmBV,qGAnBU,EAoBV,oFApBU,EAqBV,gHArBU,EAsBV,+GAtBU,EAuBV,gEAvBU,CADR;AA0BNC,mBAAO,EAAE,CACL,wDADK,EAEL,uEAFK,EAGL,oEAHK,EAIL,kEAJK,EAKL,qEALK,EAML,gFANK,EAOL,0EAPK,EAQL,6FARK,EASL;AACA,mHAVK,EAWL,mGAXK,EAYL,mGAZK,EAaL,0DAbK,EAcL,sEAdK,EAeL,6EAAoBH,QAApB,CAA6B,gBAA7B,EAA+C;AAACC,qBAAO,EAAE,uEAAYvE;AAAtB,aAA/C,CAfK,CA1BH;AA2CN0E,qBAAS,EAAE,CACP;AAACP,qBAAO,EAAE,sEAAV;AAA6BC,sBAAQ,EAAE,wEAAvC;AAAuDC,mBAAK,EAAE;AAA9D,aADO,EAEP;AAACF,qBAAO,EAAE,sEAAV;AAA6BC,sBAAQ,EAAE,8EAAvC;AAA4DC,mBAAK,EAAE;AAAnE,aAFO,EAGP;AAACF,qBAAO,EAAE,sEAAV;AAA6BC,sBAAQ,EAAE,4EAAvC;AAAyDC,mBAAK,EAAE;AAAhE,aAHO,EAIP;AAACF,qBAAO,EAAE,iEAAV;AAA4BC,sBAAQ,EAAE;AAAtC,aAJO,CA3CL;AAiDNO,qBAAS,EAAE,CAAC,2DAAD;AAjDL,W;AAmDY,U;;;;;;;;;;;;;;;;;;ACjGtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBY;;AAAqC;;AAAiB;;;;;;AACtD;;AAAkC;;AAAyC;;;;;;AAF7E;;AACE;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAWN;;AAAwC;;AAAoB;;;;;;AAD9D;;AACE;;AACF;;;;;;AADQ;;AAAA;;;;;;AAOR;;;;;;;;AAIF;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAiD;;AACrD;;AAAI;;AAAsC;;AAC5C;;AACF;;;;;;AANI;;AAAA;;;;;;;;;;UDhCCC,mB;AAMT,qCACY7H,WADZ,EAEYT,KAFZ,EAGYF,MAHZ,EAIYC,qBAJZ,EAIwD;AAAA;;AAH5C,eAAAU,WAAA,GAAAA,WAAA;AACA,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AARZ,eAAAjE,OAAA,GAAU,KAAV;AACA,eAAA6E,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAQ,EAAR,CAMwD,CAEpD;;AACA,cAAI,KAAKb,qBAAL,CAA2BI,gBAA/B,EAAiD;AAC7C,iBAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACH;AACJ;;;;qCAEO;AACJ,iBAAKmI,SAAL,GAAiB,KAAK9H,WAAL,CAAiBQ,KAAjB,CAAuB;AACpC2F,mBAAK,EAAE,CAAC,iBAAD,EAAoB,0DAAWF,OAAX,CAAmB,CAC1C,0DAAWvF,QAD+B,EACrB,0DAAWyF,KADU,CAAnB,CAApB,CAD6B;AAGpCC,sBAAQ,EAAE,CAAC,gBAAD,EAAmB,0DAAW1F,QAA9B;AAH0B,aAAvB,CAAjB;AAKH,W,CAED;AACA;;;;AAKA;qCACW;AAAA;;AACP,iBAAKR,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,gBAAI,KAAK4H,SAAL,CAAe7G,OAAnB,EAA4B;AACxB;AACH;;AAED,iBAAK5F,OAAL,GAAe,IAAf;AACA,iBAAKiE,qBAAL,CAA2ByI,KAA3B,CAAiC,KAAK1G,CAAL,CAAO8E,KAAP,CAAa/E,KAA9C,EAAqD,KAAKC,CAAL,CAAO+E,QAAP,CAAgBhF,KAArE,EACKN,IADL,CACU,8DADV,EAEKnF,SAFL,CAEe;AACP8F,kBAAI,EAAE,gBAAM;AACR;AACA,oBAAM5B,SAAS,GAAG,OAAI,CAACN,KAAL,CAAWmE,QAAX,CAAoB9D,WAApB,CAAgCC,SAAhC,IAA6C,gBAA/D;;AACA,uBAAI,CAACR,MAAL,CAAYM,QAAZ,CAAqB,CAACE,SAAD,CAArB;AACH,eALM;AAMPM,mBAAK,EAAE,eAAAA,OAAK,EAAI;AACZ,uBAAI,CAACA,KAAL,GAAaA,OAAb;AACA,uBAAI,CAAC9E,OAAL,GAAe,KAAf;AACH;AATM,aAFf;AAaH;;;uCAES;AACN,iBAAK8E,KAAL,GAAa,EAAb;AACH;;;8BA/BO;AACJ,mBAAO,KAAK2H,SAAL,CAAelG,QAAtB;AACH;;;;;;;yBA9BQiG,mB,EAAmB,2H,EAAA,+H,EAAA,uH,EAAA,oK;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,gB;AAAA,66B;AAAA;AAAA;ACXhC;;AACE;;AACE;;AACE;;AACE;;AACJ;;AAEA;;AAAoD;AAAA,qBAAY,IAAAhG,QAAA,EAAZ;AAAsB,aAAtB;;AAClD;;AAEE;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAIF;;AAEA;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAGF;;AAIA;;AACE;;AACA;;AACF;;AAEA;;AAWF;;AAEF;;AAEA;;AACE;;AAAa;;AAA8B;;AAAO;;AACpD;;AAEF;;AACF;;;;AArDgC;;AAAA;;AAOb;;AAAA;;AAEH;;AAAA;;AAUG;;AAAA;;AAEH;;AAAA;;AAOA;;AAAA;;AACC;;AAAA;;AAIyB;;AAAA;;;;;;;;;wED7B7BgG,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACP5I,oBAAQ,EAAE,iBADH;AAEPC,uBAAW,EAAE,wBAFN;AAGPC,qBAAS,EAAE,CAAC,uBAAD;AAHJ,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGQ;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AACrD;;AAA2B;;AAC/B;;;;;;;;AACA;;AAA2D;AAAA;;AAAA;;AAAA;AAAA;;AACvD;;AACJ;;;;;;AAeA;;;;;;AAAmC;;;;;;AAEnC;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAkB;;AAAiB;;AACnC;;AACI;;AAAkB;;AAAY;;AAClC;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAEA;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;QDjDR;;;UAOa6I,mB;AAYT,qCAAoB/M,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AACnB;;;;wCAEU;AACP,iBAAKgN,QAAL;AACH;;;qCAEO;AAAA;;AACJ,iBAAKtN,QAAL,GAAgB,KAAKoB,MAAL,CAAYK,GAA5B;AACA,iBAAKd,SAAL,GAAiB,IAAjB;AACA,iBAAKD,OAAL,GAAe,IAAf;AACAd,mBAAO,CAACC,GAAR,qCAAyC,KAAKG,QAA9C;AACA,iBAAKM,WAAL,CAAiBiN,YAAjB,CAA8B,KAAKvN,QAAnC,EAA6CgB,SAA7C,CAAuD,UAAAwM,QAAQ,EAAI;AAC/D;AACA5N,qBAAO,CAACC,GAAR,CAAY2N,QAAZ,EAF+D,CAG/D;AACA;;AACA,kBAAMC,GAAG,GAAG,OAAZ;AACA7N,qBAAO,CAACC,GAAR,0BAA8B2N,QAAQ,CAACC,GAAD,CAAtC;;AACA,kBAAI,CAACD,QAAQ,CAACC,GAAD,CAAb,EAAoB;AAChB,uBAAI,CAAC/M,OAAL,GAAe,KAAf;AACA,uBAAO,KAAP;AACH;;AAED,kBAAMgN,GAAG,GAAG,YAAZ;AACA,kBAAM/D,EAAE,GAAG,KAAX;AACA,kBAAM5I,WAAW,GAAGyM,QAAQ,CAACE,GAAD,CAAR,CAAc,CAAd,EAAiB/D,EAAjB,CAApB;AACA,qBAAI,CAAClI,GAAL,GAAWV,WAAX;AACA,qBAAI,CAACO,IAAL,GAAYkM,QAAQ,CAACE,GAAD,CAAR,CAAc,CAAd,EAAiB,MAAjB,CAAZ;AACA,qBAAI,CAACpM,IAAL,GAAY,IAAIC,IAAJ,CAAS,OAAI,CAACD,IAAd,EAAoBE,cAApB,EAAZ;AACA5B,qBAAO,CAACC,GAAR,4CAAgDkB,WAAhD;AACA,qBAAI,CAACA,WAAL,GAAmBA,WAAnB,CAnB+D,CAoB/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,qBAAI,CAACJ,SAAL,GAAiB,KAAjB,CA/B+D,CA+BvC;;AACxB,qBAAI,CAACD,OAAL,GAAe,KAAf,CAhC+D,CAgCzC;AACzB,aAjCD;AAkCH;;;;;;;yBA1DQ2M,mB,EAAmB,mI;AAAA,O;;;cAAnBA,mB;AAAmB,yC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2pB;AAAA;AAAA;ACbhC;;AACI;;AAEI;;AAGA;;AAiBA;;AAEA;;AAmBA;;AAYJ;;AACJ;;AACA;;;;AAvDiB;;AAAA;;AAGA;;AAAA;;AAiBQ;;AAAA;;AAEX;;AAAA;;AAmBA;;AAAA;;;;;;;;;wED/BDA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACP/I,oBAAQ,EAAE,kBADH;AAEPC,uBAAW,EAAE,+BAFN;AAGPC,qBAAS,EAAE,CAAC,8BAAD;AAHJ,W;AAKqB,U;;;;;AACnBpD,gBAAM,EAAE,CAAF;kBAAd;AAAc,WAAE;;;;;;;;;;;;;;;;;;;AEdrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC2CgB;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AACf;;AACI;;AAA6B;;AACjC;;AACJ;;;;;;AACA;;AACI;;AACI;;AAA4B;;AAChC;;AACJ;;;;;;;;;;UDzCHuM,2B;AAKT,6CACYjJ,MADZ,EAEYC,qBAFZ,EAE0D;AAAA;;AAAA;;AAD9C,eAAAD,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AALZ,eAAA4C,KAAA,GAAQ,eAAR;AAMI,eAAK5C,qBAAL,CAA2BG,WAA3B,CAAuC9D,SAAvC,CAAiD,UAAAwG,CAAC;AAAA,mBAAI,OAAI,CAAC1C,WAAL,GAAmB0C,CAAvB;AAAA,WAAlD;AACH;;;;qCAEO,CACP;;;oCAESiB,Y,EAAoB;AAC1B,iBAAKA,YAAL,GAAoBA,YAApB;AACH;;;mCAEK;AACF,iBAAK9D,qBAAL,CAA2B+C,MAA3B;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACH;;;;;;;yBArBQ2I,2B,EAA2B,uH,EAAA,uJ;AAAA,O;;;cAA3BA,2B;AAA2B,gD;AAAA,iB;AAAA,gB;AAAA,qpC;AAAA;AAAA;ACPxC;;AACI;;AACI;;AACI;;AAAG;;AAAQ;;AACf;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAG;;AAAa;;AACpB;;AACJ;;AAEA;;AAA2E;AAAA,qBAAS,IAAAnF,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AACvE;;AACA;;AACJ;;AACA;;AAA+E;AAAA,qBAAS,IAAAA,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AAC3E;;AACA;;AACJ;;AACA;;AAAgF;AAAA,qBAAS,IAAAA,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AAC5E;;AACA;;AACJ;;AASA;;AACI;;AAAG;;AAAQ;;AACf;;AACA;;AACI;;AACI;;AAKA;;AAKJ;;AACJ;;AACJ;;AACJ;;AAOA;;AAEI;;AACI;;AAEI;;AAAyB;;AAAG;;AAAqB;;AAAI;;AACrD;;AACA;;AAAyB;;AAAG;;AAAsB;;AAAI;;AAEtD;;AACI;;AAAyB;;AAAG;;AAAyB;;AAAI;;AACzD;;AAAyB;;AAAG;;AAAuB;;AAAI;;AAC3D;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AAA2E;AAAA,qBAAS,IAAAA,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AACvE;;AACA;;AACJ;;AACA;;AAA+E;AAAA,qBAAS,IAAAA,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AAC3E;;AACA;;AACJ;;AACA;;AAAgF;AAAA,qBAAS,IAAAA,SAAA,CAAU,CAAV,CAAT;AAAqB,aAArB;;AAC5E;;AACA;;AACJ;;AACJ;;AACJ;;;;AA/E0C;;AAAA;;AAII;;AAAA;;AAIC;;AAAA;;AAiBQ;;AAAA;;AAKS;;AAAA;;AAoCtB;;AAAA;;AAII;;AAAA;;AAIC;;AAAA;;;;;;;;;wEDjFlCmF,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACPrJ,oBAAQ,EAAE,yBADH;AAEPC,uBAAW,EAAE,sCAFN;AAGPC,qBAAS,EAAE,CAAC,qCAAD;AAHJ,W;AAK6B,U;;;;;;;;;;;;;;;;;;;;;;;;AEXxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACII;;AAEI;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AAH4B;;AAAA;;;;;;AANhC;;AACI;;AASJ;;;;;;AAT+B;;AAAA;;;;;;AAW/B;;AACI;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAkB;;AAA0B;;AAC5C;;AACI;;AAAkB;;AAAY;;AAClC;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAGA;;AACI;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;UDhDaoJ,qB;AAQT,uCAAoBtN,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AACnB;;;;qCAEO;AACJ,iBAAKI,OAAL,GAAe,KAAf;AACA,iBAAKmN,UAAL,GAAkB,CAAlB;AACH;;;sCAEWC,O,EAAsB;AAAA;;AAC9B,gBAAI,OAAO,KAAKlF,KAAZ,KAAsB,WAAtB,IAAqC,OAAO,KAAKC,GAAZ,KAAoB,WAA7D,EAA0E;AACtE;AACH;;AACD,iBAAKgF,UAAL,GAAkB,CAAlB;AACA,iBAAKnN,OAAL,GAAe,IAAf;AACA,iBAAKJ,WAAL,CAAiByN,QAAjB,CAA0B,KAAK/N,QAA/B,EAAyC,KAAK4I,KAA9C,EAAqD,KAAKC,GAA1D,EAA+D7H,SAA/D,CAAyE,UAAAwM,QAAQ,EAAI;AACjF5N,qBAAO,CAACC,GAAR,CAAY2N,QAAZ;AACA,kBAAMC,GAAG,GAAG,OAAZ;AACA,qBAAI,CAACI,UAAL,GAAkBL,QAAQ,CAACC,GAAD,CAA1B;AACA7N,qBAAO,CAACC,GAAR,0BAA8B,OAAI,CAACgO,UAAnC;;AACA,kBAAI,CAACL,QAAQ,CAACC,GAAD,CAAb,EAAoB;AAChB,uBAAI,CAAC/M,OAAL,GAAe,KAAf;AACA,uBAAO,KAAP;AACH;;AACD,qBAAI,CAACA,OAAL,GAAe,KAAf;AACA,kBAAMgN,GAAG,GAAG,YAAZ;AACA,qBAAI,CAACzM,UAAL,GAAkBuM,QAAQ,CAACE,GAAD,CAA1B;AACH,aAZD;AAaH;;;;;;;yBAnCQE,qB,EAAqB,mI;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,gB;AAAA,e;AAAA,sZ;AAAA;AAAA;ACTlC;;AAYA;;AAyBA;;;;AArCM;;AAYA;;AAAA;;AAyBA;;AAAA;;;;;;;;;wED5BOA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACPtJ,oBAAQ,EAAE,oBADH;AAEPC,uBAAW,EAAE,iCAFN;AAGPC,qBAAS,EAAE,CAAC,gCAAD;AAHJ,W;AAKuB,U;;;;;AACrBxE,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE,C;AACV4I,eAAK,EAAE,CAAF;kBAAb;AAAa,WAAE,C;AACPC,aAAG,EAAE,CAAF;kBAAX;AAAW,WAAE;;;;;;;;;;;;;;;;;;;AEflB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa2B,c;AACX,gCAAoB7F,qBAApB,EAAkE;AAAA;;AAA9C,eAAAA,qBAAA,GAAAA,qBAAA;AAAiD;;;;oCAE3D8F,O,EAA2B3D,I,EAAiB;AACpD;AACA,gBAAMhC,WAAW,GAAG,KAAKH,qBAAL,CAA2BI,gBAA/C;AACA,gBAAM2F,UAAU,GAAG5F,WAAW,IAAIA,WAAW,CAAC6F,KAA9C;AACA,gBAAMC,QAAQ,GAAGH,OAAO,CAACtF,GAAR,CAAY0F,UAAZ,CAAuB,yEAAY9K,MAAnC,CAAjB;AACAH,mBAAO,CAACC,GAAR,gDAAoDiF,WAApD;;AACA,gBAAI4F,UAAU,IAAIE,QAAlB,EAA4B;AAC1BhL,qBAAO,CAACC,GAAR;AACAD,qBAAO,CAACC,GAAR,gDAAoDiF,WAAW,CAAC6F,KAAhE;AACAF,qBAAO,GAAGA,OAAO,CAACK,KAAR,CAAc;AACtBC,0BAAU,EAAE;AACViD,+BAAa,mBAAYlJ,WAAW,CAAC6F,KAAxB,CADH;AAEV,kCAAgB;AAFN;AADU,eAAd,CAAV;AAMD;;AAED,mBAAO7D,IAAI,CAACkE,MAAL,CAAYP,OAAZ,CAAP;AACD;;;;;;;yBArBUD,c,EAAc,qJ;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc;;;;;wEAAdA,c,EAAc;gBAD1B;AAC0B,U;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkBY;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AACI;;AACJ;;AACJ;;;;;;AACA;;AACI;;AACI;;AACJ;;AACJ;;;;;;;;AAMI;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AACI;;AAA6B;;AACjC;;AACJ;;;;;;AACA;;AACI;;AACI;;AAA4B;;AAChC;;AACJ;;;;UD7BHyD,kB;AAKT,oCACYvJ,MADZ,EAEYC,qBAFZ,EAGY2C,0BAHZ,EAGkE;AAAA;;AAAA;;AAFtD,eAAA5C,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAA2C,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,KAAA,GAAQ,aAAR;AASI,eAAK5C,qBAAL,CAA2BG,WAA3B,CAAuC9D,SAAvC,CAAiD,UAAAwG,CAAC;AAAA,mBAAI,OAAI,CAAC1C,WAAL,GAAmB0C,CAAvB;AAAA,WAAlD;AACA,eAAKF,0BAAL,CAAgCxC,WAAhC,CAA4C9D,SAA5C,CAAsD,UAAAwG,CAAC;AAAA,mBAAI,OAAI,CAACC,gBAAL,GAAwBD,CAA5B;AAAA,WAAvD;AACH;;;;mCAEK;AACF,iBAAK7C,qBAAL,CAA2B+C,MAA3B;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACH;;;wCAEU;AACP,iBAAKsC,0BAAL,CAAgCI,MAAhC;AACA,iBAAKhD,MAAL,CAAYM,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACH;;;;;;;yBAtBQiJ,kB,EAAkB,uH,EAAA,uJ,EAAA,oK;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,iwB;AAAA;AAAA;ACb/B;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AAGA;;AAA4F;;AAAgB;;AAG5G;;AACI;;AAKA;;AAKJ;;AAGA;;AACI;;AACI;;AAKA;;AAKJ;;AACJ;;AAEJ;;AACJ;;AAIA;;AACI;;AAAyB;;AAAG;;AAAqB;;AAAI;;AACrD;;AAAyB;;AAAG;;AAAqB;;AAAI;;AACrD;;AAAyB;;AAAG;;AAAqB;;AAAI;;AACrD;;AACJ;;;;AAtC+D;;AAAA;;AAK4B;;AAAA;;AAUxB;;AAAA;;AAK4B;;AAAA;;;;;;;;;wEDzBlFA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACP3J,oBAAQ,EAAE,gBADH;AAEPC,uBAAW,EAAE,6BAFN;AAGPC,qBAAS,EAAE,CAAC,4BAAD;AAHJ,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa0J,qB;AAEX,yCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,0C;AAAA,gB;AAAA,e;AAAA,wC;AAAA;AAAA;ACLlC;;AAGI;;AAEJ;;;;;;;;;wEDAaA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT5J,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa2J,qB;AAIX,uCAAoBxO,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAClB,eAAKyO,kBAAL,GAA0B,IAAI,oDAAJ,CAA2BxH,IAAI,CAACyH,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAA3B,CAA1B;AACA,eAAKzJ,WAAL,GAAmB,KAAKsJ,kBAAL,CAAwBI,YAAxB,EAAnB;AACD;;;;gCAMKhD,K,EAAeC,Q,EAAgB;AAAA;;AACnC,mBAAO,KAAK9L,IAAL,CAAU8O,IAAV,WAAuB,sEAAY1O,MAAnC,oBAA0D;AAACyL,mBAAK,EAALA,KAAD;AAAQC,sBAAQ,EAARA;AAAR,aAA1D,EACJtF,IADI,CACC,2DAAI,UAAAT,IAAI,EAAI;AAChB;AACA4I,0BAAY,CAACI,OAAb,CAAqB,aAArB,EAAoC9H,IAAI,CAACC,SAAL,CAAenB,IAAf,CAApC;;AACA,qBAAI,CAAC0I,kBAAL,CAAwBtH,IAAxB,CAA6BpB,IAA7B;;AACA,qBAAOA,IAAP;AACD,aALK,CADD,CAAP;AAOD;;;iCAEMI,I,EAAc0F,K,EAAeC,Q,EAAgB;AAClD,mBAAO,KAAK9L,IAAL,CAAU8O,IAAV,WAAuB,sEAAY1O,MAAnC,qBAA2D;AAAC+F,kBAAI,EAAJA,IAAD;AAAO0F,mBAAK,EAALA,KAAP;AAAcC,sBAAQ,EAARA;AAAd,aAA3D,EACJtF,IADI,CACC,2DAAI,UAAAT,IAAI,EAAI;AAChB;AACA;AACA;AACA,qBAAOA,IAAP;AACD,aALK,CADD,CAAP;AAOD;;;kCAEOsE,I,EAAY;AAClB,mBAAO,KAAKrK,IAAL,CAAU8O,IAAV,WAAuB,sEAAY1O,MAAnC,6BAAmE;AAACiK,kBAAI,EAAJA;AAAD,aAAnE,EACF7D,IADE,CACG,2DAAI,UAAAwI,OAAO,EAAI;AACnB,qBAAOA,OAAP;AACD,aAFK,CADH,CAAP;AAID;;;mCAEK;AACJ;AACAL,wBAAY,CAACM,UAAb,CAAwB,aAAxB;AACA,iBAAKR,kBAAL,CAAwBtH,IAAxB,CAA6B,IAA7B;AACD;;;8BAnC0B;AACzB,mBAAO,KAAKsH,kBAAL,CAAwB3H,KAA/B;AACD;;;;;;;yBAXU0H,qB,EAAqB,uH;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBADT;;;;;wEACZA,qB,EAAqB;gBADjC,wDACiC;iBADtB;AAAC/N,sBAAU,EAAE;AAAb,W;AACsB,U;;;;;;;;;;;;;;;;;;;;;;ACVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQayO,gB;AACX,kCAAoBlK,qBAApB,EAAkE;AAAA;;AAA9C,eAAAA,qBAAA,GAAAA,qBAAA;AACnB;;;;oCAES8F,O,EAA2B3D,I,EAAiB;AAAA;;AACpD,mBAAOA,IAAI,CAACkE,MAAL,CAAYP,OAAZ,EAAqBtE,IAArB,CAA0B,kEAAW,UAAA2I,GAAG,EAAI;AACjD,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACAnP,uBAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,uBAAI,CAAC8E,qBAAL,CAA2B+C,MAA3B;;AACA6B,wBAAQ,CAACyF,MAAT,CAAgB,IAAhB;AACD,eALD,MAKO,IAAIF,GAAG,CAACC,MAAJ,KAAe,CAAnB,EAAsB;AAC3B;AACAD,mBAAG,CAACC,MAAJ,GAAa,MAAb;AACAD,mBAAG,CAACtJ,KAAJ,CAAUmJ,OAAV,GAAoB,4EAApB;AACD;;AACD/O,qBAAO,CAACC,GAAR,8BAAkCiP,GAAG,CAACtJ,KAAJ,CAAUmJ,OAA5C,+BAAwEG,GAAG,CAACG,UAA5E;AACArP,qBAAO,CAACC,GAAR,CAAYiP,GAAZ;AACA,kBAAMtJ,KAAK,GAAGsJ,GAAG,CAACtJ,KAAJ,CAAUmJ,OAAV,IAAqBG,GAAG,CAACG,UAAvC;AACA,qBAAO,wDAAWzJ,KAAX,CAAP;AACD,aAfgC,CAA1B,CAAP;AAgBD;;;;;;;yBArBUqJ,gB,EAAgB,8I;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaV,qB;AAIX,uCAAoBxO,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAClB,eAAKyO,kBAAL,GAA0B,IAAI,oDAAJ,CAA0BxH,IAAI,CAACyH,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAA1B,CAA1B;AACA,eAAKzJ,WAAL,GAAmB,KAAKsJ,kBAAL,CAAwBI,YAAxB,EAAnB;AACD;;;;gCAMKhD,K,EAAeC,Q,EAAgB;AAAA;;AACnC,mBAAO,KAAK9L,IAAL,CAAU8O,IAAV,WAAuB,sEAAY1O,MAAnC,mBAAyD;AAACyL,mBAAK,EAALA,KAAD;AAAQC,sBAAQ,EAARA;AAAR,aAAzD,EACJtF,IADI,CACC,2DAAI,UAAAT,IAAI,EAAI;AAChB;AACA4I,0BAAY,CAACI,OAAb,CAAqB,aAArB,EAAoC9H,IAAI,CAACC,SAAL,CAAenB,IAAf,CAApC;;AACA,qBAAI,CAAC0I,kBAAL,CAAwBtH,IAAxB,CAA6BpB,IAA7B;;AACA,qBAAOA,IAAP;AACD,aALK,CADD,CAAP;AAOD;;;iCAEMI,I,EAAc0F,K,EAAeC,Q,EAAkByD,gB,EAAwB;AAC5E,mBAAO,KAAKvP,IAAL,CAAU8O,IAAV,WAAuB,sEAAY1O,MAAnC,oBAA0D;AAAC+F,kBAAI,EAAJA,IAAD;AAAO0F,mBAAK,EAALA,KAAP;AAAcC,sBAAQ,EAARA,QAAd;AAAwByD,8BAAgB,EAAhBA;AAAxB,aAA1D,EACJ/I,IADI,CACC,2DAAI,UAAAT,IAAI,EAAI;AAChB;AACA;AACA;AACA,qBAAOA,IAAP;AACD,aALK,CADD,CAAP;AAOD;;;mCAEK;AACJ;AACA4I,wBAAY,CAACM,UAAb,CAAwB,aAAxB;AACA,iBAAKR,kBAAL,CAAwBtH,IAAxB,CAA6B,IAA7B;AACD;;;8BA5B0B;AACzB,mBAAO,KAAKsH,kBAAL,CAAwB3H,KAA/B;AACD;;;;;;;yBAXU0H,qB,EAAqB,uH;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBADT;;;;;wEACZA,qB,EAAqB;gBADjC,wDACiC;iBADtB;AAAC/N,sBAAU,EAAE;AAAb,W;AACsB,U;;;;;;;;;;;;;;;;;;;;;;ACTlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa+O,W;AAIT,6BAAoBxP,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AACnB;;;;uCAEYyP,U,EAAkB;AAC3BxP,mBAAO,CAACC,GAAR,CAAY,yBAAZ,EAD2B,CAE3B;AACA;AACA;AACA;;AAEA,gBAAMwP,MAAM,GAAG,IAAI,+DAAJ,GACVC,GADU,CACN,UADM,EACMF,UADN,EAEVE,GAFU,CAEN,YAFM,EAEQ,GAFR,CAAf;AAIA,mBAAO,KAAK3P,IAAL,CAAUG,GAAV,WAA2B,yEAAYC,MAAvC,mBACH;AAACsP,oBAAM,EAANA;AAAD,aADG,CAAP,CAX2B,CAa3B;AACA;AACH;;;mCAEQD,U,EAAoBxG,K,EAAeC,G,EAAW;AACnDjJ,mBAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,gBAAMwP,MAAM,GAAG,IAAI,+DAAJ,GACVC,GADU,CACN,UADM,EACMF,UADN,EAEVE,GAFU,CAEN,OAFM,EAEG1G,KAFH,EAGV0G,GAHU,CAGN,KAHM,EAGCzG,GAHD,CAAf;AAKA,mBAAO,KAAKlJ,IAAL,CAAUG,GAAV,WAA2B,yEAAYC,MAAvC,sBACH;AAACsP,oBAAM,EAANA;AAAD,aADG,CAAP,CAPmD,CASnD;AACA;AACH;;;kCAEOtO,W,EAAmB;AACvB,mBAAO,KAAKpB,IAAL,CAAUG,GAAV,WAA6B,yEAAYC,MAAzC,mBAAwDgB,WAAxD,GACH;AAACwO,0BAAY,EAAE;AAAf,aADG,CAAP;AAEH;;;;;;;yBAxCQJ,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBADC;;;;;wEACZA,W,EAAW;gBADvB,wDACuB;iBADZ;AAAC/O,sBAAU,EAAE;AAAb,W;AACY,U;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaoP,U;;;;;;;oCAEC/I,K,EAAYgJ,K,EAAU;AAC5B,gBAAIA,KAAJ,EAAW;AACP,qBAAOhJ,KAAK,CAACiJ,MAAN,CAAa,UAAAC,GAAG;AAAA,uBAAKA,GAAG,SAAH,CAAUC,QAAV,CAAmBH,KAAnB,KAA6BE,GAAG,CAACpG,QAAJ,CAAaqG,QAAb,CAAsBH,KAAtB,CAA7B,IAA6DE,GAAG,CAAC7J,IAAJ,CAAS8J,QAAT,CAAkBH,KAAlB,CAAlE;AAAA,eAAhB,CAAP;AACH,aAFD,MAEO;AACH,qBAAOhJ,KAAP;AACH;AACJ;;;;;;;yBARQ+I,U;AAAU,O;;;;cAAVA,U;AAAU;;;;;wEAAVA,U,EAAU;gBAHtB,kDAGsB;iBAHjB;AACF1J,gBAAI,EAAE;AADJ,W;AAGiB,U;;;;;;;;;;;;;;;;;;ACLvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYY;;;;;;AAeY;;AAAoC;;AAA6B;;;;;;AACjE;;AAAmC;;AAA4B;;;;;;AAFnE;;AACI;;AACA;;AACJ;;;;;;AAFU;;AAAA;;AACA;;AAAA;;;;;;AAOV;;;;;;;;AAIJ;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAyB;;AAC7B;;AAAI;;AACA;;AAAG;;AAAH;;AAAgC;;AACxC;;AACJ;;;;;;AAPQ;;AAAA;;;;;;;;AASR;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AACA;;AAAG;;AAAH;;AAAmB;;AAC3B;;AACJ;;;;;;AAFe;;AAAA;;;;;;;;;;UD9ClB+J,qB;AAOT,uCACYxK,WADZ,EAEYT,KAFZ,EAGYF,MAHZ,EAIYC,qBAJZ,EAIwD;AAAA;;AAH5C,eAAAU,WAAA,GAAAA,WAAA;AACA,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AATZ,eAAAjE,OAAA,GAAU,KAAV;AACA,eAAA6E,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAQ,EAAR;AACA,eAAAsK,OAAA,GAAU,KAAV,CAMwD,CAEpD;AACA;AACA;AACH;;;;qCAEO;AACJ,gBAAM3E,eAAe,GAAG,qCAAxB;AACA,iBAAKE,UAAL,GAAkB,KAAKhG,WAAL,CAAiBQ,KAAjB,CAAuB;AACrCmE,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWsB,OAAX,CAAmB,CACzC,0DAAWvF,QAD8B,EACpB,0DAAW2F,OAAX,CAAmBP,eAAnB,CADoB,CAAnB,CAApB;AAD+B,aAAvB,CAAlB;AAIH,W,CAED;AACA;;;;AAKA;qCACW;AAAA;;AACP,iBAAK2E,OAAL,GAAe,KAAf;AACA,iBAAKvK,SAAL,GAAiB,IAAjB,CAFO,CAIP;;AACA,gBAAI,KAAK8F,UAAL,CAAgB/E,OAApB,EAA6B;AACzB;AACH;;AAED,iBAAK5F,OAAL,GAAe,IAAf;AACA,iBAAKiE,qBAAL,CAA2BoL,OAA3B,CAAmC,KAAKrJ,CAAL,CAAOsD,IAAP,CAAYvD,KAA/C,EACKN,IADL,CACU,8DADV,EAEKnF,SAFL,CAEe;AACP8F,kBAAI,EAAE,gBAAM;AACR,uBAAI,CAACtB,KAAL,GAAa,EAAb;AACA,uBAAI,CAACsK,OAAL,GAAe,IAAf;AACA,uBAAI,CAACpP,OAAL,GAAe,KAAf;AACH,eALM;AAMP8E,mBAAK,EAAE,eAAAA,OAAK,EAAI;AACZ,uBAAI,CAACA,KAAL,GAAaA,OAAb;AACA,uBAAI,CAAC9E,OAAL,GAAe,KAAf;AACH;AATM,aAFf;AAaH;;;uCAES;AACN,iBAAK8E,KAAL,GAAa,EAAb;AACA,iBAAKsK,OAAL,GAAe,KAAf;AACH;;;qCAEO;AACJ,gBAAM3E,eAAe,GAAG,qCAAxB;AACA,gBAAMnB,IAAI,GAAG,KAAKgG,UAAL,EAAb;AACA,iBAAK3E,UAAL,GAAkB,KAAKhG,WAAL,CAAiBQ,KAAjB,CAAuB;AACrCmE,kBAAI,EAAE,IAAI,0DAAJ,CAAgBA,IAAhB,EAAsB,0DAAWsB,OAAX,CAAmB,CAC3C,0DAAWvF,QADgC,EACtB,0DAAW2F,OAAX,CAAmBP,eAAnB,CADsB,CAAnB,CAAtB;AAD+B,aAAvB,CAAlB;AAIA,iBAAK8E,UAAL;AACH;;;uCAES;AACN,gBAAIjG,IAAI,GAAG,EAAX;;AACA,iBAAK,IAAIjH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA6B;AACzBiH,kBAAI,IAAI,KAAKkG,UAAL,KAAoB,GAA5B;AACH;;AACDlG,gBAAI,IAAI,KAAKkG,UAAL,EAAR;AACA,mBAAOlG,IAAP;AACH;;;uCAES;AACN,gBAAMmG,SAAS,GAAG,CAAlB;AACA,gBAAIC,OAAO,GAAG,EAAd;AACA,gBAAMC,KAAI,GAAG,+DAAb;;AACA,iBAAK,IAAItN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoN,SAApB,EAA+BpN,CAAC,EAAhC,EAAoC;AAChC,kBAAMuN,CAAC,GAAGlO,IAAI,CAACmO,KAAL,CAAWnO,IAAI,CAACoO,MAAL,KAAgBH,KAAI,CAACvN,MAAhC,CAAV;AACAsN,qBAAO,IAAIC,KAAI,CAACI,MAAL,CAAYH,CAAZ,CAAX;AACH;;AACD,mBAAOF,OAAP;AACH;;;8BA/DO;AACJ,mBAAO,KAAK/E,UAAL,CAAgBpE,QAAvB;AACH;;;;;;;yBA9BQ4I,qB,EAAqB,2H,EAAA,+H,EAAA,uH,EAAA,oK;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA,iB;AAAA,gB;AAAA,w7B;AAAA;AAAA;ACVlC;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AAEA;;AAA+D;AAAA,qBAAS,IAAAa,QAAA,EAAT;AAAmB,aAAnB;;AAC3D;;AACA;;AACJ;;AAEA;;AAAqD;AAAA,qBAAY,IAAAxJ,QAAA,EAAZ;AAAsB,aAAtB;;AACjD;;AAEI;;AACI;;AACI;;AACA;;AAGJ;;AACA;;AAIJ;;AAIA;;AACI;;AACA;;AACJ;;AAEA;;AAYA;;AAWJ;;AAEJ;;AAEJ;;AACJ;;;;AAxDgB;;AAAA;;AACG;;AAAA;;AAIiB;;AAAA;;AAQL;;AAAA;;AAEL;;AAAA;;AAQF;;AAAA;;AACG;;AAAA;;AAIuB;;AAAA;;AAYH;;AAAA;;;;;;;;;wEDvClC2I,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACPvL,oBAAQ,EAAE,oBADH;AAEPC,uBAAW,EAAE,iCAFN;AAGPC,qBAAS,EAAE,CAAC,gCAAD;AAHJ,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOamM,qB;AAEX,yCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,2C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPlC;;AAAG;;AAAqB;;;;;;;;wEDOXA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTrM,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBY;;AAAoC;;AAAgB;;;;;;AACpD;;AAAqC;;AAAoC;;;;;;AAF3E;;AACE;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAWN;;AAAqC;;AAAiB;;;;;;AACtD;;AAAkC;;AAAyC;;;;;;AAF7E;;AACE;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAWN;;AAAwC;;AAAoB;;;;;;AAC5D;;AACE;;AACF;;;;;;AAJF;;AACE;;AACA;;AAGF;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;;;;;AAcN;;AAAoC;;AAA6B;;;;;;AACjE;;AAAmC;;AAA4B;;;;;;AAFjE;;AACE;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAOR;;;;;;;;AAIF;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAkD;;AACtD;;AAAI;;AAA4C;;AAElD;;AACF;;;;;;AAPI;;AAAA;;;;;;;;;;UD9DCoM,e;AAMT,iCACYvL,WADZ,EAEYT,KAFZ,EAGYF,MAHZ,EAIYC,qBAJZ,EAIwD;AAAA;;AAH5C,eAAAU,WAAA,GAAAA,WAAA;AACA,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AARZ,eAAAjE,OAAA,GAAU,KAAV;AACA,eAAA6E,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAQ,EAAR;;AAQI,cAAI,KAAKb,qBAAL,CAA2BI,gBAA/B,EAAiD;AAC7C,iBAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACH;AACJ;;;;qCAEO;AACJ;AACA;AACA,gBAAMkG,OAAO,GAAG,uIAAhB;AACA,gBAAMC,eAAe,GAAG,qCAAxB;AACA,gBAAMC,WAAW,GAAG,+GAApB,CALI,CAMJ;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAKC,UAAL,GAAkB,KAAKhG,WAAL,CAAiBQ,KAAjB,CAAuB;AACrCC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWwF,OAAX,CAAmB,CACzC,0DAAWvF,QAD8B,EACpB,0DAAWlD,SAAX,CAAqB,CAArB,CADoB,EACK,0DAAW0I,SAAX,CAAqB,EAArB,CADL,CAAnB,CAApB,CAD+B;AAGrCC,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,OAAX,CAAmB,CAC1C,0DAAWvF,QAD+B,EACrB,0DAAWyF,KADU,CAAnB,CAApB,CAH8B;AAKrCC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWH,OAAX,CAAmB,CAC7C,0DAAWvF,QADkC,EACxB,0DAAW2F,OAAX,CAAmBN,WAAnB,CADwB,EAE7C,0DAAWvI,SAAX,CAAqB,CAArB,CAF6C,EAG7C,0DAAW0I,SAAX,CAAqB,EAArB,CAH6C,CAAnB,CAApB,CAL2B;AASrCvB,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWsB,OAAX,CAAmB,CACzC,0DAAWvF,QAD8B,EACpB,0DAAW2F,OAAX,CAAmBP,eAAnB,CADoB,CAAnB,CAApB;AAT+B,aAAvB,CAAlB;AAYH,W,CAED;AACA;;;;AAKA;qCACW;AAAA;;AACP,iBAAK5F,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,gBAAI,KAAK8F,UAAL,CAAgB/E,OAApB,EAA6B;AACzB;AACH;;AAED,iBAAK5F,OAAL,GAAe,IAAf;AACA,iBAAKiE,qBAAL,CAA2BgH,MAA3B,CAAkC,KAAKjF,CAAL,CAAOZ,IAAP,CAAYW,KAA9C,EAAqD,KAAKC,CAAL,CAAO8E,KAAP,CAAa/E,KAAlE,EAAyE,KAAKC,CAAL,CAAO+E,QAAP,CAAgBhF,KAAzF,EAAgG,KAAKC,CAAL,CAAOsD,IAAP,CAAYvD,KAA5G,EACKN,IADL,CACU,8DADV,EAEKnF,SAFL,CAEe;AACP8F,kBAAI,EAAE,gBAAM;AACR,oBAAM+J,WAAW,GAAG,OAAI,CAACnM,MAAL,CAAYS,GAAZ,CAAgB2L,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAApB,CADQ,CAER;;;AACA,uBAAI,CAACpM,MAAL,CAAYM,QAAZ,CAAqB,CAAC6L,WAAW,GAAG,QAAf,CAArB;AACH,eALM;AAMPrL,mBAAK,EAAE,eAAAA,OAAK,EAAI;AACZ,uBAAI,CAACA,KAAL,GAAaA,OAAb;AACA,uBAAI,CAAC9E,OAAL,GAAe,KAAf;AACH;AATM,aAFf;AAaH;;;uCAES;AACN,iBAAK8E,KAAL,GAAa,EAAb;AACH;;;8BA/BO;AACJ,mBAAO,KAAK6F,UAAL,CAAgBpE,QAAvB;AACH;;;;;;;yBA/CQ2J,e,EAAe,2H,EAAA,+H,EAAA,uH,EAAA,8J;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,qvC;AAAA;AAAA;ACX5B;;AACE;;AACE;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAAqD;AAAA,qBAAY,IAAA1J,QAAA,EAAZ;AAAsB,aAAtB;;AACnD;;AAEE;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAIF;;AAEA;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAIF;;AAEA;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAMF;;AAEA;;AACE;;AACE;;AACA;;AAGF;;AACA;;AAIF;;AAIA;;AACE;;AACA;;AACF;;AAEA;;AAYF;;AAEF;;AACA;;AACE;;AAA2B;;AAAyB;;AAAO;;AAC7D;;AAEF;;AACF;;;;AAjFgC;;AAAA;;AAOb;;AAAA;;AAEH;;AAAA;;AAUG;;AAAA;;AAEH;;AAAA;;AAUG;;AAAA;;AAEH;;AAAA;;AAaG;;AAAA;;AAEH;;AAAA;;AAQA;;AAAA;;AACC;;AAAA;;AAIyB;;AAAA;;;;;;;;;wED3D7B0J,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACPtM,oBAAQ,EAAE,YADH;AAEPC,uBAAW,EAAE,yBAFN;AAGPC,qBAAS,EAAE,CAAC,wBAAD;AAHJ,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAuBA,UAAMuM,MAAM,GAAW,CACnB;AAACC,YAAI,EAAE,EAAP;AAAWC,kBAAU,EAAE,MAAvB;AAA+BC,iBAAS,EAAE;AAA1C,OADmB,EAEnB;AACIF,YAAI,EAAE,MADV;AACkBG,iBAAS,EAAE,oFAD7B;AAEIC,gBAAQ,EAAE,CACN;AAACJ,cAAI,EAAE,EAAP;AAAWG,mBAAS,EAAE;AAAtB,SADM,EAEN;AAACH,cAAI,EAAE,MAAP;AAAeG,mBAAS,EAAE;AAA1B,SAFM,EAGN;AACIH,cAAI,EAAE,aADV;AACyBG,mBAAS,EAAE,0GADpC;AAC0DE,qBAAW,EAAE,CAAC,8DAAD,CADvE;AAEID,kBAAQ,EAAE,CACN;AAACJ,gBAAI,EAAE,EAAP;AAAWG,qBAAS,EAAE;AAAtB,WADM,EAEN;AAACH,gBAAI,EAAE,MAAP;AAAeG,qBAAS,EAAE;AAA1B,WAFM,EAGN;AAACH,gBAAI,EAAE,UAAP;AAAmBG,qBAAS,EAAE;AAA9B,WAHM,EAIN;AAACH,gBAAI,EAAE,WAAP;AAAoBG,qBAAS,EAAE;AAA/B,WAJM,EAKN;AAACH,gBAAI,EAAE,kBAAP;AAA2BG,qBAAS,EAAE;AAAtC,WALM;AAFd,SAHM,EAaN;AAACH,cAAI,EAAE,OAAP;AAAgBG,mBAAS,EAAE;AAA3B,SAbM,EAcN;AAACH,cAAI,EAAE,OAAP;AAAgBG,mBAAS,EAAE;AAA3B,SAdM,EAeN;AAACH,cAAI,EAAE,QAAP;AAAiBG,mBAAS,EAAE;AAA5B,SAfM;AAFd,OAFmB,EAsBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIH,YAAI,EAAE,OADV;AACmBG,iBAAS,EAAE,qGAD9B;AAEIC,gBAAQ,EAAE,CACN;AAACJ,cAAI,EAAE,EAAP;AAAWG,mBAAS,EAAE;AAAtB,SADM,EAEN;AAACH,cAAI,EAAE,OAAP;AAAgBG,mBAAS,EAAE;AAA3B,SAFM,EAGN;AAACH,cAAI,EAAE,QAAP;AAAiBG,mBAAS,EAAE;AAA5B,SAHM,EAIN;AACIH,cAAI,EAAE,SADV;AACqBG,mBAAS,EAAE,8GADhC;AACuDE,qBAAW,EAAE,CAAC,gEAAD,CADpE;AAEID,kBAAQ,EAAE,CACN;AAACJ,gBAAI,EAAE,uBAAP;AAAgCG,qBAAS,EAAE;AAA3C,WADM;AAFd,SAJM;AAFd,OArCmB,EAmDnB;AACIH,YAAI,EAAE,SADV;AACqBG,iBAAS,EAAE,+GADhC;AAEIC,gBAAQ,EAAE,CACN;AAACJ,cAAI,EAAE,EAAP;AAAWG,mBAAS,EAAE,sFAAtB;AAAqCE,qBAAW,EAAE,CAAC,iEAAD;AAAlD,SADM,EAEN;AAACL,cAAI,EAAE,OAAP;AAAgBG,mBAAS,EAAE;AAA3B,SAFM,EAGN;AAACH,cAAI,EAAE,QAAP;AAAiBG,mBAAS,EAAE;AAA5B,SAHM,EAIN;AAACH,cAAI,EAAE,MAAP;AAAeG,mBAAS,EAAE,sFAA1B;AAAyCE,qBAAW,EAAE,CAAC,iEAAD;AAAtD,SAJM,EAKN;AAACL,cAAI,EAAE,UAAP;AAAmBG,mBAAS,EAAE,iGAA9B;AAAiDE,qBAAW,EAAE,CAAC,iEAAD;AAA9D,SALM,EAMN;AAACL,cAAI,EAAE,WAAP;AAAoBG,mBAAS,EAAE,oGAA/B;AAAmDE,qBAAW,EAAE,CAAC,iEAAD;AAAhE,SANM,EAON;AAACL,cAAI,EAAE,kBAAP;AAA2BG,mBAAS,EAAE,4FAAtC;AAAuDE,qBAAW,EAAE,CAAC,iEAAD;AAApE,SAPM;AAFd,OAnDmB,EA+DnB;AAACL,YAAI,EAAE,IAAP;AAAaG,iBAAS,EAAE;AAAxB,OA/DmB,CAAvB;;UAsEaG,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHhB,CAAC,6DAAaC,OAAb,CAAqBR,MAArB,CAAD,CAGgB,EAFf,4DAEe;;;;4HAAhBO,gB,EAAgB;AAAA;AAAA,oBAFf,4DAEe;AAAA,S;AAFH,O;;;;;wEAEbA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACNvE,mBAAO,EAAE,CAAC,6DAAawE,OAAb,CAAqBR,MAArB,CAAD,CADH;AAENzG,mBAAO,EAAE,CAAC,4DAAD;AAFH,W;AAImB,U;;;;;;;;;;;;;;;;;;AC7F7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBY;;AAAqC;;AAAiB;;;;;;AACtD;;AAAkC;;AAAyC;;;;;;AAF7E;;AACE;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAWN;;AAAwC;;AAAoB;;;;;;AAD9D;;AACE;;AACF;;;;;;AADQ;;AAAA;;;;;;AAOR;;;;;;;;AAIF;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAC7C;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAiD;;AACrD;;AAAI;;AAAsC;;AAC5C;;AACF;;;;;;AANI;;AAAA;;;;;;;;;;UDhCCkH,c;AAMT,gCACYnM,WADZ,EAEYT,KAFZ,EAGYF,MAHZ,EAIYC,qBAJZ,EAIwD;AAAA;;AAH5C,eAAAU,WAAA,GAAAA,WAAA;AACA,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AARZ,eAAAjE,OAAA,GAAU,KAAV;AACA,eAAA6E,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAQ,EAAR,CAMwD,CAEpD;;AACA,cAAI,KAAKb,qBAAL,CAA2BI,gBAA/B,EAAiD;AAC7C,iBAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACH;AACJ;;;;qCAEO;AACJ,iBAAKmI,SAAL,GAAiB,KAAK9H,WAAL,CAAiBQ,KAAjB,CAAuB;AACpC2F,mBAAK,EAAE,CAAC,iBAAD,EAAoB,0DAAWF,OAAX,CAAmB,CAC1C,0DAAWvF,QAD+B,EACrB,0DAAWyF,KADU,CAAnB,CAApB,CAD6B;AAGpCC,sBAAQ,EAAE,CAAC,MAAD,EAAS,0DAAW1F,QAApB;AAH0B,aAAvB,CAAjB;AAKH,W,CAED;AACA;;;;AAKA;qCACW;AAAA;;AACP,iBAAKR,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,gBAAI,KAAK4H,SAAL,CAAe7G,OAAnB,EAA4B;AACxB;AACH;;AAED,iBAAK5F,OAAL,GAAe,IAAf;AACA,iBAAKiE,qBAAL,CAA2ByI,KAA3B,CAAiC,KAAK1G,CAAL,CAAO8E,KAAP,CAAa/E,KAA9C,EAAqD,KAAKC,CAAL,CAAO+E,QAAP,CAAgBhF,KAArE,EACKN,IADL,CACU,8DADV,EAEKnF,SAFL,CAEe;AACP8F,kBAAI,EAAE,gBAAM;AACR;AACA,oBAAM+J,WAAW,GAAG,OAAI,CAACnM,MAAL,CAAYS,GAAZ,CAAgB2L,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAApB;;AACAlR,uBAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,uBAAO,CAACC,GAAR,CAAY,OAAI,CAAC6E,MAAL,CAAYS,GAAxB;AACA,oBAAMD,SAAS,GAAG,OAAI,CAACN,KAAL,CAAWmE,QAAX,CAAoB9D,WAApB,CAAgCC,SAAhC,IAA6C2L,WAA/D;;AACA,uBAAI,CAACnM,MAAL,CAAYM,QAAZ,CAAqB,CAACE,SAAD,CAArB;AACH,eARM;AASPM,mBAAK,EAAE,eAAAA,OAAK,EAAI;AACZ,uBAAI,CAACA,KAAL,GAAaA,OAAb;AACA,uBAAI,CAAC9E,OAAL,GAAe,KAAf;AACH;AAZM,aAFf;AAgBH;;;uCAES;AACN,iBAAK8E,KAAL,GAAa,EAAb;AACH;;;8BAlCO;AACJ,mBAAO,KAAK2H,SAAL,CAAelG,QAAtB;AACH;;;;;;;yBA9BQuK,c,EAAc,2H,EAAA,+H,EAAA,uH,EAAA,8J;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,gB;AAAA,y6B;AAAA;AAAA;ACX3B;;AACE;;AACE;;AACE;;AACE;;AACJ;;AAEA;;AAAoD;AAAA,qBAAY,IAAAtK,QAAA,EAAZ;AAAsB,aAAtB;;AAClD;;AAEE;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAIF;;AAEA;;AACE;;AACE;;AACA;;AAEF;;AACA;;AAGF;;AAIA;;AACE;;AACA;;AACF;;AAEA;;AAWF;;AAEF;;AAEA;;AACE;;AAAa;;AAA0B;;AAAO;;AAChD;;AAEF;;AACF;;;;AArDgC;;AAAA;;AAOb;;AAAA;;AAEH;;AAAA;;AAUG;;AAAA;;AAEH;;AAAA;;AAOA;;AAAA;;AACC;;AAAA;;AAIyB;;AAAA;;;;;;;;;wED7B7BsK,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACPlN,oBAAQ,EAAE,WADH;AAEPC,uBAAW,EAAE,wBAFN;AAGPC,qBAAS,EAAE,CAAC,uBAAD;AAHJ,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAY8D,UAAhB,EAA4B;AACxB;;AACA,YAAImJ,MAAJ,EAAY;AACRA,gBAAM,CAAC7R,OAAP,CAAeC,GAAf,GAAqB,YAAM,CAAE,CAA7B;AACH;AACJ;;AAED,kFAAyB6R,eAAzB,CAAyC,yDAAzC,WACW,UAAA5C,GAAG;AAAA,eAAIlP,OAAO,CAAC4F,KAAR,CAAcsJ,GAAd,CAAJ;AAAA,OADd;;;;;;;;;;;;;;;ACbA,eAAS6C,wBAAT,CAAkCjI,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOkI,OAAO,CAACxH,OAAR,GAAkBpC,IAAlB,CAAuB,YAAW;AACxC,cAAIxH,CAAC,GAAG,IAAIuJ,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAlJ,WAAC,CAACwJ,IAAF,GAAS,kBAAT;AACA,gBAAMxJ,CAAN;AACA,SAJM,CAAP;AAKA;;AACDmR,8BAAwB,CAAC1H,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACA0H,8BAAwB,CAACvH,OAAzB,GAAmCuH,wBAAnC;AACAtH,YAAM,CAACC,OAAP,GAAiBqH,wBAAjB;AACAA,8BAAwB,CAAChI,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\nimport {RespResult} from 'src/app/_models/resp.result';\nimport {SensorInfo} from 'src/app/_models/sensor.info';\n\n@Injectable({providedIn: 'root'})\nexport class SensorService {\n    sensorInfo: SensorInfo;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAll(): any {\n        console.log('running get all sensors');\n        return this.http.get<SensorInfo>(`${environment.apiUrl}/sensors`);\n    }\n\n    updateSettings(sensorId: string, settings: string): any {\n        console.log('Start update settings');\n        return this.http.put<RespResult>(`${environment.apiUrl}/sensors/${sensorId}`, settings);\n    }\n\n    getSensorInfo(): SensorInfo {\n        return this.sensorInfo;\n    }\n\n    setSensorInfo(sensorInfo: SensorInfo): void {\n        this.sensorInfo = sensorInfo;\n    }\n\n}\n","import {Component, OnInit, Input, AfterViewInit} from '@angular/core';\n\nimport {DataService} from '../../_services/data.service';\nimport {DataPoint} from 'src/app/_models/data.point';\nimport {Settings} from 'src/app/_models/settings';\n\n@Component({\n    selector: 'app-data-chart',\n    templateUrl: './data-chart.component.html',\n    styleUrls: ['./data-chart.component.css']\n})\nexport class DataChartComponent implements OnInit, AfterViewInit {\n    @Input() dataPointId: string;\n    dataPoint: DataPoint;\n    loading: boolean;\n    emptyData: boolean;\n    _id: string;\n    time: string;\n    data: [number[], number[], number[]];\n    ready: boolean;\n    dt: number;\n    lineChartData: Array<any>;\n    AllChartData: Array<any>;\n    lineChartLabels: Array<any> = [];\n    lineChartType: string;\n    settings: Settings;\n    lineChartOptions;\n    yMaxes: number[];\n\n    constructor(private dataService: DataService) {\n    }\n\n    chartClicked(e: any): void {\n        console.log(e);\n    }\n\n    chartHovered(e: any): void {\n        console.log(e);\n    }\n\n    // tslint:disable-next-line:typedef\n    ngOnInit() {\n        this.ready = false;\n        this.loading = true;\n        this.emptyData = true;\n    }\n\n    updateChart(): void {\n        this.ready = false;\n        this.loading = true;\n        this.emptyData = true;\n        this.ngAfterViewInit();\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.ready = true;\n            this.dataService.getData(this.dataPointId).subscribe(dataPoints => {\n                console.log(dataPoints);\n                this.lineChartType = 'line';\n                this.dataPoint = dataPoints['dataPoint'];\n                this.settings = this.dataPoint.sensor.settings;\n                this.data = this.dataPoint['data'];\n                this.data[0][0] = 0;\n                this.data[1][0] = 0;\n                this.data[2][0] = 0;\n                this.time = this.dataPoint['time'];\n                this.time = new Date(this.time).toLocaleString();\n                this._id = this.dataPoint['_id'];\n\n                const dataNum = this.dataPoint['dataNum'];\n                this.dt = this.dataPoint['dt'] || 0.1;\n                const freq = 1 / this.dt / dataNum;\n                this.lineChartData = [];\n                this.AllChartData = [\n                    {data: this.data[0], label: 'x axis'},\n                    {data: this.data[1], label: 'y axis'},\n                    {data: this.data[2], label: 'z axis'}\n                ];\n                let yMaxX = 0;\n                let yMaxY = 0;\n                let yMaxZ = 0;\n                if (this.settings.showX) {\n                    yMaxX = Math.max(...this.data[0].slice(this.settings.freqLow / freq, this.settings.freqHigh / freq));\n                    this.lineChartData.push({data: this.data[0], label: 'x axis'});\n                }\n                if (this.settings.showY) {\n                    yMaxY = Math.max(...this.data[1].slice(this.settings.freqLow / freq, this.settings.freqHigh / freq));\n                    this.lineChartData.push({data: this.data[1], label: 'y axis'});\n                }\n                if (this.settings.showZ) {\n                    yMaxZ = Math.max(...this.data[2].slice(this.settings.freqLow / freq, this.settings.freqHigh / freq));\n                    this.lineChartData.push({data: this.data[2], label: 'z axis'});\n                }\n                this.yMaxes = [yMaxX, yMaxY, yMaxZ];\n                let minLength = this.data[0].length;\n                for (let i = 1; i < this.data.length; i++) {\n                    if (this.data[i].length < minLength) {\n                        minLength = this.data[i].length;\n                    }\n                }\n                for (let i = 0; i < minLength; i++) {\n                    this.lineChartLabels.push(i * freq);\n                }\n                if (this.settings.overlap) {\n                    this.lineChartOptions = this.generateOptions(Math.max(yMaxX, yMaxY, yMaxZ) * 1.1);\n                } else {\n                    this.lineChartOptions = [\n                        this.generateOptions(yMaxX),\n                        this.generateOptions(yMaxY),\n                        this.generateOptions(yMaxZ)\n                    ];\n                }\n                // this.lineChartOptions = {};\n                this.emptyData = false; // Show data because it's not empty\n                this.loading = false; // this must be after emptyData, or it will flash\n            });\n        }, 0);\n    }\n\n    generateOptions(max: number): any {\n        return {\n            showLines: true,\n            elements: {\n                point: {\n                    radius: 0\n                },\n                line: {\n                    tension: 0\n                }\n            },\n            scales: {\n                xAxes: [{\n                    display: true,\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Frequency (Hz)'\n                    },\n                    ticks: {\n                        min: this.settings.freqLow,\n                        max: this.settings.freqHigh\n                    },\n                }],\n                yAxes: this.generateYAxes(max)\n            },\n            tooltips: {\n                mode: 'index',\n                intersect: false,\n            }\n        };\n    }\n\n    generateYAxes(max: number): any {\n        return [{\n            display: true,\n            scaleLabel: {\n                display: true,\n                labelString: 'Amplitude'\n            },\n            ticks: {\n                min: 0,\n                max: Math.ceil(max)\n            },\n        }];\n    }\n}\n","<!--<p>data-chart works!</p>-->\n\n<!--<div class=\"ui card\">-->\n<div *ngIf=\"ready && !loading\">\n    <div class=\"content\">\n\n        <div *ngIf=\"!emptyData\">\n            <div class=\"header\">Time: {{time}}</div>\n            <div class=\"meta\">\n                <span>Id: </span>\n                <a>{{_id}}</a>\n            </div>\n<!--            <div *ngFor=\"let x of data\">-->\n<!--                <p>data: {{x}}</p>-->\n<!--            </div>-->\n        </div>\n        <canvas *ngIf=\"settings.overlap\" baseChart\n                [datasets]=\"lineChartData\"\n                [labels]=\"lineChartLabels\"\n                [options]=\"lineChartOptions\"\n                [chartType]=\"lineChartType\"\n                (chartHover)=\"chartHovered($event)\"\n                (chartClick)=\"chartClicked($event)\"></canvas>\n        <div *ngIf=\"!settings.overlap\">\n            <canvas *ngIf=\"settings.showX\" baseChart\n                    [datasets]=\"[AllChartData[0]]\"\n                    [labels]=\"lineChartLabels\"\n                    [options]=\"lineChartOptions[0]\"\n                    [chartType]=\"lineChartType\"\n                    (chartHover)=\"chartHovered($event)\"\n                    (chartClick)=\"chartClicked($event)\"></canvas>\n            <canvas *ngIf=\"settings.showY\" baseChart\n                    [datasets]=\"[AllChartData[1]]\"\n                    [labels]=\"lineChartLabels\"\n                    [options]=\"lineChartOptions[1]\"\n                    [chartType]=\"lineChartType\"\n                    (chartHover)=\"chartHovered($event)\"\n                    (chartClick)=\"chartClicked($event)\"></canvas>\n            <canvas *ngIf=\"settings.showZ\" baseChart\n                    [datasets]=\"[AllChartData[2]]\"\n                    [labels]=\"lineChartLabels\"\n                    [options]=\"lineChartOptions[2]\"\n                    [chartType]=\"lineChartType\"\n                    (chartHover)=\"chartHovered($event)\"\n                    (chartClick)=\"chartClicked($event)\"></canvas>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"loading && ready\">\n    <p></p>\n    <div class=\"content\">\n        <div class=\"ui fluid placeholder\">\n            <div class=\"image header\">\n                <div class=\"medium line\"></div>\n                <div class=\"full line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"medium line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"full line\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n<!--</div>-->\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/admin/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {User} from '../../_models/user';\nimport {UserService} from '../../_services/user.service';\nimport {RespResult} from '../../_models/resp.result';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n    user: User;\n    updateForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n    showLoading = 'loading';\n    // date: string;\n\n    constructor(private formBuilder: FormBuilder,\n                private userService: UserService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.user = this.userService.getUser();\n        this.updateForm = this.formBuilder.group({\n            name: ['...', Validators.required],\n            company: ['...', Validators.required],\n            remarks: ['...', Validators.required],\n        });\n        if (!this.user) {\n            this.userService.getAll().pipe(first()).subscribe(users => {\n                this.user = users[0];\n                this.userService.setUser(this.user);\n                this.updateForm = this.formBuilder.group({\n                    name: [this.user.user.name, Validators.required],\n                    company: [this.user.user.company, Validators.required],\n                    remarks: [this.user.user.remarks, Validators.required],\n                });\n                this.loading = false;\n                this.showLoading = '';\n            });\n        } else {\n            // this.date = new Date(this.user.user['registerTime']).toLocaleString();\n            this.updateForm = this.formBuilder.group({\n                name: [this.user.user.name, Validators.required],\n                company: [this.user.user.company, Validators.required],\n                remarks: [this.user.user.remarks, Validators.required],\n            });\n            this.loading = false;\n            this.showLoading = '';\n        }\n    }\n\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.updateForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n            return;\n        }\n\n        const updateSettingJson = [\n            {\n                propName: 'name',\n                value: this.f.name.value,\n            },\n            {\n                propName: 'company',\n                value: this.f.company.value,\n            },\n            {\n                propName: 'remarks',\n                value: this.f.remarks.value,\n            }\n        ];\n\n        this.loading = true;\n        this.userService.updateSettings(JSON.stringify(updateSettingJson))\n            .pipe(first())\n            .subscribe({\n                next: (result: RespResult) => {\n                    // @ts-ignore\n                    console.log(`result.ok = ${result.result.ok}`);\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n        this.user.user.name = this.f.name.value;\n        this.user.user.company = this.f.company.value;\n        this.user.user.remarks = this.f.remarks.value;\n    }\n\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        {{user.user.name}}\n        <div class=\"sub header\">{{user.user.email}}</div>\n    </h2>\n</div>\n\n<div *ngIf=\"!user\" class=\"container\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        <div class=\"sub header\">Loading...</div>\n    </h2>\n</div>\n\n<form class=\"ui fluid form\" [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\" [ngClass]=\"showLoading\">\n    <div class=\"field\">\n        <div class=\"ui labeled input\">\n            <div class=\"ui label\">Name:</div>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [placeholder]=\"\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui labeled input\">\n            <div class=\"ui label\">Company:</div>\n            <input type=\"text\" formControlName=\"company\" class=\"form-control\" [placeholder]=\"\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui label large\">Remarks:</div>\n        <textarea formControlName=\"remarks\" class=\"form-control\"></textarea>\n<!--            <input type=\"text\"   [placeholder]=\"\">-->\n\n    </div>\n    <div class=\"field\">\n        <div class=\"ui left icon input\">\n            <button [disabled]=\"loading\" class=\"ui submit button\">\n                <span *ngIf=\"loading\" class=\"ui loader\"></span>\n                Update\n            </button>\n        </div>\n    </div>\n    <div class=\"ui negative message\" *ngIf=\"error\">\n        <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n        {{error}}\n    </div>\n</form>\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YourGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/user/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui container\">\n    <h1 class=\"ui header\">About</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from '../_models/user';\nimport {Admin} from '../_models/admin';\n\n@Component({\n  selector: 'app-user-frame',\n  templateUrl: './user-frame.component.html',\n  styleUrls: ['./user-frame.component.css']\n})\nexport class UserFrameComponent{\n\n  title = 'Feili Control';\n  currentUser: User;\n  currentAdminUser: Admin;\n\n  constructor(\n      private router: Router,\n      private authenticationService: AuthenticationService,\n      private adminauthenticationService: AdminAuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n  }\n\n  logout(): any {\n    this.authenticationService.logout();\n    this.router.navigate(['/user/login']);\n  }\n\n  adminLogout(): any {\n    this.adminauthenticationService.logout();\n    this.router.navigate(['/admin/login']);\n  }\n\n}\n","<div class=\"ui inverted fixed top menu\">\n    <div class=\"ui container\">\n        <div class=\"wppc\">\n            <div class=\"item\">\n                <i class=\"chess queen icon\"></i>\n            </div>\n        </div>\n        <div class=\"wppc\">\n            <div class=\"header item\">\n                Feili Control APP\n            </div>\n        </div>\n        <a class=\"item\" routerLink=\"/user/home\" routerLinkActive=\"active\">Home</a>\n        <a class=\"item\" routerLink=\"/user/application\" routerLinkActive=\"active\">Application</a>\n        <a class=\"item\" routerLink=\"/user/about\" routerLinkActive=\"active\">About</a>\n\n        <!--                <div class=\"right menu\">-->\n        <div class=\"phoneContent\">\n            <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                <div class=\"Grey ui button\">\n                    Sign out\n                </div>\n            </a>\n            <a class=\"ui item active\" routerLink=\"/user/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">\n                <div class=\"teal ui button\">\n                    Sign in\n                </div>\n            </a>\n        </div>\n        <!--                </div>-->\n\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                    <div class=\"Grey ui button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item active\" routerLink=\"/user/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">\n                    <div class=\"teal ui button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>\n<!--</div>-->\n\n\n<div class=\"bingcheng\">\n    <router-outlet></router-outlet>\n</div>\n\n\n<div class=\"ui inverted vertical footer segment\">\n    <div class=\"ui center aligned container\">\n        <div class=\"ui stackable inverted divided equal height stackable grid\">\n            <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">About</h4>\n                <div class=\"ui inverted link list\">\n                    <a href=\"#\" class=\"item\">Sitemap</a>\n                    <a href=\"#\" class=\"item\">Contact Us</a>\n                    <a href=\"#\" class=\"item\">Religious Ceremonies</a>\n                    <a href=\"#\" class=\"item\">Gazebo Plans</a>\n                </div>\n            </div>\n            <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">Services</h4>\n                <div class=\"ui inverted link list\">\n                    <a href=\"#\" class=\"item\">Banana Pre-Order</a>\n                    <a href=\"#\" class=\"item\">DNA FAQ</a>\n                    <a href=\"#\" class=\"item\">How To Access</a>\n                    <a href=\"#\" class=\"item\">Favorite X-Men</a>\n                </div>\n            </div>\n            <div class=\"seven wide column\">\n                <h4 class=\"ui inverted header\">Footer Header</h4>\n                <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </div>\n        </div>\n        <div class=\"ui section divider\"></div>\n        <img src=\"./assets/images/wave.png\" class=\"ui centered mini image\">\n        <div class=\"ui horizontal inverted small divided link list\">\n            <a class=\"item\" href=\"#\">Site Map</a>\n            <a class=\"item\" href=\"#\">Contact Us</a>\n            <a class=\"item\" href=\"#\">Terms and Conditions</a>\n            <a class=\"item\" href=\"#\">Privacy Policy</a>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YourGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/desktop/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import {Component, HostListener, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    deferredPrompt: any;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    @HostListener('window:beforeinstallprompt', ['$event'])\n    onbeforeinstallprompt(e: { preventDefault: () => void; }): any {\n        console.log(e);\n        // Prevent Chrome 67 and earlier from automatically showing the prompt\n        e.preventDefault();\n        // Stash the event so it can be triggered later.\n        this.deferredPrompt = e;\n        // this.showButton = true;\n    }\n\n    addToHomeScreen(): void {\n        // Hide the app provided install promotion\n        // hideMyInstallPromotion();\n        this.deferredPrompt.prompt();\n        // Wait for the user to respond to the prompt\n        this.deferredPrompt.userChoice\n            .then((choiceResult: { outcome: string; }) => {\n                if (choiceResult.outcome === 'accepted') {\n                    console.log('User accepted the A2HS prompt');\n                } else {\n                    console.log('User dismissed the A2HS prompt');\n                }\n                this.deferredPrompt = null;\n            });\n    }\n\n\n}\n","<div class=\"ui container\">\n    <h1 class=\"ui header center aligned\">Introduction</h1>\n    <button class=\"add-button\" (click)=\"addToHomeScreen()\" >Add to home screen</button>\n    <h2>Some description about Feili & Production</h2>\n    <div class=\"ui content segment\">\n\n        <div class=\"ui placeholder\">\n            <div class=\"image header\">\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n            </div>\n        </div>\n    </div>\n    <h2>Some introduction of our production</h2>\n    <div class=\"ui three column stackable grid\">\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"ui three cards\">\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://api.feili.openmc.cn',\n  // apiUrl: 'http://api.feili.omniai.org',\n  // apiUrl: 'http://175.24.189.35:4913',\n  // apiUrl: 'http://localhost:8000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-application',\n    templateUrl: './application.component.html',\n    styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n    activeRouter: number;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.setRouter(1);\n    }\n\n    setRouter(activeRouter: number): void {\n        this.activeRouter = activeRouter;\n    }\n\n}\n","<!--<p>application works!</p>-->\n\n<div class=\"ui two column doubling stackable grid container\">\n    <div class=\"four wide column\">\n        <div class=\"ui secondary vertical fluid menu\">\n            <a class=\"item\" routerLink=\"info\"  [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\" >\n                User info\n                <i class=\"gray user circle large icon\"></i>\n            </a>\n            <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n                Settings\n                <i class=\"gray whmcs large icon\"></i>\n            </a>\n            <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n                Equipment\n                <i class=\"gray stack exchange large icon\"></i>\n            </a>\n            <!--            <a class=\"item\">-->\n            <!--                Not defined-->\n            <!--                <i class=\"whmcs large icon\"></i>-->\n            <!--            </a>-->\n            <!--            <a class=\"item\">-->\n            <!--                Not defined-->\n            <!--                <i class=\"whmcs large icon\"></i>-->\n            <!--            </a>-->\n        </div>\n    </div>\n    <div class=\"twelve wide stretched column\">\n        <!--        <div class=\"ui segment\">-->\n        <!--            <div class=\"ui medium header\">This is the application page, below is the subpage:</div>-->\n        <router-outlet></router-outlet>\n        <!--        </div>-->\n\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\n\n\n@Component({\n    selector: 'app-sensor',\n    templateUrl: './sensor.component.html',\n    styleUrls: ['./sensor.component.css']\n})\nexport class SensorComponent implements OnInit {\n    sensorId: string;\n    range = new FormGroup({\n        start: new FormControl(),\n        end: new FormControl()\n    });\n    myDatePicker = new FormControl();\n    loading: boolean;\n    // range: FormGroup;\n    start: string;\n    end: string;\n\n    constructor(private route: ActivatedRoute,\n                private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit(): void {\n        this.loading = false;\n        this.sensorId = this.route.snapshot.paramMap.get('sensorId');\n        console.log(`This sensorId is ${this.sensorId}`);\n        this.range['start'] = new Date(Date.now() - 24 * 60 * 60 * 1000);\n        this.range['end'] = new Date();\n    }\n\n    onSubmit(): void {\n        this.start = this.range['start'].toISOString();\n        this.end = this.range['end'].toISOString();\n        console.log(`Start: ${this.start} end: ${this.end}`);\n    }\n\n    update(): void {\n    }\n}\n","<div class=\"ui backArrow container\">\n    <button class=\"mini ui teal labeled icon button\" [routerLink]=\"['../../equipment']\">\n        <i class=\"left arrow icon\"></i> Back\n    </button>\n</div>\n\n<p></p>\n\n<form class=\"ui form\" [formGroup]=\"range\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"ui two column doubling stackable grid container\">\n        <div class=\"column\">\n            <mat-form-field class=\"dateInputForm\">\n                <div class=\"ui grid\">\n                    <div class=\"twelve wide column\">\n                        <label>\n                            <input matInput [ngxMatDatetimePicker]=\"pickerFrom\" placeholder=\"From date & time\"\n                                   [(ngModel)]=\"range['start']\" [ngModelOptions]=\"{standalone: true}\">\n\n                        </label>\n                    </div>\n                    <div class=\"four wide column\">\n                        <mat-datepicker-toggle class=\"pickIcon\" matSuffix [for]=\"pickerFrom\"></mat-datepicker-toggle>\n                    </div>\n                </div>\n                <ngx-mat-datetime-picker #pickerFrom [enableMeridian]=\"true\"></ngx-mat-datetime-picker>\n                <div class=\"ui red message\" *ngIf=\"range.controls.start.hasError('notValid')\">Invalid start date</div>\n            </mat-form-field>\n        </div>\n        <div class=\"column\">\n            <mat-form-field class=\"dateInputForm\">\n                <div class=\"ui grid\">\n                    <div class=\"twelve wide column\">\n                        <label>\n                            <input matInput [ngxMatDatetimePicker]=\"pickerTo\" placeholder=\"To date & time\"\n                                   [(ngModel)]=\"range['end']\" [min]=\"range['start']\"\n                                   [ngModelOptions]=\"{standalone: true}\">\n                        </label>\n                    </div>\n                    <div class=\"four wide column\">\n                        <mat-datepicker-toggle class=\"pickIcon\" matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\n                    </div>\n                    <ngx-mat-datetime-picker #pickerTo [enableMeridian]=\"true\"></ngx-mat-datetime-picker>\n                </div>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"ui getButton container\">\n        <button [disabled]=\"loading\" class=\"ui fluid small teal submit button\">\n            <span *ngIf=\"loading\" class=\"ui loader\"></span>\n            Get Data\n        </button>\n    </div>\n\n</form>\n\n<!--<p>Selected range: {{range.value | json}} {{range['start'].value | json}} {{range['end'].value | json}}</p>-->\n\n<div class=\"ui container\">\n    <!--    <div >Start: {{start}}, end: {{end}}</div>-->\n    <app-data-get-range [sensorId]=\"sensorId\" [start]=\"start\" [end]=\"end\"></app-data-get-range>\n</div>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {User} from 'src/app/_models/user';\nimport {UserService} from 'src/app/_services/user.service';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n    selector: 'app-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n    loading = false;\n    user: User;\n    date: string;\n\n    constructor(private userService: UserService,\n                private router: Router,\n                private authenticationService: AuthenticationService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.user = this.userService.getUser();\n        if (this.user){\n            this.loading = false;\n            this.date = new Date(this.user.user['registerTime']).toLocaleString();\n            return;\n        }\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.user = users[0];\n            this.date = new Date(users[0].user['registerTime']).toLocaleString();\n            this.userService.setUser(this.user);\n        });\n    }\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/desktop/login']);\n    }\n\n}\n","<!--<div class=\"card-body\">-->\n<div *ngIf=\"loading\" class=\"container\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        <div class=\"sub header\">Loading...</div>\n    </h2>\n    <div class=\"ui container\">\n        <div class=\"ui tall stacked segments\">\n            <div class=\"ui segment\">\n                <i class=\"building inline icon link\">&nbsp;Company</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"calendar alternate icon\">&nbsp;Register&nbsp;Time</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"registered icon\">&nbsp;Registration&nbsp;Code</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"comment alternate icon\">&nbsp;Remarks</i>\n                <div class=\"container\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment phoneContent\">\n                <a class=\"ui item\" (click)=\"logout()\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"user\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        {{user.user.name}}\n        <div class=\"sub header\">{{user.user.email}}</div>\n    </h2>\n    <div class=\"ui container\">\n        <div class=\"ui tall stacked segments\">\n            <div class=\"ui segment\">\n                <i class=\"building inline icon link\">&nbsp;Company</i>\n                <div class=\"content\">\n                    {{user.user.company}}\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"calendar alternate icon\">&nbsp;Register&nbsp;Time</i>\n                <div class=\"content\">\n                    {{date}}\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"registered icon\">&nbsp;Registration&nbsp;Code</i>\n                <div class=\"content\">\n                    <a>{{user.user.registrationCode}}</a>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"comment alternate icon\">&nbsp;Remarks</i>\n                <div class=\"ui form\">\n                    <div class=\"container\" disabled=\"true\">\n                        <textarea>{{user.user.remarks}}</textarea>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ui segment phoneContent\">\n                <a class=\"ui item\" (click)=\"logout()\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {Settings} from '../../_models/settings';\nimport {Sensor} from '../../_models/sensor';\nimport {RespResult} from 'src/app/_models/resp.result';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {SensorService} from '../../_services/sensor.service';\n\n// import {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n    selector: 'app-sensor-settings',\n    templateUrl: './sensor-settings.component.html',\n    styleUrls: ['./sensor-settings.component.css']\n})\nexport class SensorSettingsComponent implements OnInit {\n    @Input() sensor: Sensor;\n    settings: Settings;\n    updateForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n    // checked: {\n    //     showX: boolean;\n    // };\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private sensorService: SensorService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.settings = this.sensor.settings;\n\n        this.updateForm = this.formBuilder.group({\n            showX: [this.settings.showX, Validators.required],\n            showY: [this.settings.showY, Validators.required],\n            showZ: [this.settings.showZ, Validators.required],\n            overlap: [this.settings.overlap, Validators.required],\n            freqLow: [this.settings.freqLow, Validators.required],\n            freqHigh: [this.settings.freqHigh, Validators.required],\n            name: [this.sensor.name, Validators.required],\n            class: [this.sensor.class, Validators.required],\n            location: [this.sensor.location, Validators.required],\n            dt: [this.settings.dt, Validators.required],\n            dataNum: [this.settings.dataNum, Validators.required],\n        });\n    }\n\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.updateForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n            return;\n        }\n\n        const updateSettingJson = [\n            {\n                propName: 'name',\n                value: this.f.name.value,\n            },\n            {\n                propName: 'class',\n                value: this.f.class.value,\n            },\n            {\n                propName: 'location',\n                value: this.f.location.value,\n            },\n            {\n                propName: 'settings',\n                value: {\n                    showX: this.f.showX.value,\n                    showY: this.f.showY.value,\n                    showZ: this.f.showZ.value,\n                    overlap: this.f.overlap.value,\n                    freqLow: this.f.freqLow.value,\n                    freqHigh: this.f.freqHigh.value,\n                    dt: this.f.dt.value,\n                    dataNum: this.f.dataNum.value,\n                }\n            }\n        ];\n\n        this.loading = true;\n        this.sensorService.updateSettings(this.sensor._id, JSON.stringify(updateSettingJson))\n            .pipe(first())\n            .subscribe({\n                next: (result: RespResult) => {\n                    // @ts-ignore\n                    console.log(`result.ok = ${result.result.ok}`);\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n        this.settings.showX = this.f.showX.value;\n        this.settings.showY = this.f.showY.value;\n        this.settings.showZ = this.f.showZ.value;\n        this.settings.overlap = this.f.overlap.value;\n        this.settings.freqLow = this.f.freqLow.value;\n        this.settings.freqHigh = this.f.freqHigh.value;\n        this.sensor.name = this.f.name.value;\n        this.sensor.location = this.f.location.value;\n        this.sensor.class = this.f.class.value;\n        this.settings.dt = this.f.dt.value;\n        this.settings.dataNum = this.f.dataNum.value;\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n    // check(item: string): void {\n    //     if (item === 'showX') {\n    //         this.settings.showX = !this.settings.showX;\n    //         console.log('clicked showX: ' + this.settings.showX);\n    //     } else if (item === 'showY') {\n    //         this.settings.showY = !this.settings.showY;\n    //         console.log('clicked showY: ' + this.settings.showY);\n    //     } else if (item === 'showZ') {\n    //         this.settings.showZ = !this.settings.showZ;\n    //         console.log('clicked showZ: ' + this.settings.showZ);\n    //     } else if (item === 'overlap') {\n    //         this.settings.overlap = !this.settings.overlap;\n    //         console.log('clicked overlap: ' + this.settings.overlap);\n    //     }\n    // }\n    // check(item: string): void {\n    // }\n\n}\n","<!--suppress ALL -->\n<form class=\"ui form\" [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"ui compact horizontal segments\">\n        <div class=\"ui compact segment\">\n            <div>X</div>\n            <div class=\"ui slider checkbox\">\n                <input type=\"checkbox\" formControlName=\"showX\" class=\"form-control\"\n                       [checked]=\"settings.showX\">\n                <label></label>\n            </div>\n        </div>\n        <div class=\"ui compact segment\">\n            <div>Y</div>\n            <div class=\"ui slider checkbox\">\n                <input type=\"checkbox\" formControlName=\"showY\" class=\"form-control\"\n                       [checked]=\"settings.showY\">\n                <label></label>\n            </div>\n        </div>\n        <div class=\"ui compact segment\">\n            <div>Z</div>\n            <div class=\"ui slider checkbox\">\n                <input type=\"checkbox\" formControlName=\"showZ\" class=\"form-control\"\n                       [checked]=\"settings.showZ\">\n                <label></label>\n            </div>\n        </div>\n        <div class=\"ui compact segment\">\n            <div>Overlap</div>\n            <div class=\"ui slider checkbox\">\n                <input type=\"checkbox\" formControlName=\"overlap\" class=\"form-control\"\n                       [checked]=\"settings.overlap\">\n                <label></label>\n            </div>\n        </div>\n    </div>\n    <!--    <div class=\"inline field\">-->\n    <!--        <div class=\"ui slider checkbox\">-->\n    <!--            <input type=\"checkbox\" formControlName=\"showX\" class=\"form-control\"-->\n    <!--                   [checked]=\"settings.showX\">-->\n    <!--            <label>showX state: {{settings.showX}}</label>-->\n    <!--        </div>-->\n    <!--    </div>-->\n    <!--    <div class=\"inline field\">-->\n    <!--        <div class=\"teal ui slider checkbox\">-->\n    <!--            <input type=\"checkbox\" formControlName=\"showY\" class=\"form-control\"-->\n    <!--                   [checked]=\"settings.showY\">-->\n    <!--            <label>showY state: {{settings.showY}}</label>-->\n    <!--        </div>-->\n    <!--    </div>-->\n    <!--    <div class=\"inline field\">-->\n    <!--        <div class=\"ui slider checkbox\">-->\n    <!--            <input type=\"checkbox\" formControlName=\"showZ\" class=\"form-control\"-->\n    <!--                   [checked]=\"settings.showZ\">-->\n    <!--            <label>showZ state: {{settings.showZ}}</label>-->\n    <!--        </div>-->\n    <!--    </div>-->\n    <!--    <div class=\"inline field\">-->\n    <!--        <div class=\"ui slider checkbox\">-->\n    <!--            <input type=\"checkbox\" formControlName=\"overlap\" class=\"form-control\"-->\n    <!--                   [checked]=\"settings.overlap\">-->\n    <!--            <label>overlap state: {{settings.overlap}}</label>-->\n    <!--        </div>-->\n    <!--    </div>-->\n    <div class=\"two fields\">\n        <div class=\"field\">\n            <div class=\"two fields\">\n                <div class=\"field\">\n                    <label>dt: </label>\n                    <input type=\"text\" formControlName=\"dt\" class=\"form-control\" [placeholder]=\"sensor['dt']\">\n                </div>\n                <div class=\"field\">\n                    <label>Data Number:</label>\n                    <input type=\"text\" formControlName=\"dataNum\" class=\"form-control\" [placeholder]=\"sensor['dataNum']\">\n                </div>\n            </div>\n        </div>\n        <div class=\"field\">\n            <div class=\"two fields\">\n                <div class=\"field\">\n                    <label>Low Frequency: </label>\n                    <input type=\"text\" formControlName=\"freqLow\" class=\"form-control\" placeholder=\"Lower bound (Hz)\">\n                </div>\n                <div class=\"field\">\n                    <label>High Frequency: </label>\n                    <input type=\"text\" formControlName=\"freqHigh\" class=\"form-control\" placeholder=\"Upper bound (Hz)\">\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"three fields\">\n        <div class=\"field\">\n            <label>Name: </label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [placeholder]=\"sensor['name']\">\n        </div>\n        <div class=\"field\">\n            <label>Class: </label>\n            <input type=\"text\" formControlName=\"class\" class=\"form-control\" [placeholder]=\"sensor['class']\">\n        </div>\n        <div class=\"field\">\n            <label>Location: </label>\n            <input type=\"text\" formControlName=\"location\" class=\"form-control\" [placeholder]=\"sensor['location']\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui left icon input\">\n            <button *ngIf=\"!loading\" class=\"ui mini fluid teal submit button\">\n                Update\n            </button>\n            <button *ngIf=\"loading\" [disabled]=\"loading\" class=\"ui mini fluid teal loading button\">Updating</button>\n        </div>\n    </div>\n    <div class=\"ui negative message\" *ngIf=\"error\">\n        <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n        {{error}}\n    </div>\n</form>\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from './_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from './_models/user';\nimport {Admin} from './_models/admin';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'routing-app';\n  currentUser: User;\n  currentAdminUser: Admin;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private adminauthenticationService: AdminAuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n  }\n\n  logout(): any {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  adminLogout(): any {\n    this.adminauthenticationService.logout();\n    this.router.navigate(['/admin/login']);\n  }\n}\n","\n<!--<div class=\"ui inverted fixed top menu\">-->\n<!--    <div class=\"ui container\">-->\n<!--        <div class=\"wppc\">-->\n<!--            <div class=\"item\">-->\n<!--                <i class=\"chess queen icon\"></i>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"wppc\">-->\n<!--            <div class=\"header item\">-->\n<!--                Feili Control APP-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <a class=\"item\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a>-->\n<!--        <a class=\"item\" routerLink=\"/application\" routerLinkActive=\"active\">Application</a>-->\n<!--        <a class=\"item\" routerLink=\"/about\" routerLinkActive=\"active\">About</a>-->\n\n<!--&lt;!&ndash;                <div class=\"right menu\">&ndash;&gt;-->\n<!--        <div class=\"phoneContent\">-->\n<!--            <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">-->\n<!--                <div class=\"Grey ui button\">-->\n<!--                    Sign out-->\n<!--                </div>-->\n<!--            </a>-->\n<!--            <a class=\"ui item active\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">-->\n<!--                <div class=\"teal ui button\">-->\n<!--                    Sign in-->\n<!--                </div>-->\n<!--            </a>-->\n<!--        </div>-->\n<!--&lt;!&ndash;                </div>&ndash;&gt;-->\n\n<!--        <div class=\"right menu\">-->\n<!--            <div class=\"deskContent\">-->\n<!--                <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser && ! currentAdminUser\">-->\n<!--                    <div class=\"Grey ui button\">-->\n<!--                        <i class=\"sign-out icon\"></i>Sign out-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--                <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">-->\n<!--                    <div class=\"Grey ui button\">-->\n<!--                        <i class=\"sign-out icon\"></i>Admin sign out-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--                <a class=\"ui item active\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser && ! currentAdminUser\">-->\n<!--                    <div class=\"teal ui button\">-->\n<!--                        <i class=\"sign-in icon\"></i>Sign in-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--            </div>-->\n<!--        </div>-->\n\n<!--    </div>-->\n<!--</div>-->\n<!--&lt;!&ndash;</div>&ndash;&gt;-->\n\n\n<!--<div class=\"bingcheng\">-->\n<!--    <router-outlet></router-outlet>-->\n<!--</div>-->\n\n\n<!--<div class=\"ui inverted vertical footer segment\">-->\n<!--    <div class=\"ui center aligned container\">-->\n<!--        <div class=\"ui stackable inverted divided equal height stackable grid\">-->\n<!--            <div class=\"three wide column\">-->\n<!--                <h4 class=\"ui inverted header\">About</h4>-->\n<!--                <div class=\"ui inverted link list\">-->\n<!--                    <a href=\"#\" class=\"item\">Sitemap</a>-->\n<!--                    <a href=\"#\" class=\"item\">Contact Us</a>-->\n<!--                    <a href=\"#\" class=\"item\">Religious Ceremonies</a>-->\n<!--                    <a href=\"#\" class=\"item\">Gazebo Plans</a>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div class=\"three wide column\">-->\n<!--                <h4 class=\"ui inverted header\">Services</h4>-->\n<!--                <div class=\"ui inverted link list\">-->\n<!--                    <a href=\"#\" class=\"item\">Banana Pre-Order</a>-->\n<!--                    <a href=\"#\" class=\"item\">DNA FAQ</a>-->\n<!--                    <a href=\"#\" class=\"item\">How To Access</a>-->\n<!--                    <a href=\"#\" class=\"item\">Favorite X-Men</a>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div class=\"seven wide column\">-->\n<!--                <h4 class=\"ui inverted header\">Footer Header</h4>-->\n<!--                <p>Extra space for a call to action inside the footer that could help re-engage users.</p>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"ui section divider\"></div>-->\n<!--        <img src=\"./assets/images/wave.png\" class=\"ui centered mini image\">-->\n<!--        <div class=\"ui horizontal inverted small divided link list\">-->\n<!--            <a class=\"item\" href=\"#\">Site Map</a>-->\n<!--            <a class=\"item\" href=\"#\">Contact Us</a>-->\n<!--            <a class=\"item\" href=\"#\">Terms and Conditions</a>-->\n<!--            <a class=\"item\" href=\"#\">Privacy Policy</a>-->\n<!--        </div>-->\n<!--    </div>-->\n<!--</div>-->\n\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { AuthenticationService } from 'src/app/_services/admin.authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add auth header with jwt if user is logged in and request is to the api url\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    console.log(`Here we use JWT, currentUser.token = ${currentUser}`);\n    if (isLoggedIn && isApiUrl) {\n      console.log(`isLoggedIn && isApiUrl`);\n      console.log(`Here we use JWT, currentUser.token = ${currentUser.token}`);\n      request = request.clone({\n        setHeaders: {\n          'Admin-Authorization': `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n    selector: 'app-admin-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css']\n})\nexport class AdminSignupComponent implements OnInit {\n    signupForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n        // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n        const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}/;\n        const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n        // this.signupForm = this.formBuilder.group({\n        //     name: ['', Validators.required],\n        //     email: ['', Validators.required, Validators.pattern(mailReg)],\n        //     password: ['', Validators.required],\n        //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n        // });\n        this.signupForm = this.formBuilder.group({\n            name: new FormControl('', Validators.compose([\n                Validators.required, Validators.minLength(3), Validators.maxLength(16)])),\n            email: new FormControl('', Validators.compose([\n                Validators.required, Validators.email])),\n            password: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(passwordReg),\n                Validators.minLength(8),\n                Validators.maxLength(16)]))\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.signupForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.signupForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.signup(this.f.name.value, this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/admin/login';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n\n}\n","<!--<p>signup works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user plus icon\"></i>\n      <div class=\"content\">\n        Admin sign up\n      </div>\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"address book icon\"></i>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"User name\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            <div *ngIf=\"f.name.errors.minlength\">Name should be at least 2 characters</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"envelope icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern || f.password.errors.minlength || f.password.errors.maxlength\">\n              Password should be 8-16 characters with combination of letters/numbers/symbols\n            </div>\n          </div>\n        </div>\n\n<!--        <div class=\"field\">-->\n<!--          <div class=\"ui left icon input\">-->\n<!--            <i class=\"key icon\"></i>-->\n<!--            <input type=\"text\" formControlName=\"code\" class=\"form-control\"-->\n<!--                   placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"-->\n<!--                   [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>-->\n<!--          </div>-->\n<!--          <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">-->\n<!--            <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>-->\n<!--            <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>-->\n<!--          </div>-->\n<!--        </div>-->\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Signup\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a strong password.</li>\n            <li>Your password must be at least 6 characters.</li>\n\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n    <div class=\"ui message\">\n      Already have an account?   <a routerLink=\"/admin/login\">Sign In</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\nimport {User} from 'src/app/_models/user';\nimport {RespResult} from '../_models/resp.result';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n    user: User;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAll(): any {\n        console.log('running get all users');\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    getUser(): any {\n        if (this.user) {\n            return this.user;\n        }\n        return null;\n    }\n\n    setUser(user: User): void {\n        this.user = user;\n    }\n\n    updateSettings(settings: string): any {\n        console.log('Start update settings');\n        return this.http.put<RespResult>(`${environment.apiUrl}/users/update`, settings);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {SensorInfo} from 'src/app/_models/sensor.info';\nimport {Sensor} from 'src/app/_models/sensor';\nimport {SensorService} from 'src/app/_services/sensor.service';\n// import { FilterPipe } from '../../_helpers/filter.pipe';\n\n@Component({\n    selector: 'app-equipment',\n    templateUrl: './equipment.component.html',\n    styleUrls: ['./equipment.component.css']\n})\nexport class EquipmentComponent implements OnInit {\n    loading = true;\n    sensorInfo: SensorInfo;\n    sensors: Sensor[];\n    sensorNumber: number;\n    searchClass: string;\n    // sensorId: string;\n    // chart: boolean;\n\n    constructor(private sensorService: SensorService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.sensorInfo = this.sensorService.getSensorInfo();\n        if (this.sensorInfo) {\n            const sensorskey = 'sensors';\n            this.sensors = this.sensorInfo[sensorskey];\n            const numberkey = 'count';\n            this.sensorNumber = this.sensorInfo[numberkey];\n            this.loading = false;\n        }\n        else {\n            this.updateInfo();\n        }\n    }\n\n    updateInfo(): void {\n        this.loading = true;\n        this.sensorService.getAll().pipe(first()).subscribe(sensorInfo => {\n            console.log(sensorInfo);\n            this.sensorInfo = sensorInfo;\n            this.sensorService.setSensorInfo(sensorInfo);\n            const sensorskey = 'sensors';\n            this.sensors = sensorInfo[sensorskey];\n            const numberkey = 'count';\n            this.sensorNumber = sensorInfo[numberkey];\n            this.loading = false;\n        });\n    }\n\n    showChart(sensor): void {\n        // @ts-ignore\n        sensor.showChart = !sensor.showChart;\n    }\n\n    showSettings(sensor): void {\n        sensor.showSettings = !sensor.showSettings;\n    }\n\n    showId(sensor): void {\n        sensor.showId = sensor.showId !== true;\n    }\n}\n","<!--<p>equipment works!</p>-->\n<div class=\"ui two column doubling stackable grid container\">\n    <div class=\"column\">\n        <div class=\"ui left aligned mini labeled button\" tabindex=\"0\">\n            <div *ngIf=\"!loading\" class=\"mini ui teal button\" (click)=\"updateInfo()\">\n                <i class=\"redo icon\"></i> update\n            </div>\n            <button *ngIf=\"loading\" class=\"mini ui teal loading button\">Loading</button>\n            <a class=\"ui basic teal left pointing label\">\n                # Equipment: {{sensorNumber}}\n            </a>\n        </div>\n    </div>\n    <div class=\"column\">\n        <div class=\"ui mini fluid icon input\">\n            <input type=\"search\" [(ngModel)] = searchClass placeholder=\"Names / Classes / Locations ...\">\n            <i class=\"search icon\"></i>\n        </div>\n    </div>\n</div>\n\n<p></p>\n\n<div *ngIf=\"loading\">\n    <div class=\"ui raised link attached card\">\n        <div class=\"ui fluid placeholder\">\n            <div class=\"image header\">\n                <div class=\"medium line\"></div>\n                <div class=\"full line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"full line\"></div>\n                <div class=\"medium line\"></div>\n                <div class=\"medium line\"></div>\n                <div class=\"medium line\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!loading\">\n    <div *ngFor=\"let sensor of sensors | FilterPipe: searchClass\">\n        <div class=\"ui raised link attached card\">\n            <div class=\"content\">\n                <div class=\"header\">\n                    <b (dblclick)=\"showId(sensor)\">\n                        {{sensor[\"name\"]}}\n                    </b>\n                    <button class=\"mini ui gray button\" *ngIf=\"!sensor['valid']\">Not Validated</button>\n                    <button class=\"mini ui teal right labeled icon button\" *ngIf=\"sensor['valid']\"\n                            [routerLink]=\" ['../sensor', sensor._id ]\">\n                        <i class=\"right arrow icon\"></i>\n                        Details\n                    </button>\n                </div>\n                <div class=\"meta\">\n                    <p *ngIf=\"sensor['showId']\"><b>Cheap Id: </b><font face=\"monospace\">{{sensor[\"_id\"]}}</font></p>\n                    <p *ngIf=\"sensor['showId']\"><b>Mac Address: </b> <font\n                            face=\"monospace\">{{sensor[\"mac\"].replaceAll(\"-\", \":\")}}</font></p>\n                    <p><b>Model: </b><font face=\"monospace\">{{sensor[\"model\"]}}</font></p>\n                </div>\n                <div class=\"description\">\n                    <p class=\"category\" *ngIf=\"sensor['valid']\"><b>Class: </b>{{sensor[\"class\"]}}</p>\n                    <p class=\"category\" *ngIf=\"sensor['valid']\"><b>Location: </b>{{sensor[\"location\"]}}</p>\n                </div>\n            </div>\n            <div class=\"content\" *ngIf=\"sensor['showChart']||sensor['showSettings']\">\n                <div class=\"content\">\n                    <app-data-display [sensor]=\"sensor\" *ngIf=\"sensor['showChart']\"></app-data-display>\n                </div>\n                <div class=\"content\">\n                    <app-sensor-settings [sensor]=\"sensor\" *ngIf=\"sensor['showSettings']\"></app-sensor-settings>\n                </div>\n            </div>\n            <div class=\"extra content\" *ngIf=\"sensor['valid']\">\n                <div class=\"right floated author\">\n                    <i class=\"chart line large icon\" (click)=\"showChart(sensor)\"></i>\n                    <i class=\"cog large icon\" (click)=\"showSettings(sensor)\"></i>\n                </div>\n            </div>\n        </div>\n        <p></p>\n    </div>\n</div>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n    NgxMatTimepickerModule\n} from '@angular-material-components/datetime-picker';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {LoginComponent} from './login/login.component';\nimport {ErrorInterceptor} from './_helpers/error.interceptor';\nimport {JwtInterceptor} from './_helpers/jwt.interceptor';\nimport {JwtInterceptor as AdminJwtInterceptor} from './_helpers/admin.jwt.interceptor';\nimport {SignupComponent} from './signup/signup.component';\nimport {ApplicationComponent} from './private-components/application/application.component';\nimport {AboutComponent} from './about/about.component';\nimport {HomeComponent} from './home/home.component';\nimport {EquipmentComponent} from './private-components/equipment/equipment.component';\nimport {SettingsComponent} from './private-components/settings/settings.component';\nimport {InfoComponent} from './private-components/info/info.component';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {DataGetOneComponent} from './private-components/data-get-one/data-get-one.component';\nimport {SensorSettingsComponent} from './private-components/sensor-settings/sensor-settings.component';\nimport {SensorComponent} from './private-components/sensor/sensor.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {DataGetRangeComponent} from './private-components/data-get-range/data-get-range.component';\nimport {DataChartComponent} from './private-components/data-chart/data-chart.component';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\nimport {AdminLoginComponent} from './admin-components/login/login.component';\nimport {AdminSignupComponent} from './admin-components/signup/signup.component';\nimport {AdminControlComponent} from './admin-components/admin-control/admin-control.component';\nimport {AdminHomeComponent} from './admin-components/admin-home/admin-home.component';\nimport {UserFrameComponent} from './user-frame/user-frame.component';\nimport {AdminAddCodeComponent} from './admin-components/admin-add-code/admin-add-code.component';\nimport {DesktopApplicationComponent} from './desktop-application/desktop-application.component';\nimport {FilterPipe} from './_helpers/filter.pipe';\nimport {ChartsModule} from 'ng2-charts';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent,\n        LoginComponent,\n        SignupComponent,\n        ApplicationComponent,\n        AboutComponent,\n        HomeComponent,\n        EquipmentComponent,\n        SettingsComponent,\n        InfoComponent,\n        DataGetOneComponent,\n        SensorSettingsComponent,\n        SensorComponent,\n        DataGetRangeComponent,\n        DataChartComponent,\n        AdminLoginComponent,\n        AdminSignupComponent,\n        AdminControlComponent,\n        AdminHomeComponent,\n        UserFrameComponent,\n        AdminAddCodeComponent,\n        DesktopApplicationComponent,\n        FilterPipe,\n    ],\n    imports: [\n        ChartsModule,\n        BrowserModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        BrowserAnimationsModule,\n        // MatButtonModule,\n        NgxMatDatetimePickerModule,\n        NgxMatNativeDateModule,\n        NgxMatTimepickerModule,\n        FormsModule,\n        MatInputModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production})\n    ],\n    providers: [\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: AdminJwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n        {provide: LocationStrategy, useClass: HashLocationStrategy},\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n    selector: 'app-admin-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/admin/control']);\n        }\n    }\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            email: ['admin@openmc.cn', Validators.compose([\n                Validators.required, Validators.email])],\n            password: ['password4admin', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.loginForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/admin/control';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<!--<p>login works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user icon\"></i>\n        Admin sign in\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"user icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Sign In\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a right password.</li>\n            <li>You can sign up if you are a new user.</li>\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n\n    <div class=\"ui message\">\n      New to us?   <a routerLink=\"/admin/signup\">Sign Up</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Component, OnInit, Input} from '@angular/core';\n// import {first} from 'rxjs/operators';\n// import {SensorInfo} from '../../_models/sensor.info';\nimport {Sensor} from '../../_models/sensor';\nimport {DataService} from '../../_services/data.service';\nimport {DataPoints} from 'src/app/_models/data.points';\n// import {environment} from '../../../environments/environment';\n\n@Component({\n    selector: 'app-data-display',\n    templateUrl: './data-get-one.component.html',\n    styleUrls: ['./data-get-one.component.css']\n})\nexport class DataGetOneComponent implements OnInit {\n    @Input() sensor: Sensor;\n    sensorId: string;\n    _id: string;\n    time: string;\n    data: [[number]];\n    // sensor: Sensor;\n    dataPoints: DataPoints;\n    loading: boolean;\n    dataPointId: string;\n    emptyData: boolean;\n\n    constructor(private dataService: DataService) {\n    }\n\n    updateChart(): void {\n        this.ngOnInit();\n    }\n\n    ngOnInit(): void {\n        this.sensorId = this.sensor._id;\n        this.emptyData = true;\n        this.loading = true;\n        console.log(`Start query for sensorId: ${this.sensorId}`);\n        this.dataService.getRecentOne(this.sensorId).subscribe(dataInfo => {\n            // this.dataInfo = dataInfo;\n            console.log(dataInfo);\n            // const datapointsKey = 'Datapoints';\n            // dataInfo = dataInfo[datapointsKey];\n            const cnt = 'count';\n            console.log(`dataInfo[cnt]: ${dataInfo[cnt]}`);\n            if (!dataInfo[cnt]) {\n                this.loading = false;\n                return false;\n            }\n\n            const dps = 'Datapoints';\n            const id = '_id';\n            const dataPointId = dataInfo[dps][0][id];\n            this._id = dataPointId;\n            this.time = dataInfo[dps][0]['time'];\n            this.time = new Date(this.time).toLocaleString();\n            console.log(`Start get data with dataPointId: ${dataPointId}`);\n            this.dataPointId = dataPointId;\n            // this.dataService.getData(dataPointId).subscribe(dataPoints => {\n            //     console.log(dataPoints);\n            //     const dptKey = 'dataPoint';\n            //     this.dataPoints = dataPoints[dptKey];\n            //     const datakey = 'data';\n            //     this.data = this.dataPoints[datakey];\n            //     const timekey = 'time';\n            //     this.time = this.dataPoints[timekey];\n            //     const _idkey = 'time';\n            //     this._id = this.dataPoints[_idkey];\n            // });\n            this.emptyData = false; // Show data because it's not empty\n            this.loading = false; // this must be after emptyData, or it will flash\n        });\n    }\n}\n\n\n","<div class=\"ui fluid card\">\n    <div class=\"content\">\n        <!--        <button (click)=\"updateChart()\">update chart</button>-->\n        <button *ngIf=\"!loading\" class=\"circular ui icon button\" (click)=\"updateChart()\">\n            <i class=\"icon sync\"></i>  Update\n        </button>\n        <button *ngIf=\"loading\" class=\"circular ui loading button\" (click)=\"updateChart()\">\n            Updating\n        </button>\n        <!--        <div class=\"ui items\">-->\n        <!--            <div class=\"item\">-->\n        <!--                <button class=\"circular ui icon button\" (click)=\"updateChart()\">-->\n        <!--                    <i class=\"icon sync\"></i>-->\n        <!--                </button>-->\n        <!--                <div class=\"content\">-->\n        <!--                    <a>Time: {{time}}</a>-->\n        <!--                    <div class=\"description\">-->\n        <!--                        Id: {{_id}}-->\n        <!--                    </div>-->\n        <!--                </div>-->\n        <!--            </div>-->\n        <!--        </div>-->\n\n        <app-data-chart *ngIf=\"!emptyData\" [dataPointId]=\"dataPointId\"></app-data-chart>\n\n        <div *ngIf=\"emptyData&&!loading\">\n            <div class=\"ui comments\">\n                <div class=\"comment\">\n                    <a class=\"avatar\">\n                        <i class=\"teal exclamation circle large icon\"></i>\n                    </a>\n                    <div class=\"content\">\n                        <a class=\"author\">Database is empty</a>\n                        <div class=\"metadata\">\n                            <div class=\"date\">0 data found</div>\n                        </div>\n                        <div class=\"text\">\n                            Please use the sensor for the first time and gather data.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"loading\">\n            <div class=\"ui fluid placeholder\">\n                <div class=\"image header\">\n                    <div class=\"medium line\"></div>\n                    <div class=\"full line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<p></p>\n","import {Component, OnInit} from '@angular/core';\n\nimport {AuthenticationService} from '../_services/authentication.service';\nimport {User} from '../_models/user';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-desktop-application',\n    templateUrl: './desktop-application.component.html',\n    styleUrls: ['./desktop-application.component.css']\n})\nexport class DesktopApplicationComponent implements OnInit {\n    activeRouter: number;\n    title = 'Feili Control';\n    currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    ngOnInit(): void {\n    }\n\n    setRouter(activeRouter: number): void {\n        this.activeRouter = activeRouter;\n    }\n\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/desktop/login']);\n    }\n}\n","<!--<p>application works!</p>-->\n\n<!--<div class=\"ui two column doubling stackable grid container\">-->\n<!--    <div class=\"four wide column\">-->\n<div class=\"deskContent\">\n    <div class=\"ui vertical inverted sidebar menu left visible\">\n        <div class='item'>\n            <a><b> </b></a>\n        </div>\n        <div class='item'>\n            <a class=\"ui logo icon image\">\n                <img src=\"assets/images/wave.png\">\n            </a>\n            <a>\n                <b>Feili Control</b>\n            </a>\n        </div>\n\n        <a class=\"item\" routerLink=\"info\" [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\">\n            User info\n            <i class=\"gray user circle large icon\"></i>\n        </a>\n        <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n            Settings\n            <i class=\"gray whmcs large icon\"></i>\n        </a>\n        <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n            Equipment\n            <i class=\"gray stack exchange large icon\"></i>\n        </a>\n        <!--            <a class=\"item\">-->\n        <!--                Not defined-->\n        <!--                <i class=\"whmcs large icon\"></i>-->\n        <!--            </a>-->\n        <!--            <a class=\"item\">-->\n        <!--                Not defined-->\n        <!--                <i class=\"whmcs large icon\"></i>-->\n        <!--            </a>-->\n        <div class='item'>\n            <a><b> </b></a>\n        </div>\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item\" routerLink=\"/desktop/login\" *ngIf=\"!currentUser\">\n                    <div class=\"teal ui fluid button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n<!--    </div>-->\n<!--    <div class=\"twelve wide stretched column\">-->\n<!--        <div class=\"ui segment\">-->\n<!--            <div class=\"ui medium header\">This is the application page, below is the subpage:</div>-->\n\n\n<div class=\" dimmed\">\n    <!--    <p></p>-->\n    <div class=\"ui container\">\n        <div class=\"main ui container\">\n            <!--        <p></p>-->\n            <div style=\"color:white\"><b>Designed by openmc.cn</b></div>\n            <router-outlet></router-outlet>\n            <div style=\"color:white\"><b>Bingcheng Hu, 2021.9.1</b></div>\n            <!--        <p></p>-->\n            <div class=\"phoneContent\">\n                <div style=\"color:white\"><b>Powered by Feili Electron</b></div>\n                <div style=\"color:white\"><b>http://www.shfeili.com/</b></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--    </div>-->\n<!--</div>-->\n<div class=\"phoneContent\">\n    <div class=\"ui mini labeled icon inverted three item bottom fixed menu\">\n        <a class=\"item\" routerLink=\"info\" [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\">\n            <i class=\"gray user circle icon\"></i>\n            User\n        </a>\n        <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n            <i class=\"gray whmcs icon\"></i>\n            Settings\n        </a>\n        <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n            <i class=\"gray stack exchange icon\"></i>\n            Equipment\n        </a>\n    </div>\n</div>\n","import {Component, OnInit, Input, OnChanges, SimpleChanges} from '@angular/core';\n\n// import {Sensor} from '../../_models/sensor';\nimport {DataService} from '../../_services/data.service';\n// import {DataPoints} from 'src/app/_models/data.points';\nimport {DataPoint} from 'src/app/_models/data.point';\n\n@Component({\n    selector: 'app-data-get-range',\n    templateUrl: './data-get-range.component.html',\n    styleUrls: ['./data-get-range.component.css']\n})\nexport class DataGetRangeComponent implements OnInit, OnChanges {\n    @Input() sensorId: string;\n    @Input() start: string;\n    @Input() end: string;\n    loading: boolean;\n    dataPoints: DataPoint[];\n    dataNumber: number;\n\n    constructor(private dataService: DataService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = false;\n        this.dataNumber = 1;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (typeof this.start === 'undefined' || typeof this.end === 'undefined') {\n            return;\n        }\n        this.dataNumber = 0;\n        this.loading = true;\n        this.dataService.getRange(this.sensorId, this.start, this.end).subscribe(dataInfo => {\n            console.log(dataInfo);\n            const cnt = 'count';\n            this.dataNumber = dataInfo[cnt];\n            console.log(`dataInfo[cnt]: ${this.dataNumber}`);\n            if (!dataInfo[cnt]) {\n                this.loading = false;\n                return false;\n            }\n            this.loading = false;\n            const dps = 'Datapoints';\n            this.dataPoints = dataInfo[dps];\n        });\n    }\n\n}\n","<!--<p>data-get-range works!</p>-->\n<!--<div>this.sensorId {{sensorId}}, this.start {{start}}, this.end {{end}}</div>-->\n\n<div *ngIf=\"dataNumber!==0\">\n    <div *ngFor=\"let dataPoint of dataPoints, let num = index\">\n        <!--        id {{num}}: {{dataPoint['_id']}}-->\n        <p></p>\n        <div class=\"ui fluid card\">\n            <div class=\"content\">\n                <app-data-chart [dataPointId]=\"dataPoint['_id']\"></app-data-chart>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"dataNumber===0&&!loading\">\n    <p></p>\n    <div class=\"ui fluid card\">\n        <div class=\"content\">\n            <div class=\"ui comments\">\n                <div class=\"comment\">\n                    <a class=\"avatar\">\n                        <i class=\"teal exclamation circle large icon\"></i>\n                    </a>\n                    <div class=\"content\">\n                        <a class=\"author\">No data in this time range</a>\n                        <div class=\"metadata\">\n                            <div class=\"date\">0 data found</div>\n                        </div>\n                        <div class=\"text\">\n                            Please try other time range.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div *ngIf=\"loading\">\n    <p></p>\n    <div class=\"ui fluid card\">\n        <div class=\"content\">\n            <div class=\"ui fluid placeholder\">\n                <div class=\"image header\">\n                    <div class=\"medium line\"></div>\n                    <div class=\"full line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add auth header with jwt if user is logged in and request is to the api url\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    console.log(`Here we use JWT, currentUser.token = ${currentUser}`);\n    if (isLoggedIn && isApiUrl) {\n      console.log(`isLoggedIn && isApiUrl`);\n      console.log(`Here we use JWT, currentUser.token = ${currentUser.token}`);\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from '../../_models/user';\nimport {Admin} from '../../_models/admin';\n\n@Component({\n    selector: 'app-admin-home',\n    templateUrl: './admin-home.component.html',\n    styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent{\n    title = 'routing-app';\n    currentUser: User;\n    currentAdminUser: Admin;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private adminauthenticationService: AdminAuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n        this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n    }\n\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/user/login']);\n    }\n\n    adminLogout(): any {\n        this.adminauthenticationService.logout();\n        this.router.navigate(['/admin/login']);\n    }\n\n}\n","<div class=\"ui fixed top menu\">\n    <div class=\"ui container\">\n        <div class=\"wppc\">\n            <div class=\"item\">\n                <i class=\"chess queen icon\"></i>\n            </div>\n        </div>\n        <div class=\"wppc\">\n            <a class=\"header item\" routerLink=\"/admin\">\n                Admin Panel\n            </a>\n        </div>\n<!--        <a class=\"item\" routerLink=\"/user/home\" routerLinkActive=\"active\">Home</a>-->\n<!--        <a class=\"item\" routerLink=\"/user/application\" routerLinkActive=\"active\">Application</a>-->\n        <a class=\"item\" routerLink=\"/admin/control/add-registration-code\" routerLinkActive=\"active\">Add Secrete Code</a>\n\n        <!--                <div class=\"right menu\">-->\n        <div class=\"phoneContent\">\n            <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">\n                <div class=\"Grey ui button\">\n                    Sign out\n                </div>\n            </a>\n            <a class=\"ui item active\" routerLink=\"/admin/login\" routerLinkActive=\"active\" *ngIf=\"!currentAdminUser\">\n                <div class=\"teal ui button\">\n                    Sign in\n                </div>\n            </a>\n        </div>\n        <!--                </div>-->\n\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">\n                    <div class=\"Grey ui button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item active\" routerLink=\"/admin/login\" routerLinkActive=\"active\" *ngIf=\"!currentAdminUser\">\n                    <div class=\"teal ui button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>\n<!--</div>-->\n\n\n<div class=\"bingcheng\">\n    <div style=\"color:white\"><b>Designed by openmc.cn</b></div>\n    <div style=\"color:white\"><b>Designed by openmc.cn</b></div>\n    <div style=\"color:white\"><b>Designed by openmc.cn</b></div>\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-control',\n  templateUrl: './admin-control.component.html',\n  styleUrls: ['./admin-control.component.css']\n})\nexport class AdminControlComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--<p>admin-control works!</p>-->\n\n<div class=\"ui container\">\n<!--    <a class=\"item\" routerLink=\"/admin/control/add-registration-code\" routerLinkActive=\"active\">Add code</a>-->\n\n    <router-outlet></router-outlet>\n\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\nimport {Admin} from 'src/app/_models/admin';\nimport {Message} from 'src/app/_models/message';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<Admin>;\n  public currentUser: Observable<Admin>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<Admin>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): Admin {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/admins/login`, {email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  signup(name: string, email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/admins/signup`, {name, email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        // localStorage.setItem('currentUser', JSON.stringify(user));\n        // this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  addCode(code: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/registration-code/add`, {code})\n        .pipe(map(message => {\n          return message;\n        }));\n  }\n\n  logout(): any {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpHandler, HttpEvent, HttpInterceptor} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        console.log('401 Error');\n        this.authenticationService.logout();\n        location.reload(true);\n      } else if (err.status === 0) {\n        // Network error: server side not reachable\n        err.status = 500.11;\n        err.error.message = 'The server is under maintenance and the service is temporarily unavailable';\n      }\n      console.log(`err.error.message: ${err.error.message}, err.statusText: ${err.statusText}, err: `);\n      console.log(err);\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\nimport {User} from 'src/app/_models/user';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/users/login`, {email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  signup(name: string, email: string, password: string, registrationCode: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/users/signup`, {name, email, password, registrationCode})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        // localStorage.setItem('currentUser', JSON.stringify(user));\n        // this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  logout(): any {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\n// import {Data} from 'src/app/_models/data';\nimport {DataPoints} from 'src/app/_models/data.points';\nimport {DataInfo} from 'src/app/_models/data.info';\nimport {first} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class DataService {\n    // dataInfo: DataInfo;\n    dataPointId: string;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getRecentOne(sensorIdIn: string): any {\n        console.log('running get data/recent');\n        // const body = {\n        //     sensorId: sensorIdIn,\n        //     dataNumber: 1,\n        // };\n\n        const params = new HttpParams()\n            .set('sensorId', sensorIdIn)\n            .set('dataNumber', '1');\n\n        return this.http.get<DataInfo>(`${environment.apiUrl}/data/recent`,\n            {params});\n        // return this.http.get<DataPoints>(`${environment.apiUrl}/data/${this.dataPointId}`,\n        //     {responseType: 'json'});\n    }\n\n    getRange(sensorIdIn: string, start: string, end: string): any {\n        console.log('running get data/recent');\n        const params = new HttpParams()\n            .set('sensorId', sensorIdIn)\n            .set('start', start)\n            .set('end', end);\n\n        return this.http.get<DataInfo>(`${environment.apiUrl}/data/timerange`,\n            {params});\n        // return this.http.get<DataPoints>(`${environment.apiUrl}/data/${this.dataPointId}`,\n        //     {responseType: 'json'});\n    }\n\n    getData(dataPointId: string): any {\n        return this.http.get<DataPoints>(`${environment.apiUrl}/data/${dataPointId}`,\n            {responseType: 'json'});\n    }\n\n    // getData(): any {\n    //     return this.http.get<DataInfo>(`${environment.apiUrl}/sensors`).pipe(first()).subscribe(dataInfo => {\n    //         console.log(sensorInfo);\n    //         this.sensorInfo = sensorInfo;\n    //         this.loading = false;\n    //         const sensorskey = 'sensors';\n    //         this.sensors = sensorInfo[sensorskey];\n    //         const numberkey = 'count';\n    //         this.sensorNumber = sensorInfo[numberkey];\n    //     });\n    // }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'FilterPipe'\n})\nexport class FilterPipe implements PipeTransform {\n\n    transform(value: any, input: any): any {\n        if (input) {\n            return value.filter(val => (val.class.includes(input) || val.location.includes(input) || val.name.includes(input)));\n        } else {\n            return value;\n        }\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n    selector: 'app-admin-add-code',\n    templateUrl: './admin-add-code.component.html',\n    styleUrls: ['./admin-add-code.component.css']\n})\nexport class AdminAddCodeComponent implements OnInit {\n    signupForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n    success = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // if (this.authenticationService.currentUserValue) {\n        //   this.router.navigate(['/']);\n        // }\n    }\n\n    ngOnInit(): void {\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}$/;\n        this.signupForm = this.formBuilder.group({\n            code: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(registerCodeReg)]))\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.signupForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.success = false;\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.signupForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.addCode(this.f.code.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.error = '';\n                    this.success = true;\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n        this.success = false;\n    }\n\n    generate(): void {\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}$/;\n        const code = this.createCode();\n        this.signupForm = this.formBuilder.group({\n            code: new FormControl(code, Validators.compose([\n                Validators.required, Validators.pattern(registerCodeReg)]))\n        });\n        this.removeIcon();\n    }\n\n    createCode(): string {\n        let code = '';\n        for (let i = 0; i < 4; i ++) {\n            code += this.create_pwd() + '-';\n        }\n        code += this.create_pwd();\n        return code;\n    }\n\n    create_pwd(): string {\n        const pwdLength = 5;\n        let newPass = '';\n        const char = 'ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';\n        for (let i = 0; i < pwdLength; i++) {\n            const j = Math.floor(Math.random() * char.length);\n            newPass += char.charAt(j);\n        }\n        return newPass;\n    }\n}\n","<!--<p>admin-add-code works!</p>-->\n\n<div class=\"ui middle aligned center aligned grid\">\n    <div class=\"column\">\n        <h2 class=\"ui teal image header\">\n            <i class=\"user plus icon\"></i>\n            <div class=\"content\">\n                Add a new registration code\n            </div>\n        </h2>\n\n        <button [disabled]=\"loading\" class=\"ui fluid mini gray button\" (click)=\"generate()\">\n            <span *ngIf=\"loading\" class=\"ui loader\"></span>\n            Generate Random Code\n        </button>\n\n        <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"ui stacked segment\">\n\n                <div class=\"field\">\n                    <div class=\"ui left icon input\">\n                        <i class=\"key icon\"></i>\n                        <input type=\"text\" formControlName=\"code\" class=\"form-control\"\n                               placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n                               [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>\n                    </div>\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>\n                    </div>\n                </div>\n\n                <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n                <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n                    <span *ngIf=\"loading\" class=\"ui loader\"></span>\n                    Submit\n                </button>\n\n                <div class=\"ui negative message\" *ngIf=\"error\">\n                    <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n                    <div class=\"header\">\n                        {{error}}\n                    </div>\n                    <ul class=\"list\">\n                        <li>Please enter a valid code</li>\n                        <li>The shape should be like:\n                            <p>XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</li>\n                    </ul>\n                </div>\n\n                <div class=\"ui green message\" *ngIf=\"success\">\n                    <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n                    <div class=\"header\">\n                        Add registration code success!\n                    </div>\n                    <ul class=\"list\">\n                        <li>Current registration code is:\n                            <p>{{f.code.value}}</li>\n                    </ul>\n                </div>\n\n            </div>\n\n        </form>\n\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n    signupForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n        // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n        const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}$/;\n        const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n        // this.signupForm = this.formBuilder.group({\n        //     name: ['', Validators.required],\n        //     email: ['', Validators.required, Validators.pattern(mailReg)],\n        //     password: ['', Validators.required],\n        //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n        // });\n        this.signupForm = this.formBuilder.group({\n            name: new FormControl('', Validators.compose([\n                Validators.required, Validators.minLength(3), Validators.maxLength(16)])),\n            email: new FormControl('', Validators.compose([\n                Validators.required, Validators.email])),\n            password: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(passwordReg),\n                Validators.minLength(8),\n                Validators.maxLength(16)])),\n            code: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(registerCodeReg)]))\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.signupForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.signupForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.signup(this.f.name.value, this.f.email.value, this.f.password.value, this.f.code.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    const currentMain = this.router.url.split('/')[1];\n                    // get return url from route parameters or default to '../login'\n                    this.router.navigate([currentMain + '/login']);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n\n}\n","<!--<p>signup works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user plus icon\"></i>\n      <div class=\"content\">\n        Sign up a new account\n      </div>\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"address book icon\"></i>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"User name\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            <div *ngIf=\"f.name.errors.minlength\">Name should be at least 2 characters</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"envelope icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern || f.password.errors.minlength || f.password.errors.maxlength\">\n              Password should be 8-16 characters with combination of letters/numbers/symbols\n            </div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"key icon\"></i>\n            <input type=\"text\" formControlName=\"code\" class=\"form-control\"\n                   placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>\n            <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Signup\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a strong password.</li>\n            <li>Your password must be at least 6 characters.</li>\n\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n    <div class=\"ui message\">\n      Already have an account?   <a routerLink=\"../login\">Sign In</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {LoginComponent} from './login/login.component';\nimport {SignupComponent} from './signup/signup.component';\nimport {ApplicationComponent} from './private-components/application/application.component';\nimport {AboutComponent} from './about/about.component';\nimport {HomeComponent} from './home/home.component';\nimport {EquipmentComponent} from './private-components/equipment/equipment.component';\nimport {SettingsComponent} from './private-components/settings/settings.component';\nimport {InfoComponent} from './private-components/info/info.component';\nimport {SensorComponent} from './private-components/sensor/sensor.component';\nimport {AdminLoginComponent} from './admin-components/login/login.component';\nimport {AdminSignupComponent} from './admin-components/signup/signup.component';\nimport {AdminControlComponent} from './admin-components/admin-control/admin-control.component';\nimport {AdminHomeComponent} from './admin-components/admin-home/admin-home.component';\nimport {UserFrameComponent} from './user-frame/user-frame.component';\nimport {AdminAddCodeComponent} from './admin-components/admin-add-code/admin-add-code.component';\nimport {DesktopApplicationComponent} from './desktop-application/desktop-application.component';\nimport {YourGuard} from './_helpers/your.guard';\nimport {YourGuard as DesktopGuard} from './_helpers/desktop.guard';\nimport {AdminGuard} from './_helpers/admin.guard';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'user', pathMatch: 'full'},\n    {\n        path: 'user', component: UserFrameComponent,\n        children: [\n            {path: '', component: HomeComponent},\n            {path: 'home', component: HomeComponent},\n            {\n                path: 'application', component: ApplicationComponent, canActivate: [YourGuard],\n                children: [\n                    {path: '', component: InfoComponent},\n                    {path: 'info', component: InfoComponent},\n                    {path: 'settings', component: SettingsComponent},\n                    {path: 'equipment', component: EquipmentComponent},\n                    {path: 'sensor/:sensorId', component: SensorComponent},\n                ]\n            },\n            {path: 'about', component: AboutComponent},\n            {path: 'login', component: LoginComponent},\n            {path: 'signup', component: SignupComponent},\n        ]\n    },\n    // {path: '', component: HomeComponent},\n    // {path: 'home', component: HomeComponent},\n    // {\n    //     path: 'application', component: ApplicationComponent, canActivate: [YourGuard],\n    //     children: [\n    //         {path: '', component: InfoComponent},\n    //         {path: 'info', component: InfoComponent},\n    //         {path: 'settings', component: SettingsComponent},\n    //         {path: 'equipment', component: EquipmentComponent},\n    //         {path: 'sensor/:sensorId', component: SensorComponent},\n    //     ]\n    // },\n    // {path: 'about', component: AboutComponent},\n    // {path: 'login', component: LoginComponent},\n    // {path: 'signup', component: SignupComponent},\n    {\n        path: 'admin', component: AdminHomeComponent,\n        children: [\n            {path: '', component: AdminControlComponent},\n            {path: 'login', component: AdminLoginComponent},\n            {path: 'signup', component: AdminSignupComponent},\n            {\n                path: 'control', component: AdminControlComponent, canActivate: [AdminGuard],\n                children: [\n                    {path: 'add-registration-code', component: AdminAddCodeComponent},\n                ]\n            }\n        ]\n    },\n    {\n        path: 'desktop', component: DesktopApplicationComponent,\n        children: [\n            {path: '', component: InfoComponent, canActivate: [DesktopGuard]},\n            {path: 'login', component: LoginComponent},\n            {path: 'signup', component: SignupComponent},\n            {path: 'info', component: InfoComponent, canActivate: [DesktopGuard]},\n            {path: 'settings', component: SettingsComponent, canActivate: [DesktopGuard]},\n            {path: 'equipment', component: EquipmentComponent, canActivate: [DesktopGuard]},\n            {path: 'sensor/:sensorId', component: SensorComponent, canActivate: [DesktopGuard]},\n        ]\n    },\n    {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            email: ['email@gmail.com', Validators.compose([\n                Validators.required, Validators.email])],\n            password: ['pass', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.loginForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const currentMain = this.router.url.split('/')[1];\n                    console.log('this.router.url');\n                    console.log(this.router.url);\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || currentMain;\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<!--<p>login works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user icon\"></i>\n        Sign in to your account\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"user icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Sign In\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a right password.</li>\n            <li>You can sign up if you are a new user.</li>\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n\n    <div class=\"ui message\">\n      New to us?   <a routerLink=\"../signup\">Sign Up</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n    if (window) {\n        window.console.log = () => {};\n    }\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}