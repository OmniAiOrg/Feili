{"version":3,"sources":["./src/app/_services/sensor.service.ts","./src/app/private-components/data-chart/data-chart.component.ts","./src/app/private-components/data-chart/data-chart.component.html","./src/app/_helpers/admin.guard.ts","./src/app/private-components/settings/settings.component.ts","./src/app/private-components/settings/settings.component.html","./src/app/_helpers/your.guard.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/user-frame/user-frame.component.ts","./src/app/user-frame/user-frame.component.html","./src/app/_helpers/desktop.guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/private-components/application/application.component.ts","./src/app/private-components/application/application.component.html","./src/app/private-components/sensor/sensor.component.ts","./src/app/private-components/sensor/sensor.component.html","./src/app/private-components/info/info.component.ts","./src/app/private-components/info/info.component.html","./src/app/private-components/sensor-settings/sensor-settings.component.ts","./src/app/private-components/sensor-settings/sensor-settings.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_helpers/admin.jwt.interceptor.ts","./src/app/admin-components/signup/signup.component.ts","./src/app/admin-components/signup/signup.component.html","./src/app/_services/user.service.ts","./src/app/private-components/equipment/equipment.component.ts","./src/app/private-components/equipment/equipment.component.html","./src/app/app.module.ts","./src/app/admin-components/login/login.component.ts","./src/app/admin-components/login/login.component.html","./src/app/private-components/data-get-one/data-get-one.component.ts","./src/app/private-components/data-get-one/data-get-one.component.html","./src/app/desktop-application/desktop-application.component.ts","./src/app/desktop-application/desktop-application.component.html","./src/app/private-components/data-get-range/data-get-range.component.ts","./src/app/private-components/data-get-range/data-get-range.component.html","./src/app/_helpers/jwt.interceptor.ts","./src/app/admin-components/admin-home/admin-home.component.ts","./src/app/admin-components/admin-home/admin-home.component.html","./src/app/admin-components/admin-control/admin-control.component.ts","./src/app/admin-components/admin-control/admin-control.component.html","./src/app/_services/admin.authentication.service.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_services/authentication.service.ts","./src/app/_services/data.service.ts","./src/app/_helpers/filter.pipe.ts","./src/app/admin-components/admin-add-code/admin-add-code.component.ts","./src/app/admin-components/admin-add-code/admin-add-code.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\nimport {RespResult} from 'src/app/_models/resp.result';\nimport {SensorInfo} from 'src/app/_models/sensor.info';\n\n@Injectable({providedIn: 'root'})\nexport class SensorService {\n    sensorInfo: SensorInfo;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAll(): any {\n        console.log('running get all sensors');\n        return this.http.get<SensorInfo>(`${environment.apiUrl}/sensors`);\n    }\n\n    updateSettings(sensorId: string, settings: string): any {\n        console.log('Start update settings');\n        return this.http.put<RespResult>(`${environment.apiUrl}/sensors/${sensorId}`, settings);\n    }\n\n    getSensorInfo(): SensorInfo {\n        return this.sensorInfo;\n    }\n\n    setSensorInfo(sensorInfo: SensorInfo): void {\n        this.sensorInfo = sensorInfo;\n    }\n\n}\n","import {Component, OnInit, Input, AfterViewInit} from '@angular/core';\n\nimport {DataService} from '../../_services/data.service';\nimport {DataPoints} from 'src/app/_models/data.points';\n\n@Component({\n    selector: 'app-data-chart',\n    templateUrl: './data-chart.component.html',\n    styleUrls: ['./data-chart.component.css']\n})\nexport class DataChartComponent implements OnInit, AfterViewInit {\n    @Input() dataPointId: string;\n    dataPoints: DataPoints;\n    loading: boolean;\n    emptyData: boolean;\n    _id: string;\n    time: string;\n    data: [[number]];\n    ready: boolean;\n\n    constructor(private dataService: DataService) {\n    }\n\n    // tslint:disable-next-line:typedef\n    ngOnInit() {\n        this.ready = false;\n        this.loading = true;\n        this.emptyData = true;\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.ready = true;\n            this.dataService.getData(this.dataPointId).subscribe(dataPoints => {\n                console.log(dataPoints);\n                const dptKey = 'dataPoint';\n                this.dataPoints = dataPoints[dptKey];\n                const datakey = 'data';\n                this.data = this.dataPoints[datakey];\n                const timekey = 'time';\n                this.time = this.dataPoints[timekey];\n                const _idkey = '_id';\n                this._id = this.dataPoints[_idkey];\n                this.emptyData = false; // Show data because it's not empty\n                this.loading = false; // this must be after emptyData, or it will flash\n            });\n        }, 0);\n    }\n}\n","<!--<p>data-chart works!</p>-->\n\n<!--<div class=\"ui card\">-->\n<div *ngIf=\"ready && !loading\">\n    <div class=\"content\">\n        <div *ngIf=\"!emptyData\">\n            <div class=\"header\">time: {{time}}</div>\n            <div class=\"meta\">\n                <span>id: </span>\n                <a>{{_id}}</a>\n            </div>\n            <div *ngFor=\"let x of data\">\n                <p>data: {{x}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"loading && ready\">\n    <p></p>\n    <div class=\"content\">\n        <div class=\"ui fluid placeholder\">\n            <div class=\"image header\">\n                <div class=\"medium line\"></div>\n                <div class=\"full line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"medium line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"full line\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n<!--</div>-->\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/admin/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {User} from '../../_models/user';\nimport {UserService} from '../../_services/user.service';\nimport {RespResult} from '../../_models/resp.result';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n    user: User;\n    updateForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n    // date: string;\n\n    constructor(private formBuilder: FormBuilder,\n                private userService: UserService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.user = this.userService.getUser();\n        this.updateForm = this.formBuilder.group({\n            name: ['...', Validators.required],\n            company: ['...', Validators.required],\n            remarks: ['...', Validators.required],\n        });\n        if (!this.user) {\n            this.userService.getAll().pipe(first()).subscribe(users => {\n                this.user = users[0];\n                this.userService.setUser(this.user);\n                this.updateForm = this.formBuilder.group({\n                    name: [this.user.user.name, Validators.required],\n                    company: [this.user.user.company, Validators.required],\n                    remarks: [this.user.user.remarks, Validators.required],\n                });\n                this.loading = false;\n            });\n        } else {\n            // this.date = new Date(this.user.user['registerTime']).toLocaleString();\n            this.updateForm = this.formBuilder.group({\n                name: [this.user.user.name, Validators.required],\n                company: [this.user.user.company, Validators.required],\n                remarks: [this.user.user.remarks, Validators.required],\n            });\n            this.loading = false;\n        }\n    }\n\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.updateForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n            return;\n        }\n\n        const updateSettingJson = [\n            {\n                propName: 'name',\n                value: this.f.name.value,\n            },\n            {\n                propName: 'company',\n                value: this.f.company.value,\n            },\n            {\n                propName: 'remarks',\n                value: this.f.remarks.value,\n            }\n        ];\n\n        this.loading = true;\n        this.userService.updateSettings(JSON.stringify(updateSettingJson))\n            .pipe(first())\n            .subscribe({\n                next: (result: RespResult) => {\n                    // @ts-ignore\n                    console.log(`result.ok = ${result.result.ok}`);\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n        this.user.user.name = this.f.name.value;\n        this.user.user.company = this.f.company.value;\n        this.user.user.remarks = this.f.remarks.value;\n    }\n\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        {{user.user.name}}\n        <div class=\"sub header\">{{user.user.email}}</div>\n    </h2>\n</div>\n\n<div *ngIf=\"!user\" class=\"container\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        <div class=\"sub header\">Loading...</div>\n    </h2>\n</div>\n\n<form class=\"ui fluid form\" [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"field\">\n        <div class=\"ui labeled input\">\n            <div class=\"ui label\">Name:</div>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [placeholder]=\"\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui labeled input\">\n            <div class=\"ui label\">Company:</div>\n            <input type=\"text\" formControlName=\"company\" class=\"form-control\" [placeholder]=\"\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui label large\">Remarks:</div>\n        <textarea formControlName=\"remarks\" class=\"form-control\"></textarea>\n<!--            <input type=\"text\"   [placeholder]=\"\">-->\n\n    </div>\n    <div class=\"field\">\n        <div class=\"ui left icon input\">\n            <button [disabled]=\"loading\" class=\"ui submit button\">\n                <span *ngIf=\"loading\" class=\"ui loader\"></span>\n                Update\n            </button>\n        </div>\n    </div>\n    <div class=\"ui negative message\" *ngIf=\"error\">\n        <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n        {{error}}\n    </div>\n</form>\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YourGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/user/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui container\">\n    <h1 class=\"ui header\">About</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from '../_models/user';\nimport {Admin} from '../_models/admin';\n\n@Component({\n  selector: 'app-user-frame',\n  templateUrl: './user-frame.component.html',\n  styleUrls: ['./user-frame.component.css']\n})\nexport class UserFrameComponent{\n\n  title = 'Feili Control';\n  currentUser: User;\n  currentAdminUser: Admin;\n\n  constructor(\n      private router: Router,\n      private authenticationService: AuthenticationService,\n      private adminauthenticationService: AdminAuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n  }\n\n  logout(): any {\n    this.authenticationService.logout();\n    this.router.navigate(['/user/login']);\n  }\n\n  adminLogout(): any {\n    this.adminauthenticationService.logout();\n    this.router.navigate(['/admin/login']);\n  }\n\n}\n","<div class=\"ui inverted fixed top menu\">\n    <div class=\"ui container\">\n        <div class=\"wppc\">\n            <div class=\"item\">\n                <i class=\"chess queen icon\"></i>\n            </div>\n        </div>\n        <div class=\"wppc\">\n            <div class=\"header item\">\n                Feili Control APP\n            </div>\n        </div>\n        <a class=\"item\" routerLink=\"/user/home\" routerLinkActive=\"active\">Home</a>\n        <a class=\"item\" routerLink=\"/user/application\" routerLinkActive=\"active\">Application</a>\n        <a class=\"item\" routerLink=\"/user/about\" routerLinkActive=\"active\">About</a>\n\n        <!--                <div class=\"right menu\">-->\n        <div class=\"phoneContent\">\n            <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                <div class=\"Grey ui button\">\n                    Sign out\n                </div>\n            </a>\n            <a class=\"ui item active\" routerLink=\"/user/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">\n                <div class=\"teal ui button\">\n                    Sign in\n                </div>\n            </a>\n        </div>\n        <!--                </div>-->\n\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                    <div class=\"Grey ui button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item active\" routerLink=\"/user/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">\n                    <div class=\"teal ui button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>\n<!--</div>-->\n\n\n<div class=\"bingcheng\">\n    <router-outlet></router-outlet>\n</div>\n\n\n<div class=\"ui inverted vertical footer segment\">\n    <div class=\"ui center aligned container\">\n        <div class=\"ui stackable inverted divided equal height stackable grid\">\n            <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">About</h4>\n                <div class=\"ui inverted link list\">\n                    <a href=\"#\" class=\"item\">Sitemap</a>\n                    <a href=\"#\" class=\"item\">Contact Us</a>\n                    <a href=\"#\" class=\"item\">Religious Ceremonies</a>\n                    <a href=\"#\" class=\"item\">Gazebo Plans</a>\n                </div>\n            </div>\n            <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">Services</h4>\n                <div class=\"ui inverted link list\">\n                    <a href=\"#\" class=\"item\">Banana Pre-Order</a>\n                    <a href=\"#\" class=\"item\">DNA FAQ</a>\n                    <a href=\"#\" class=\"item\">How To Access</a>\n                    <a href=\"#\" class=\"item\">Favorite X-Men</a>\n                </div>\n            </div>\n            <div class=\"seven wide column\">\n                <h4 class=\"ui inverted header\">Footer Header</h4>\n                <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n            </div>\n        </div>\n        <div class=\"ui section divider\"></div>\n        <img src=\"./assets/images/wave.png\" class=\"ui centered mini image\">\n        <div class=\"ui horizontal inverted small divided link list\">\n            <a class=\"item\" href=\"#\">Site Map</a>\n            <a class=\"item\" href=\"#\">Contact Us</a>\n            <a class=\"item\" href=\"#\">Terms and Conditions</a>\n            <a class=\"item\" href=\"#\">Privacy Policy</a>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YourGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return false;\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/desktop/login'], {queryParams: {returnUrl: state.url}})\n        .catch(e => {\n          console.log(e);\n        });\n    return false;\n  }\n}\n","import {Component, HostListener, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    deferredPrompt: any;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    @HostListener('window:beforeinstallprompt', ['$event'])\n    onbeforeinstallprompt(e: { preventDefault: () => void; }): any {\n        console.log(e);\n        // Prevent Chrome 67 and earlier from automatically showing the prompt\n        e.preventDefault();\n        // Stash the event so it can be triggered later.\n        this.deferredPrompt = e;\n        // this.showButton = true;\n    }\n\n    addToHomeScreen(): void {\n        // Hide the app provided install promotion\n        // hideMyInstallPromotion();\n        this.deferredPrompt.prompt();\n        // Wait for the user to respond to the prompt\n        this.deferredPrompt.userChoice\n            .then((choiceResult: { outcome: string; }) => {\n                if (choiceResult.outcome === 'accepted') {\n                    console.log('User accepted the A2HS prompt');\n                } else {\n                    console.log('User dismissed the A2HS prompt');\n                }\n                this.deferredPrompt = null;\n            });\n    }\n\n\n}\n","<div class=\"ui container\">\n    <h1 class=\"ui header center aligned\">Introduction</h1>\n    <button class=\"add-button\" (click)=\"addToHomeScreen()\" >Add to home screen</button>\n    <h2>Some description about Feili & Production</h2>\n    <div class=\"ui content segment\">\n\n        <div class=\"ui placeholder\">\n            <div class=\"image header\">\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n                <div class=\"line\"></div>\n            </div>\n        </div>\n    </div>\n    <h2>Some introduction of our production</h2>\n    <div class=\"ui three column stackable grid\">\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"column\">\n            <div class=\"ui raised segment\">\n                <div class=\"ui placeholder\">\n                    <div class=\"image header\">\n                        <div class=\"line\"></div>\n                        <div class=\"line\"></div>\n                    </div>\n                    <div class=\"paragraph\">\n                        <div class=\"medium line\"></div>\n                        <div class=\"short line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"ui three cards\">\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui card\">\n            <div class=\"content\">\n                <div class=\"ui placeholder\">\n                    <div class=\"rectangular image\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://api.feili.openmc.cn',\n  // apiUrl: 'http://api.feili.omniai.org',\n  // apiUrl: 'http://175.24.189.35:4913',\n  // apiUrl: 'http://localhost:8000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-application',\n    templateUrl: './application.component.html',\n    styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n    activeRouter: number;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.setRouter(1);\n    }\n\n    setRouter(activeRouter: number): void {\n        this.activeRouter = activeRouter;\n    }\n\n}\n","<!--<p>application works!</p>-->\n\n<div class=\"ui two column doubling stackable grid container\">\n    <div class=\"four wide column\">\n        <div class=\"ui secondary vertical fluid menu\">\n            <a class=\"item\" routerLink=\"info\"  [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\" >\n                User info\n                <i class=\"gray user circle large icon\"></i>\n            </a>\n            <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n                Settings\n                <i class=\"gray whmcs large icon\"></i>\n            </a>\n            <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n                Equipment\n                <i class=\"gray stack exchange large icon\"></i>\n            </a>\n            <!--            <a class=\"item\">-->\n            <!--                Not defined-->\n            <!--                <i class=\"whmcs large icon\"></i>-->\n            <!--            </a>-->\n            <!--            <a class=\"item\">-->\n            <!--                Not defined-->\n            <!--                <i class=\"whmcs large icon\"></i>-->\n            <!--            </a>-->\n        </div>\n    </div>\n    <div class=\"twelve wide stretched column\">\n        <!--        <div class=\"ui segment\">-->\n        <!--            <div class=\"ui medium header\">This is the application page, below is the subpage:</div>-->\n        <router-outlet></router-outlet>\n        <!--        </div>-->\n\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\n\n\n@Component({\n    selector: 'app-sensor',\n    templateUrl: './sensor.component.html',\n    styleUrls: ['./sensor.component.css']\n})\nexport class SensorComponent implements OnInit {\n    sensorId: string;\n    range = new FormGroup({\n        start: new FormControl(),\n        end: new FormControl()\n    });\n    myDatePicker = new FormControl();\n    loading: boolean;\n    // range: FormGroup;\n    start: string;\n    end: string;\n\n    constructor(private route: ActivatedRoute,\n                private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit(): void {\n        this.loading = false;\n        this.sensorId = this.route.snapshot.paramMap.get('sensorId');\n        console.log(`This sensorId is ${this.sensorId}`);\n        this.range['start'] = new Date(Date.now() - 24 * 60 * 60 * 1000);\n        this.range['end'] = new Date();\n    }\n\n    onSubmit(): void {\n        this.start = this.range['start'].toISOString();\n        this.end = this.range['end'].toISOString();\n        console.log(`Start: ${this.start} end: ${this.end}`);\n    }\n\n    update(): void {\n    }\n}\n","<div class=\"ui backArrow container\">\n    <button class=\"mini ui teal labeled icon button\" [routerLink]=\"['../../equipment']\">\n        <i class=\"left arrow icon\"></i> Back\n    </button>\n</div>\n\n<p></p>\n\n<form class=\"ui form\" [formGroup]=\"range\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"ui two column doubling stackable grid container\">\n        <div class=\"column\">\n            <mat-form-field class=\"dateInputForm\">\n                <div class=\"ui grid\">\n                    <div class=\"twelve wide column\">\n                        <label>\n                            <input matInput [ngxMatDatetimePicker]=\"pickerFrom\" placeholder=\"From date & time\"\n                                   [(ngModel)]=\"range['start']\" [ngModelOptions]=\"{standalone: true}\">\n\n                        </label>\n                    </div>\n                    <div class=\"four wide column\">\n                        <mat-datepicker-toggle class=\"pickIcon\" matSuffix [for]=\"pickerFrom\"></mat-datepicker-toggle>\n                    </div>\n                </div>\n                <ngx-mat-datetime-picker #pickerFrom [enableMeridian]=\"true\"></ngx-mat-datetime-picker>\n                <div class=\"ui red message\" *ngIf=\"range.controls.start.hasError('notValid')\">Invalid start date</div>\n            </mat-form-field>\n        </div>\n        <div class=\"column\">\n            <mat-form-field class=\"dateInputForm\">\n                <div class=\"ui grid\">\n                    <div class=\"twelve wide column\">\n                        <label>\n                            <input matInput [ngxMatDatetimePicker]=\"pickerTo\" placeholder=\"To date & time\"\n                                   [(ngModel)]=\"range['end']\" [min]=\"range['start']\"\n                                   [ngModelOptions]=\"{standalone: true}\">\n                        </label>\n                    </div>\n                    <div class=\"four wide column\">\n                        <mat-datepicker-toggle class=\"pickIcon\" matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\n                    </div>\n                    <ngx-mat-datetime-picker #pickerTo [enableMeridian]=\"true\"></ngx-mat-datetime-picker>\n                </div>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"ui getButton container\">\n        <button [disabled]=\"loading\" class=\"ui fluid small teal submit button\">\n            <span *ngIf=\"loading\" class=\"ui loader\"></span>\n            Get Data\n        </button>\n    </div>\n\n</form>\n\n<!--<p>Selected range: {{range.value | json}} {{range['start'].value | json}} {{range['end'].value | json}}</p>-->\n\n<div class=\"ui container\">\n    <!--    <div >Start: {{start}}, end: {{end}}</div>-->\n    <app-data-get-range [sensorId]=\"sensorId\" [start]=\"start\" [end]=\"end\"></app-data-get-range>\n</div>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {User} from 'src/app/_models/user';\nimport {UserService} from 'src/app/_services/user.service';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n    selector: 'app-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n    loading = false;\n    user: User;\n    date: string;\n\n    constructor(private userService: UserService,\n                private router: Router,\n                private authenticationService: AuthenticationService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.user = this.userService.getUser();\n        if (this.user){\n            this.loading = false;\n            this.date = new Date(this.user.user['registerTime']).toLocaleString();\n            return;\n        }\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.user = users[0];\n            this.date = new Date(users[0].user['registerTime']).toLocaleString();\n            this.userService.setUser(this.user);\n        });\n    }\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/desktop/login']);\n    }\n\n}\n","<!--<div class=\"card-body\">-->\n<div *ngIf=\"loading\" class=\"container\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        <div class=\"sub header\">Loading...</div>\n    </h2>\n    <div class=\"ui container\">\n        <div class=\"ui tall stacked segments\">\n            <div class=\"ui segment\">\n                <i class=\"building inline icon link\">&nbsp;Company</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"calendar alternate icon\">&nbsp;Register&nbsp;Time</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"registered icon\">&nbsp;Registration&nbsp;Code</i>\n                <div class=\"content\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"comment alternate icon\">&nbsp;Remarks</i>\n                <div class=\"container\">\n                    <div class=\"ui active loader\"></div>\n                </div>\n            </div>\n            <div class=\"ui segment phoneContent\">\n                <a class=\"ui item\" (click)=\"logout()\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"user\">\n    <h2 class=\"ui center aligned icon header\">\n        <i class=\"teal circular user icon\"></i>\n        {{user.user.name}}\n        <div class=\"sub header\">{{user.user.email}}</div>\n    </h2>\n    <div class=\"ui container\">\n        <div class=\"ui tall stacked segments\">\n            <div class=\"ui segment\">\n                <i class=\"building inline icon link\">&nbsp;Company</i>\n                <div class=\"content\">\n                    {{user.user.company}}\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"calendar alternate icon\">&nbsp;Register&nbsp;Time</i>\n                <div class=\"content\">\n                    {{date}}\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"registered icon\">&nbsp;Registration&nbsp;Code</i>\n                <div class=\"content\">\n                    <a>{{user.user.registrationCode}}</a>\n                </div>\n            </div>\n            <div class=\"ui segment\">\n                <i class=\"comment alternate icon\">&nbsp;Remarks</i>\n                <div class=\"ui form\">\n                    <div class=\"container\" disabled=\"true\">\n                        <textarea>{{user.user.remarks}}</textarea>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ui segment phoneContent\">\n                <a class=\"ui item\" (click)=\"logout()\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {Settings} from '../../_models/settings';\nimport {Sensor} from '../../_models/sensor';\nimport {RespResult} from 'src/app/_models/resp.result';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {SensorService} from '../../_services/sensor.service';\n\n// import {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n    selector: 'app-sensor-settings',\n    templateUrl: './sensor-settings.component.html',\n    styleUrls: ['./sensor-settings.component.css']\n})\nexport class SensorSettingsComponent implements OnInit {\n    @Input() sensor: Sensor;\n    settings: Settings;\n    updateForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n    // checked: {\n    //     showX: boolean;\n    // };\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private sensorService: SensorService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.settings = this.sensor.settings;\n\n        this.updateForm = this.formBuilder.group({\n            showX: [this.settings.showX, Validators.required],\n            showY: [this.settings.showY, Validators.required],\n            showZ: [this.settings.showZ, Validators.required],\n            overlap: [this.settings.overlap, Validators.required],\n            freqLow: [this.settings.freqLow, Validators.required],\n            freqHigh: [this.settings.freqHigh, Validators.required],\n            name: [this.sensor.name, Validators.required],\n            class: [this.sensor.class, Validators.required],\n            location: [this.sensor.location, Validators.required]\n        });\n    }\n\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.updateForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n            return;\n        }\n\n        const updateSettingJson = [\n            {\n                propName: 'name',\n                value: this.f.name.value,\n            },\n            {\n                propName: 'class',\n                value: this.f.class.value,\n            },\n            {\n                propName: 'location',\n                value: this.f.location.value,\n            },\n            {\n                propName: 'settings',\n                value: {\n                    showX: this.f.showX.value,\n                    showY: this.f.showY.value,\n                    showZ: this.f.showZ.value,\n                    overlap: this.f.overlap.value,\n                    freqLow: this.f.freqLow.value,\n                    freqHigh: this.f.freqHigh.value\n                }\n            }\n        ];\n\n        this.loading = true;\n        this.sensorService.updateSettings(this.sensor._id, JSON.stringify(updateSettingJson))\n            .pipe(first())\n            .subscribe({\n                next: (result: RespResult) => {\n                    // @ts-ignore\n                    console.log(`result.ok = ${result.result.ok}`);\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n        this.settings.showX = this.f.showX.value;\n        this.settings.showY = this.f.showY.value;\n        this.settings.showZ = this.f.showZ.value;\n        this.settings.overlap = this.f.overlap.value;\n        this.settings.freqLow = this.f.freqLow.value;\n        this.settings.freqHigh = this.f.freqHigh.value;\n        this.sensor.name = this.f.name.value;\n        this.sensor.location = this.f.location.value;\n        this.sensor.class = this.f.class.value;\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n    // check(item: string): void {\n    //     if (item === 'showX') {\n    //         this.settings.showX = !this.settings.showX;\n    //         console.log('clicked showX: ' + this.settings.showX);\n    //     } else if (item === 'showY') {\n    //         this.settings.showY = !this.settings.showY;\n    //         console.log('clicked showY: ' + this.settings.showY);\n    //     } else if (item === 'showZ') {\n    //         this.settings.showZ = !this.settings.showZ;\n    //         console.log('clicked showZ: ' + this.settings.showZ);\n    //     } else if (item === 'overlap') {\n    //         this.settings.overlap = !this.settings.overlap;\n    //         console.log('clicked overlap: ' + this.settings.overlap);\n    //     }\n    // }\n    // check(item: string): void {\n    // }\n\n}\n","<!--suppress ALL -->\n<form class=\"ui form\" [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"inline field\">\n        <div class=\"ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"showX\" class=\"form-control\"\n                   [checked]=\"settings.showX\">\n            <label>showX state: {{settings.showX}}</label>\n        </div>\n    </div>\n    <div class=\"inline field\">\n        <div class=\"teal ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"showY\" class=\"form-control\"\n                   [checked]=\"settings.showY\">\n            <label>showY state: {{settings.showY}}</label>\n        </div>\n    </div>\n    <div class=\"inline field\">\n        <div class=\"ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"showZ\" class=\"form-control\"\n                   [checked]=\"settings.showZ\">\n            <label>showZ state: {{settings.showZ}}</label>\n        </div>\n    </div>\n    <div class=\"inline field\">\n        <div class=\"ui slider checkbox\">\n            <input type=\"checkbox\" formControlName=\"overlap\" class=\"form-control\"\n                   [checked]=\"settings.overlap\">\n            <label>overlap state: {{settings.overlap}}</label>\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Frequency: </label>\n            <input type=\"text\" formControlName=\"freqLow\" class=\"form-control\" placeholder=\"Lower bound (Hz)\">\n        </div>\n        <div class=\"four wide field\">\n            <label> - </label>\n            <input type=\"text\" formControlName=\"freqHigh\" class=\"form-control\" placeholder=\"Upper bound (Hz)\">\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Name: </label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [placeholder]=\"sensor['name']\">\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Class: </label>\n            <input type=\"text\" formControlName=\"class\" class=\"form-control\" [placeholder]=\"sensor['class']\">\n        </div>\n    </div>\n    <div class=\"inline fields\">\n        <div class=\"five wide field\">\n            <label>Location: </label>\n            <input type=\"text\" formControlName=\"location\" class=\"form-control\" [placeholder]=\"sensor['location']\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <div class=\"ui left icon input\">\n            <button *ngIf=\"!loading\" class=\"ui mini fluid teal submit button\">\n                Update\n            </button>\n            <button *ngIf=\"loading\" [disabled]=\"loading\" class=\"ui mini fluid teal loading button\">Updating</button>\n        </div>\n    </div>\n    <div class=\"ui negative message\" *ngIf=\"error\">\n        <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n        {{error}}\n    </div>\n</form>\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from './_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from './_models/user';\nimport {Admin} from './_models/admin';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'routing-app';\n  currentUser: User;\n  currentAdminUser: Admin;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private adminauthenticationService: AdminAuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n  }\n\n  logout(): any {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  adminLogout(): any {\n    this.adminauthenticationService.logout();\n    this.router.navigate(['/admin/login']);\n  }\n}\n","\n<!--<div class=\"ui inverted fixed top menu\">-->\n<!--    <div class=\"ui container\">-->\n<!--        <div class=\"wppc\">-->\n<!--            <div class=\"item\">-->\n<!--                <i class=\"chess queen icon\"></i>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"wppc\">-->\n<!--            <div class=\"header item\">-->\n<!--                Feili Control APP-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <a class=\"item\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a>-->\n<!--        <a class=\"item\" routerLink=\"/application\" routerLinkActive=\"active\">Application</a>-->\n<!--        <a class=\"item\" routerLink=\"/about\" routerLinkActive=\"active\">About</a>-->\n\n<!--&lt;!&ndash;                <div class=\"right menu\">&ndash;&gt;-->\n<!--        <div class=\"phoneContent\">-->\n<!--            <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser\">-->\n<!--                <div class=\"Grey ui button\">-->\n<!--                    Sign out-->\n<!--                </div>-->\n<!--            </a>-->\n<!--            <a class=\"ui item active\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser\">-->\n<!--                <div class=\"teal ui button\">-->\n<!--                    Sign in-->\n<!--                </div>-->\n<!--            </a>-->\n<!--        </div>-->\n<!--&lt;!&ndash;                </div>&ndash;&gt;-->\n\n<!--        <div class=\"right menu\">-->\n<!--            <div class=\"deskContent\">-->\n<!--                <a class=\"ui item active\" (click)=\"logout()\" *ngIf=\"currentUser && ! currentAdminUser\">-->\n<!--                    <div class=\"Grey ui button\">-->\n<!--                        <i class=\"sign-out icon\"></i>Sign out-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--                <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">-->\n<!--                    <div class=\"Grey ui button\">-->\n<!--                        <i class=\"sign-out icon\"></i>Admin sign out-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--                <a class=\"ui item active\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!currentUser && ! currentAdminUser\">-->\n<!--                    <div class=\"teal ui button\">-->\n<!--                        <i class=\"sign-in icon\"></i>Sign in-->\n<!--                    </div>-->\n<!--                </a>-->\n<!--            </div>-->\n<!--        </div>-->\n\n<!--    </div>-->\n<!--</div>-->\n<!--&lt;!&ndash;</div>&ndash;&gt;-->\n\n\n<!--<div class=\"bingcheng\">-->\n<!--    <router-outlet></router-outlet>-->\n<!--</div>-->\n\n\n<!--<div class=\"ui inverted vertical footer segment\">-->\n<!--    <div class=\"ui center aligned container\">-->\n<!--        <div class=\"ui stackable inverted divided equal height stackable grid\">-->\n<!--            <div class=\"three wide column\">-->\n<!--                <h4 class=\"ui inverted header\">About</h4>-->\n<!--                <div class=\"ui inverted link list\">-->\n<!--                    <a href=\"#\" class=\"item\">Sitemap</a>-->\n<!--                    <a href=\"#\" class=\"item\">Contact Us</a>-->\n<!--                    <a href=\"#\" class=\"item\">Religious Ceremonies</a>-->\n<!--                    <a href=\"#\" class=\"item\">Gazebo Plans</a>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div class=\"three wide column\">-->\n<!--                <h4 class=\"ui inverted header\">Services</h4>-->\n<!--                <div class=\"ui inverted link list\">-->\n<!--                    <a href=\"#\" class=\"item\">Banana Pre-Order</a>-->\n<!--                    <a href=\"#\" class=\"item\">DNA FAQ</a>-->\n<!--                    <a href=\"#\" class=\"item\">How To Access</a>-->\n<!--                    <a href=\"#\" class=\"item\">Favorite X-Men</a>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div class=\"seven wide column\">-->\n<!--                <h4 class=\"ui inverted header\">Footer Header</h4>-->\n<!--                <p>Extra space for a call to action inside the footer that could help re-engage users.</p>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"ui section divider\"></div>-->\n<!--        <img src=\"./assets/images/wave.png\" class=\"ui centered mini image\">-->\n<!--        <div class=\"ui horizontal inverted small divided link list\">-->\n<!--            <a class=\"item\" href=\"#\">Site Map</a>-->\n<!--            <a class=\"item\" href=\"#\">Contact Us</a>-->\n<!--            <a class=\"item\" href=\"#\">Terms and Conditions</a>-->\n<!--            <a class=\"item\" href=\"#\">Privacy Policy</a>-->\n<!--        </div>-->\n<!--    </div>-->\n<!--</div>-->\n\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { AuthenticationService } from 'src/app/_services/admin.authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add auth header with jwt if user is logged in and request is to the api url\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    console.log(`Here we use JWT, currentUser.token = ${currentUser}`);\n    if (isLoggedIn && isApiUrl) {\n      console.log(`isLoggedIn && isApiUrl`);\n      console.log(`Here we use JWT, currentUser.token = ${currentUser.token}`);\n      request = request.clone({\n        setHeaders: {\n          'Admin-Authorization': `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n    selector: 'app-admin-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css']\n})\nexport class AdminSignupComponent implements OnInit {\n    signupForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n        // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n        const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}/;\n        const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n        // this.signupForm = this.formBuilder.group({\n        //     name: ['', Validators.required],\n        //     email: ['', Validators.required, Validators.pattern(mailReg)],\n        //     password: ['', Validators.required],\n        //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n        // });\n        this.signupForm = this.formBuilder.group({\n            name: new FormControl('', Validators.compose([\n                Validators.required, Validators.minLength(3), Validators.maxLength(16)])),\n            email: new FormControl('', Validators.compose([\n                Validators.required, Validators.email])),\n            password: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(passwordReg),\n                Validators.minLength(8),\n                Validators.maxLength(16)]))\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.signupForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.signupForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.signup(this.f.name.value, this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/admin/login';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n\n}\n","<!--<p>signup works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user plus icon\"></i>\n      <div class=\"content\">\n        Admin sign up\n      </div>\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"address book icon\"></i>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"User name\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            <div *ngIf=\"f.name.errors.minlength\">Name should be at least 2 characters</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"envelope icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern || f.password.errors.minlength || f.password.errors.maxlength\">\n              Password should be 8-16 characters with combination of letters/numbers/symbols\n            </div>\n          </div>\n        </div>\n\n<!--        <div class=\"field\">-->\n<!--          <div class=\"ui left icon input\">-->\n<!--            <i class=\"key icon\"></i>-->\n<!--            <input type=\"text\" formControlName=\"code\" class=\"form-control\"-->\n<!--                   placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"-->\n<!--                   [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>-->\n<!--          </div>-->\n<!--          <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">-->\n<!--            <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>-->\n<!--            <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>-->\n<!--          </div>-->\n<!--        </div>-->\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Signup\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a strong password.</li>\n            <li>Your password must be at least 6 characters.</li>\n\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n    <div class=\"ui message\">\n      Already have an account?   <a routerLink=\"/admin/login\">Sign In</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\nimport {User} from 'src/app/_models/user';\nimport {RespResult} from '../_models/resp.result';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n    user: User;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAll(): any {\n        console.log('running get all users');\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    getUser(): any {\n        if (this.user) {\n            return this.user;\n        }\n        return null;\n    }\n\n    setUser(user: User): void {\n        this.user = user;\n    }\n\n    updateSettings(settings: string): any {\n        console.log('Start update settings');\n        return this.http.put<RespResult>(`${environment.apiUrl}/users/update`, settings);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {SensorInfo} from 'src/app/_models/sensor.info';\nimport {Sensor} from 'src/app/_models/sensor';\nimport {SensorService} from 'src/app/_services/sensor.service';\n// import { FilterPipe } from '../../_helpers/filter.pipe';\n\n@Component({\n    selector: 'app-equipment',\n    templateUrl: './equipment.component.html',\n    styleUrls: ['./equipment.component.css']\n})\nexport class EquipmentComponent implements OnInit {\n    loading = true;\n    sensorInfo: SensorInfo;\n    sensors: Sensor[];\n    sensorNumber: number;\n    searchClass: string;\n    // sensorId: string;\n    // chart: boolean;\n\n    constructor(private sensorService: SensorService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.sensorInfo = this.sensorService.getSensorInfo();\n        if (this.sensorInfo) {\n            const sensorskey = 'sensors';\n            this.sensors = this.sensorInfo[sensorskey];\n            const numberkey = 'count';\n            this.sensorNumber = this.sensorInfo[numberkey];\n            this.loading = false;\n        }\n        else {\n            this.updateInfo();\n        }\n    }\n\n    updateInfo(): void {\n        this.loading = true;\n        this.sensorService.getAll().pipe(first()).subscribe(sensorInfo => {\n            console.log(sensorInfo);\n            this.sensorInfo = sensorInfo;\n            this.sensorService.setSensorInfo(sensorInfo);\n            const sensorskey = 'sensors';\n            this.sensors = sensorInfo[sensorskey];\n            const numberkey = 'count';\n            this.sensorNumber = sensorInfo[numberkey];\n            this.loading = false;\n        });\n    }\n\n    showChart(sensor): void {\n        // @ts-ignore\n        sensor.showChart = !sensor.showChart;\n    }\n\n    showSettings(sensor): void {\n        sensor.showSettings = !sensor.showSettings;\n    }\n\n    showId(sensor): void {\n        sensor.showId = sensor.showId !== true;\n    }\n}\n","<!--<p>equipment works!</p>-->\n<div class=\"ui two column doubling stackable grid container\">\n    <div class=\"column\">\n        <div class=\"ui left aligned mini labeled button\" tabindex=\"0\">\n            <div *ngIf=\"!loading\" class=\"mini ui teal button\" (click)=\"updateInfo()\">\n                <i class=\"redo icon\"></i> update\n            </div>\n            <button *ngIf=\"loading\" class=\"mini ui teal loading button\">Loading</button>\n            <a class=\"ui basic teal left pointing label\">\n                # Equipment: {{sensorNumber}}\n            </a>\n        </div>\n    </div>\n    <div class=\"column\">\n        <div class=\"ui mini fluid icon input\">\n            <input type=\"search\" [(ngModel)] = searchClass placeholder=\"Names / Classes / Locations ...\">\n            <i class=\"search icon\"></i>\n        </div>\n    </div>\n</div>\n\n<p></p>\n\n<div *ngIf=\"loading\">\n    <div class=\"ui raised link attached card\">\n        <div class=\"ui fluid placeholder\">\n            <div class=\"image header\">\n                <div class=\"medium line\"></div>\n                <div class=\"full line\"></div>\n            </div>\n            <div class=\"paragraph\">\n                <div class=\"full line\"></div>\n                <div class=\"medium line\"></div>\n                <div class=\"medium line\"></div>\n                <div class=\"medium line\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!loading\">\n    <div *ngFor=\"let sensor of sensors | FilterPipe: searchClass\">\n        <div class=\"ui raised link attached card\">\n            <div class=\"content\">\n                <div class=\"header\">\n                    <b (dblclick)=\"showId(sensor)\">\n                        {{sensor[\"name\"]}}\n                    </b>\n                    <button class=\"mini ui gray button\" *ngIf=\"!sensor['valid']\">Not Validated</button>\n                    <button class=\"mini ui teal right labeled icon button\" *ngIf=\"sensor['valid']\"\n                            [routerLink]=\" ['../sensor', sensor._id ]\">\n                        <i class=\"right arrow icon\"></i>\n                        Details\n                    </button>\n                </div>\n                <div class=\"meta\">\n                    <p *ngIf=\"sensor['showId']\"><b>Cheap Id: </b><font face=\"monospace\">{{sensor[\"_id\"]}}</font></p>\n                    <p *ngIf=\"sensor['showId']\"><b>Mac Address: </b> <font\n                            face=\"monospace\">{{sensor[\"mac\"].replaceAll(\"-\", \":\")}}</font></p>\n                    <p><b>Model: </b><font face=\"monospace\">{{sensor[\"model\"]}}</font></p>\n                </div>\n                <div class=\"description\">\n                    <p class=\"category\" *ngIf=\"sensor['valid']\"><b>Class: </b>{{sensor[\"class\"]}}</p>\n                    <p class=\"category\" *ngIf=\"sensor['valid']\"><b>Location: </b>{{sensor[\"location\"]}}</p>\n                </div>\n            </div>\n            <div class=\"content\" *ngIf=\"sensor['showChart']||sensor['showSettings']\">\n                <div class=\"content\">\n                    <app-data-display [sensor]=\"sensor\" *ngIf=\"sensor['showChart']\"></app-data-display>\n                </div>\n                <div class=\"content\">\n                    <app-sensor-settings [sensor]=\"sensor\" *ngIf=\"sensor['showSettings']\"></app-sensor-settings>\n                </div>\n            </div>\n            <div class=\"extra content\" *ngIf=\"sensor['valid']\">\n                <div class=\"right floated author\">\n                    <i class=\"chart line large icon\" (click)=\"showChart(sensor)\"></i>\n                    <i class=\"cog large icon\" (click)=\"showSettings(sensor)\"></i>\n                </div>\n            </div>\n        </div>\n        <p></p>\n    </div>\n</div>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n    NgxMatTimepickerModule\n} from '@angular-material-components/datetime-picker';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {LoginComponent} from './login/login.component';\nimport {ErrorInterceptor} from './_helpers/error.interceptor';\nimport {JwtInterceptor} from './_helpers/jwt.interceptor';\nimport {JwtInterceptor as AdminJwtInterceptor} from './_helpers/admin.jwt.interceptor';\nimport {SignupComponent} from './signup/signup.component';\nimport {ApplicationComponent} from './private-components/application/application.component';\nimport {AboutComponent} from './about/about.component';\nimport {HomeComponent} from './home/home.component';\nimport {EquipmentComponent} from './private-components/equipment/equipment.component';\nimport {SettingsComponent} from './private-components/settings/settings.component';\nimport {InfoComponent} from './private-components/info/info.component';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {DataGetOneComponent} from './private-components/data-get-one/data-get-one.component';\nimport {SensorSettingsComponent} from './private-components/sensor-settings/sensor-settings.component';\nimport {SensorComponent} from './private-components/sensor/sensor.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {DataGetRangeComponent} from './private-components/data-get-range/data-get-range.component';\nimport {DataChartComponent} from './private-components/data-chart/data-chart.component';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\nimport {AdminLoginComponent} from './admin-components/login/login.component';\nimport {AdminSignupComponent} from './admin-components/signup/signup.component';\nimport {AdminControlComponent} from './admin-components/admin-control/admin-control.component';\nimport {AdminHomeComponent} from './admin-components/admin-home/admin-home.component';\nimport {UserFrameComponent} from './user-frame/user-frame.component';\nimport {AdminAddCodeComponent} from './admin-components/admin-add-code/admin-add-code.component';\nimport {DesktopApplicationComponent} from './desktop-application/desktop-application.component';\nimport { FilterPipe } from './_helpers/filter.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent,\n        LoginComponent,\n        SignupComponent,\n        ApplicationComponent,\n        AboutComponent,\n        HomeComponent,\n        EquipmentComponent,\n        SettingsComponent,\n        InfoComponent,\n        DataGetOneComponent,\n        SensorSettingsComponent,\n        SensorComponent,\n        DataGetRangeComponent,\n        DataChartComponent,\n        AdminLoginComponent,\n        AdminSignupComponent,\n        AdminControlComponent,\n        AdminHomeComponent,\n        UserFrameComponent,\n        AdminAddCodeComponent,\n        DesktopApplicationComponent,\n        FilterPipe,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        BrowserAnimationsModule,\n        // MatButtonModule,\n        NgxMatDatetimePickerModule,\n        NgxMatNativeDateModule,\n        NgxMatTimepickerModule,\n        FormsModule,\n        MatInputModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production})\n    ],\n    providers: [\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: AdminJwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n        {provide: LocationStrategy, useClass: HashLocationStrategy},\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n    selector: 'app-admin-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/admin/control']);\n        }\n    }\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            email: ['admin@openmc.cn', Validators.compose([\n                Validators.required, Validators.email])],\n            password: ['password4admin', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.loginForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/admin/control';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<!--<p>login works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user icon\"></i>\n        Admin sign in\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"user icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Sign In\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a right password.</li>\n            <li>You can sign up if you are a new user.</li>\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n\n    <div class=\"ui message\">\n      New to us?   <a routerLink=\"/admin/signup\">Sign Up</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Component, OnInit, Input} from '@angular/core';\n// import {first} from 'rxjs/operators';\n// import {SensorInfo} from '../../_models/sensor.info';\nimport {Sensor} from '../../_models/sensor';\nimport {DataService} from '../../_services/data.service';\nimport {DataPoints} from 'src/app/_models/data.points';\n// import {environment} from '../../../environments/environment';\n\n@Component({\n    selector: 'app-data-display',\n    templateUrl: './data-get-one.component.html',\n    styleUrls: ['./data-get-one.component.css']\n})\nexport class DataGetOneComponent implements OnInit {\n    @Input() sensor: Sensor;\n    sensorId: string;\n    _id: string;\n    time: string;\n    data: [[number]];\n    // sensor: Sensor;\n    dataPoints: DataPoints;\n    loading: boolean;\n    dataPointId: string;\n    emptyData: boolean;\n\n    constructor(private dataService: DataService) {\n    }\n\n    ngOnInit(): void {\n        this.sensorId = this.sensor._id;\n        this.emptyData = true;\n        this.loading = true;\n        console.log(`Start query for sensorId: ${this.sensorId}`);\n        this.dataService.getRecentOne(this.sensorId).subscribe(dataInfo => {\n            // this.dataInfo = dataInfo;\n            console.log(dataInfo);\n            // const datapointsKey = 'Datapoints';\n            // dataInfo = dataInfo[datapointsKey];\n            const cnt = 'count';\n            console.log(`dataInfo[cnt]: ${dataInfo[cnt]}`);\n            if (!dataInfo[cnt]) {\n                this.loading = false;\n                return false;\n            }\n\n            const dps = 'Datapoints';\n            const id = '_id';\n            const dataPointId = dataInfo[dps][0][id];\n            console.log(`Start get data with dataPointId: ${dataPointId}`);\n            this.dataPointId = dataPointId;\n            // this.dataService.getData(dataPointId).subscribe(dataPoints => {\n            //     console.log(dataPoints);\n            //     const dptKey = 'dataPoint';\n            //     this.dataPoints = dataPoints[dptKey];\n            //     const datakey = 'data';\n            //     this.data = this.dataPoints[datakey];\n            //     const timekey = 'time';\n            //     this.time = this.dataPoints[timekey];\n            //     const _idkey = 'time';\n            //     this._id = this.dataPoints[_idkey];\n            // });\n            this.emptyData = false; // Show data because it's not empty\n            this.loading = false; // this must be after emptyData, or it will flash\n        });\n    }\n}\n\n\n","<div class=\"ui fluid card\">\n    <div class=\"content\">\n        <app-data-chart *ngIf=\"!emptyData\" [dataPointId]=\"dataPointId\"></app-data-chart>\n\n        <div *ngIf=\"emptyData&&!loading\">\n            <div class=\"ui comments\">\n                <div class=\"comment\">\n                    <a class=\"avatar\">\n                        <i class=\"teal exclamation circle large icon\"></i>\n                    </a>\n                    <div class=\"content\">\n                        <a class=\"author\">Database is empty</a>\n                        <div class=\"metadata\">\n                            <div class=\"date\">0 data found</div>\n                        </div>\n                        <div class=\"text\">\n                            Please use the sensor for the first time and gather data.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"loading\">\n            <div class=\"ui fluid placeholder\">\n                <div class=\"image header\">\n                    <div class=\"medium line\"></div>\n                    <div class=\"full line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<p></p>\n","import {Component, OnInit} from '@angular/core';\n\nimport {AuthenticationService} from '../_services/authentication.service';\nimport {User} from '../_models/user';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-desktop-application',\n    templateUrl: './desktop-application.component.html',\n    styleUrls: ['./desktop-application.component.css']\n})\nexport class DesktopApplicationComponent implements OnInit {\n    activeRouter: number;\n    title = 'Feili Control';\n    currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    ngOnInit(): void {\n    }\n\n    setRouter(activeRouter: number): void {\n        this.activeRouter = activeRouter;\n    }\n\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/desktop/login']);\n    }\n}\n","<!--<p>application works!</p>-->\n\n<!--<div class=\"ui two column doubling stackable grid container\">-->\n<!--    <div class=\"four wide column\">-->\n<div class=\"deskContent\">\n    <div class=\"ui vertical inverted sidebar menu left visible\">\n        <div class='item'>\n            <a><b> </b></a>\n        </div>\n        <div class='item'>\n            <a class=\"ui logo icon image\">\n                <img src=\"assets/images/wave.png\">\n            </a>\n            <a>\n                <b>Feili Control</b>\n            </a>\n        </div>\n\n        <a class=\"item\" routerLink=\"info\" [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\">\n            User info\n            <i class=\"gray user circle large icon\"></i>\n        </a>\n        <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n            Settings\n            <i class=\"gray whmcs large icon\"></i>\n        </a>\n        <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n            Equipment\n            <i class=\"gray stack exchange large icon\"></i>\n        </a>\n        <!--            <a class=\"item\">-->\n        <!--                Not defined-->\n        <!--                <i class=\"whmcs large icon\"></i>-->\n        <!--            </a>-->\n        <!--            <a class=\"item\">-->\n        <!--                Not defined-->\n        <!--                <i class=\"whmcs large icon\"></i>-->\n        <!--            </a>-->\n        <div class='item'>\n            <a><b> </b></a>\n        </div>\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item\" (click)=\"logout()\" *ngIf=\"currentUser\">\n                    <div class=\"Grey ui fluid button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item\" routerLink=\"/desktop/login\" *ngIf=\"!currentUser\">\n                    <div class=\"teal ui fluid button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n<!--    </div>-->\n<!--    <div class=\"twelve wide stretched column\">-->\n<!--        <div class=\"ui segment\">-->\n<!--            <div class=\"ui medium header\">This is the application page, below is the subpage:</div>-->\n\n\n<div class=\" dimmed\">\n    <!--    <p></p>-->\n    <div class=\"ui container\">\n        <div class=\"main ui container\">\n            <!--        <p></p>-->\n            <div style=\"color:white\"><b>Designed by openmc.cn</b></div>\n            <router-outlet></router-outlet>\n            <div style=\"color:white\"><b>Bingcheng Hu, 2021.9.1</b></div>\n            <!--        <p></p>-->\n            <div class=\"phoneContent\">\n                <div style=\"color:white\"><b>Powered by Feili Electron</b></div>\n                <div style=\"color:white\"><b>http://www.shfeili.com/</b></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--    </div>-->\n<!--</div>-->\n<div class=\"phoneContent\">\n    <div class=\"ui mini labeled icon inverted three item bottom fixed menu\">\n        <a class=\"item\" routerLink=\"info\" [ngClass]=\"{'active': activeRouter===1}\" (click)=\"setRouter(1)\">\n            <i class=\"gray user circle icon\"></i>\n            User\n        </a>\n        <a class=\"item\" routerLink=\"settings\" [ngClass]=\"{'active': activeRouter===2}\" (click)=\"setRouter(2)\">\n            <i class=\"gray whmcs icon\"></i>\n            Settings\n        </a>\n        <a class=\"item\" routerLink=\"equipment\" [ngClass]=\"{'active': activeRouter===3}\" (click)=\"setRouter(3)\">\n            <i class=\"gray stack exchange icon\"></i>\n            Equipment\n        </a>\n    </div>\n</div>\n","import {Component, OnInit, Input, OnChanges, SimpleChanges} from '@angular/core';\n\n// import {Sensor} from '../../_models/sensor';\nimport {DataService} from '../../_services/data.service';\n// import {DataPoints} from 'src/app/_models/data.points';\nimport {DataPoint} from 'src/app/_models/data.point';\n\n@Component({\n    selector: 'app-data-get-range',\n    templateUrl: './data-get-range.component.html',\n    styleUrls: ['./data-get-range.component.css']\n})\nexport class DataGetRangeComponent implements OnInit, OnChanges {\n    @Input() sensorId: string;\n    @Input() start: string;\n    @Input() end: string;\n    loading: boolean;\n    dataPoints: DataPoint[];\n    dataNumber: number;\n\n    constructor(private dataService: DataService) {\n    }\n\n    ngOnInit(): void {\n        this.loading = false;\n        this.dataNumber = 1;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (typeof this.start === 'undefined' || typeof this.end === 'undefined') {\n            return;\n        }\n        this.dataNumber = 0;\n        this.loading = true;\n        this.dataService.getRange(this.sensorId, this.start, this.end).subscribe(dataInfo => {\n            console.log(dataInfo);\n            const cnt = 'count';\n            this.dataNumber = dataInfo[cnt];\n            console.log(`dataInfo[cnt]: ${this.dataNumber}`);\n            if (!dataInfo[cnt]) {\n                this.loading = false;\n                return false;\n            }\n            this.loading = false;\n            const dps = 'Datapoints';\n            this.dataPoints = dataInfo[dps];\n        });\n    }\n\n}\n","<!--<p>data-get-range works!</p>-->\n<!--<div>this.sensorId {{sensorId}}, this.start {{start}}, this.end {{end}}</div>-->\n\n<div *ngIf=\"dataNumber!==0\">\n    <div *ngFor=\"let dataPoint of dataPoints, let num = index\">\n        <!--        id {{num}}: {{dataPoint['_id']}}-->\n        <p></p>\n        <div class=\"ui fluid card\">\n            <div class=\"content\">\n                <app-data-chart [dataPointId]=\"dataPoint['_id']\"></app-data-chart>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"dataNumber===0&&!loading\">\n    <p></p>\n    <div class=\"ui fluid card\">\n        <div class=\"content\">\n            <div class=\"ui comments\">\n                <div class=\"comment\">\n                    <a class=\"avatar\">\n                        <i class=\"teal exclamation circle large icon\"></i>\n                    </a>\n                    <div class=\"content\">\n                        <a class=\"author\">No data in this time range</a>\n                        <div class=\"metadata\">\n                            <div class=\"date\">0 data found</div>\n                        </div>\n                        <div class=\"text\">\n                            Please try other time range.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div *ngIf=\"loading\">\n    <p></p>\n    <div class=\"ui fluid card\">\n        <div class=\"content\">\n            <div class=\"ui fluid placeholder\">\n                <div class=\"image header\">\n                    <div class=\"medium line\"></div>\n                    <div class=\"full line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n                <div class=\"paragraph\">\n                    <div class=\"full line\"></div>\n                    <div class=\"medium line\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add auth header with jwt if user is logged in and request is to the api url\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    console.log(`Here we use JWT, currentUser.token = ${currentUser}`);\n    if (isLoggedIn && isApiUrl) {\n      console.log(`isLoggedIn && isApiUrl`);\n      console.log(`Here we use JWT, currentUser.token = ${currentUser.token}`);\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {AuthenticationService as AdminAuthenticationService} from 'src/app/_services/admin.authentication.service';\nimport {User} from '../../_models/user';\nimport {Admin} from '../../_models/admin';\n\n@Component({\n    selector: 'app-admin-home',\n    templateUrl: './admin-home.component.html',\n    styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent{\n    title = 'routing-app';\n    currentUser: User;\n    currentAdminUser: Admin;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private adminauthenticationService: AdminAuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n        this.adminauthenticationService.currentUser.subscribe(x => this.currentAdminUser = x);\n    }\n\n    logout(): any {\n        this.authenticationService.logout();\n        this.router.navigate(['/user/login']);\n    }\n\n    adminLogout(): any {\n        this.adminauthenticationService.logout();\n        this.router.navigate(['/admin/login']);\n    }\n\n}\n","<div class=\"ui fixed top menu\">\n    <div class=\"ui container\">\n        <div class=\"wppc\">\n            <div class=\"item\">\n                <i class=\"chess queen icon\"></i>\n            </div>\n        </div>\n        <div class=\"wppc\">\n            <div class=\"header item\">\n                Admin Panel\n            </div>\n        </div>\n        <a class=\"item\" routerLink=\"/user/home\" routerLinkActive=\"active\">Home</a>\n        <a class=\"item\" routerLink=\"/user/application\" routerLinkActive=\"active\">Application</a>\n        <a class=\"item\" routerLink=\"/user/about\" routerLinkActive=\"active\">About</a>\n\n        <!--                <div class=\"right menu\">-->\n        <div class=\"phoneContent\">\n            <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">\n                <div class=\"Grey ui button\">\n                    Sign out\n                </div>\n            </a>\n            <a class=\"ui item active\" routerLink=\"/admin/login\" routerLinkActive=\"active\" *ngIf=\"!currentAdminUser\">\n                <div class=\"teal ui button\">\n                    Sign in\n                </div>\n            </a>\n        </div>\n        <!--                </div>-->\n\n        <div class=\"right menu\">\n            <div class=\"deskContent\">\n                <a class=\"ui item active\" (click)=\"adminLogout()\" *ngIf=\"currentAdminUser\">\n                    <div class=\"Grey ui button\">\n                        <i class=\"sign-out icon\"></i>Sign out\n                    </div>\n                </a>\n                <a class=\"ui item active\" routerLink=\"/admin/login\" routerLinkActive=\"active\" *ngIf=\"!currentAdminUser\">\n                    <div class=\"teal ui button\">\n                        <i class=\"sign-in icon\"></i>Sign in\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>\n<!--</div>-->\n\n\n<div class=\"bingcheng\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-control',\n  templateUrl: './admin-control.component.html',\n  styleUrls: ['./admin-control.component.css']\n})\nexport class AdminControlComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-control works!</p>\n\n<a class=\"item\" routerLink=\"/admin/control/add-registration-code\" routerLinkActive=\"active\">Add code</a>\n\n<router-outlet></router-outlet>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\nimport {Admin} from 'src/app/_models/admin';\nimport {Message} from 'src/app/_models/message';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<Admin>;\n  public currentUser: Observable<Admin>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<Admin>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): Admin {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/admins/login`, {email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  signup(name: string, email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/admins/signup`, {name, email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        // localStorage.setItem('currentUser', JSON.stringify(user));\n        // this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  addCode(code: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/registration-code/add`, {code})\n        .pipe(map(message => {\n          return message;\n        }));\n  }\n\n  logout(): any {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpHandler, HttpEvent, HttpInterceptor} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        console.log('401 Error');\n        this.authenticationService.logout();\n        location.reload(true);\n      } else if (err.status === 0) {\n        // Network error: server side not reachable\n        err.status = 500.11;\n        err.error.message = 'The server is under maintenance and the service is temporarily unavailable';\n      }\n      console.log(`err.error.message: ${err.error.message}, err.statusText: ${err.statusText}, err: `);\n      console.log(err);\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '../../environments/environment';\nimport {User} from 'src/app/_models/user';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/users/login`, {email, password})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  signup(name: string, email: string, password: string, registrationCode: string): any {\n    return this.http.post<any>(`${environment.apiUrl}/users/signup`, {name, email, password, registrationCode})\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        // localStorage.setItem('currentUser', JSON.stringify(user));\n        // this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  logout(): any {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\nimport {environment} from 'src/environments/environment';\n// import {Data} from 'src/app/_models/data';\nimport {DataPoints} from 'src/app/_models/data.points';\nimport {DataInfo} from 'src/app/_models/data.info';\nimport {first} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class DataService {\n    // dataInfo: DataInfo;\n    dataPointId: string;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getRecentOne(sensorIdIn: string): any {\n        console.log('running get data/recent');\n        // const body = {\n        //     sensorId: sensorIdIn,\n        //     dataNumber: 1,\n        // };\n\n        const params = new HttpParams()\n            .set('sensorId', sensorIdIn)\n            .set('dataNumber', '1');\n\n        return this.http.get<DataInfo>(`${environment.apiUrl}/data/recent`,\n            {params});\n        // return this.http.get<DataPoints>(`${environment.apiUrl}/data/${this.dataPointId}`,\n        //     {responseType: 'json'});\n    }\n\n    getRange(sensorIdIn: string, start: string, end: string): any {\n        console.log('running get data/recent');\n        const params = new HttpParams()\n            .set('sensorId', sensorIdIn)\n            .set('start', start)\n            .set('end', end);\n\n        return this.http.get<DataInfo>(`${environment.apiUrl}/data/timerange`,\n            {params});\n        // return this.http.get<DataPoints>(`${environment.apiUrl}/data/${this.dataPointId}`,\n        //     {responseType: 'json'});\n    }\n\n    getData(dataPointId: string): any {\n        return this.http.get<DataPoints>(`${environment.apiUrl}/data/${dataPointId}`,\n            {responseType: 'json'});\n    }\n\n    // getData(): any {\n    //     return this.http.get<DataInfo>(`${environment.apiUrl}/sensors`).pipe(first()).subscribe(dataInfo => {\n    //         console.log(sensorInfo);\n    //         this.sensorInfo = sensorInfo;\n    //         this.loading = false;\n    //         const sensorskey = 'sensors';\n    //         this.sensors = sensorInfo[sensorskey];\n    //         const numberkey = 'count';\n    //         this.sensorNumber = sensorInfo[numberkey];\n    //     });\n    // }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'FilterPipe'\n})\nexport class FilterPipe implements PipeTransform {\n\n    transform(value: any, input: any): any {\n        if (input) {\n            return value.filter(val => (val.class.includes(input) || val.location.includes(input) || val.name.includes(input)));\n        } else {\n            return value;\n        }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/admin.authentication.service';\n\n@Component({\n  selector: 'app-admin-add-code',\n  templateUrl: './admin-add-code.component.html',\n  styleUrls: ['./admin-add-code.component.css']\n})\nexport class AdminAddCodeComponent implements OnInit {\n  signupForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error = '';\n  success = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private authenticationService: AuthenticationService\n  ) {\n    // if (this.authenticationService.currentUserValue) {\n    //   this.router.navigate(['/']);\n    // }\n  }\n\n  ngOnInit(): void {\n    // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n    // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n    const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}$/;\n    const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n    // this.signupForm = this.formBuilder.group({\n    //     name: ['', Validators.required],\n    //     email: ['', Validators.required, Validators.pattern(mailReg)],\n    //     password: ['', Validators.required],\n    //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n    // });\n    this.signupForm = this.formBuilder.group({\n      code: new FormControl('', Validators.compose([\n        Validators.required, Validators.pattern(registerCodeReg)]))\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  // tslint:disable-next-line:typedef\n  get f() {\n    return this.signupForm.controls;\n  }\n\n  // tslint:disable-next-line:typedef\n  onSubmit() {\n    this.success = false;\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.addCode(this.f.code.value)\n        .pipe(first())\n        .subscribe({\n          next: () => {\n            this.error = '';\n            this.success = true;\n            this.loading = false;\n          },\n          error: error => {\n            this.error = error;\n            this.loading = false;\n          }\n        });\n  }\n\n  removeIcon(): void {\n    this.error = '';\n  }\n}\n","<p>admin-add-code works!</p>\n\n<div class=\"ui middle aligned center aligned grid\">\n    <div class=\"column\">\n        <h2 class=\"ui teal image header\">\n            <i class=\"user plus icon\"></i>\n            <div class=\"content\">\n                Add a new registration code\n            </div>\n        </h2>\n\n        <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"ui stacked segment\">\n\n                <div class=\"field\">\n                    <div class=\"ui left icon input\">\n                        <i class=\"key icon\"></i>\n                        <input type=\"text\" formControlName=\"code\" class=\"form-control\"\n                               placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n                               [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>\n                    </div>\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>\n                    </div>\n                </div>\n\n                <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n                <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n                    <span *ngIf=\"loading\" class=\"ui loader\"></span>\n                    Submit\n                </button>\n\n                <div class=\"ui negative message\" *ngIf=\"error\">\n                    <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n                    <div class=\"header\">\n                        {{error}}\n                    </div>\n                    <ul class=\"list\">\n                        <li>Please enter a valid code</li>\n                        <li>The shape should be like:\n                            <p>XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</li>\n                    </ul>\n                </div>\n\n                <div class=\"ui green message\" *ngIf=\"success\">\n                    <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n                    <div class=\"header\">\n                        Add registration code success!\n                    </div>\n                    <ul class=\"list\">\n                        <li>Current registration code is:\n                            <p>{{f.code.value}}</li>\n                    </ul>\n                </div>\n\n            </div>\n\n        </form>\n\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n    signupForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        // const mailReg = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n        // const registerCodeReg = '([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}';\n        const mailReg = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n        const registerCodeReg = /([A-Za-z0-9]{5}-){4}[A-Za-z0-9]{5}$/;\n        const passwordReg = /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[\\(\\)])+$)([^(0-9a-zA-Z)]|[\\(\\)]|[a-z]|[A-Z]|[0-9]){6,}$/;\n        // this.signupForm = this.formBuilder.group({\n        //     name: ['', Validators.required],\n        //     email: ['', Validators.required, Validators.pattern(mailReg)],\n        //     password: ['', Validators.required],\n        //     code: ['', Validators.required, Validators.pattern(registerCodeReg)]\n        // });\n        this.signupForm = this.formBuilder.group({\n            name: new FormControl('', Validators.compose([\n                Validators.required, Validators.minLength(3), Validators.maxLength(16)])),\n            email: new FormControl('', Validators.compose([\n                Validators.required, Validators.email])),\n            password: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(passwordReg),\n                Validators.minLength(8),\n                Validators.maxLength(16)])),\n            code: new FormControl('', Validators.compose([\n                Validators.required, Validators.pattern(registerCodeReg)]))\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.signupForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.signupForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.signup(this.f.name.value, this.f.email.value, this.f.password.value, this.f.code.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || '/login';\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n\n}\n","<!--<p>signup works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user plus icon\"></i>\n      <div class=\"content\">\n        Sign up a new account\n      </div>\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"address book icon\"></i>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"User name\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            <div *ngIf=\"f.name.errors.minlength\">Name should be at least 2 characters</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"envelope icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern || f.password.errors.minlength || f.password.errors.maxlength\">\n              Password should be 8-16 characters with combination of letters/numbers/symbols\n            </div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"key icon\"></i>\n            <input type=\"text\" formControlName=\"code\" class=\"form-control\"\n                   placeholder=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.code.errors.required\">Registration Code is required</div>\n            <div *ngIf=\"f.code.errors.pattern\">Registration Code is invalid</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Signup\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a strong password.</li>\n            <li>Your password must be at least 6 characters.</li>\n\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n    <div class=\"ui message\">\n      Already have an account?   <a routerLink=\"../login\">Sign In</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {LoginComponent} from './login/login.component';\nimport {SignupComponent} from './signup/signup.component';\nimport {ApplicationComponent} from './private-components/application/application.component';\nimport {AboutComponent} from './about/about.component';\nimport {HomeComponent} from './home/home.component';\nimport {EquipmentComponent} from './private-components/equipment/equipment.component';\nimport {SettingsComponent} from './private-components/settings/settings.component';\nimport {InfoComponent} from './private-components/info/info.component';\nimport {SensorComponent} from './private-components/sensor/sensor.component';\nimport {AdminLoginComponent} from './admin-components/login/login.component';\nimport {AdminSignupComponent} from './admin-components/signup/signup.component';\nimport {AdminControlComponent} from './admin-components/admin-control/admin-control.component';\nimport {AdminHomeComponent} from './admin-components/admin-home/admin-home.component';\nimport {UserFrameComponent} from './user-frame/user-frame.component';\nimport {AdminAddCodeComponent} from './admin-components/admin-add-code/admin-add-code.component';\nimport {DesktopApplicationComponent} from './desktop-application/desktop-application.component';\nimport {YourGuard} from './_helpers/your.guard';\nimport {YourGuard as DesktopGuard} from './_helpers/desktop.guard';\nimport {AdminGuard} from './_helpers/admin.guard';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'user', pathMatch: 'full'},\n    {\n        path: 'user', component: UserFrameComponent,\n        children: [\n            {path: '', component: HomeComponent},\n            {path: 'home', component: HomeComponent},\n            {\n                path: 'application', component: ApplicationComponent, canActivate: [YourGuard],\n                children: [\n                    {path: '', component: InfoComponent},\n                    {path: 'info', component: InfoComponent},\n                    {path: 'settings', component: SettingsComponent},\n                    {path: 'equipment', component: EquipmentComponent},\n                    {path: 'sensor/:sensorId', component: SensorComponent},\n                ]\n            },\n            {path: 'about', component: AboutComponent},\n            {path: 'login', component: LoginComponent},\n            {path: 'signup', component: SignupComponent},\n        ]\n    },\n    // {path: '', component: HomeComponent},\n    // {path: 'home', component: HomeComponent},\n    // {\n    //     path: 'application', component: ApplicationComponent, canActivate: [YourGuard],\n    //     children: [\n    //         {path: '', component: InfoComponent},\n    //         {path: 'info', component: InfoComponent},\n    //         {path: 'settings', component: SettingsComponent},\n    //         {path: 'equipment', component: EquipmentComponent},\n    //         {path: 'sensor/:sensorId', component: SensorComponent},\n    //     ]\n    // },\n    // {path: 'about', component: AboutComponent},\n    // {path: 'login', component: LoginComponent},\n    // {path: 'signup', component: SignupComponent},\n    {\n        path: 'admin', component: AdminHomeComponent,\n        children: [\n            {path: '', component: AdminControlComponent},\n            {path: 'login', component: AdminLoginComponent},\n            {path: 'signup', component: AdminSignupComponent},\n            {\n                path: 'control', component: AdminControlComponent, canActivate: [AdminGuard],\n                children: [\n                    {path: 'add-registration-code', component: AdminAddCodeComponent},\n                ]\n            }\n        ]\n    },\n    {\n        path: 'desktop', component: DesktopApplicationComponent,\n        children: [\n            {path: '', component: InfoComponent, canActivate: [DesktopGuard]},\n            {path: 'login', component: LoginComponent},\n            {path: 'signup', component: SignupComponent},\n            {path: 'info', component: InfoComponent, canActivate: [DesktopGuard]},\n            {path: 'settings', component: SettingsComponent, canActivate: [DesktopGuard]},\n            {path: 'equipment', component: EquipmentComponent, canActivate: [DesktopGuard]},\n            {path: 'sensor/:sensorId', component: SensorComponent, canActivate: [DesktopGuard]},\n        ]\n    },\n    {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {first} from 'rxjs/operators';\n\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            email: ['email@gmail.com', Validators.compose([\n                Validators.required, Validators.email])],\n            password: ['pass', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    // tslint:disable-next-line:typedef\n    get f() {\n        return this.loginForm.controls;\n    }\n\n    // tslint:disable-next-line:typedef\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from route parameters or default to '/'\n                    const currentMain = this.router.url.split('/')[1];\n                    console.log('this.router.url');\n                    console.log(this.router.url);\n                    const returnUrl = this.route.snapshot.queryParams.returnUrl || currentMain;\n                    this.router.navigate([returnUrl]);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    removeIcon(): void {\n        this.error = '';\n    }\n\n}\n","<!--<p>login works!</p>-->\n<div class=\"ui middle aligned center aligned grid\">\n  <div class=\"column\">\n    <h2 class=\"ui teal image header\">\n      <i class=\"user icon\"></i>\n        Sign in to your account\n    </h2>\n\n    <form class=\"ui large form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"ui stacked segment\">\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"user icon\"></i>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail address\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email is invalid, please check your email</div>\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <div class=\"ui left icon input\">\n            <i class=\"lock icon\"></i>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n          </div>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          </div>\n        </div>\n\n        <!--        <div class=\"ui negative message transition hidden\"></div>-->\n\n        <button [disabled]=\"loading\" class=\"ui fluid large teal submit button\">\n          <span *ngIf=\"loading\" class=\"ui loader\"></span>\n          Sign In\n        </button>\n\n        <div class=\"ui negative message\" *ngIf=\"error\">\n          <i class=\"close icon\" (click)=\"removeIcon()\"></i>\n          <div class=\"header\">\n            {{error}}\n          </div>\n          <ul class=\"list\">\n            <li>Please enter a valid e-mail and a right password.</li>\n            <li>You can sign up if you are a new user.</li>\n          </ul>\n        </div>\n\n      </div>\n\n    </form>\n\n    <div class=\"ui message\">\n      New to us?   <a routerLink=\"../signup\">Sign Up</a>\n    </div>\n\n  </div>\n</div>\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}